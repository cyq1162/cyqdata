<?xml version="1.0"?>
<doc>
    <assembly>
        <name>CYQ.Data.Fakes</name>
    </assembly>
    <members>
        <member name="T:CYQ.Data.Aop.Fakes.ShimAopCustomDbPara">
            <summary>CYQ.Data.Aop.AopCustomDbPara 的填充码类型</summary>
        </member>
        <member name="M:CYQ.Data.Aop.Fakes.ShimAopCustomDbPara.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:CYQ.Data.Aop.Fakes.ShimAopCustomDbPara.#ctor(CYQ.Data.Aop.AopCustomDbPara)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:CYQ.Data.Aop.Fakes.ShimAopCustomDbPara.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:CYQ.Data.Aop.Fakes.ShimAopCustomDbPara.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:CYQ.Data.Aop.Fakes.ShimAopCustomDbPara.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:CYQ.Data.Aop.Fakes.ShimAopCustomDbPara.Constructor">
            <summary>设置 AopCustomDbPara.AopCustomDbPara() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Aop.Fakes.ShimAopCustomDbPara.ParaDbTypeGet">
            <summary>设置 AopCustomDbPara.get_ParaDbType() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Aop.Fakes.ShimAopCustomDbPara.ParaDbTypeSetDbType">
            <summary>设置 AopCustomDbPara.set_ParaDbType(DbType value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Aop.Fakes.ShimAopCustomDbPara.ParaNameGet">
            <summary>设置 AopCustomDbPara.get_ParaName() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Aop.Fakes.ShimAopCustomDbPara.ParaNameSetString">
            <summary>设置 AopCustomDbPara.set_ParaName(String value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Aop.Fakes.ShimAopCustomDbPara.ValueGet">
            <summary>设置 AopCustomDbPara.get_Value() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Aop.Fakes.ShimAopCustomDbPara.ValueSetObject">
            <summary>设置 AopCustomDbPara.set_Value(Object value) 的 填充码</summary>
        </member>
        <member name="T:CYQ.Data.Aop.Fakes.ShimAopCustomDbPara.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:CYQ.Data.Aop.Fakes.ShimAopCustomDbPara.AllInstances.ParaDbTypeGet">
            <summary>设置 AopCustomDbPara.get_ParaDbType() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Aop.Fakes.ShimAopCustomDbPara.AllInstances.ParaDbTypeSetDbType">
            <summary>设置 AopCustomDbPara.set_ParaDbType(DbType value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Aop.Fakes.ShimAopCustomDbPara.AllInstances.ParaNameGet">
            <summary>设置 AopCustomDbPara.get_ParaName() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Aop.Fakes.ShimAopCustomDbPara.AllInstances.ParaNameSetString">
            <summary>设置 AopCustomDbPara.set_ParaName(String value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Aop.Fakes.ShimAopCustomDbPara.AllInstances.ValueGet">
            <summary>设置 AopCustomDbPara.get_Value() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Aop.Fakes.ShimAopCustomDbPara.AllInstances.ValueSetObject">
            <summary>设置 AopCustomDbPara.set_Value(Object value) 的 填充码</summary>
        </member>
        <member name="T:CYQ.Data.Aop.Fakes.ShimAopInfo">
            <summary>CYQ.Data.Aop.AopInfo 的填充码类型</summary>
        </member>
        <member name="M:CYQ.Data.Aop.Fakes.ShimAopInfo.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:CYQ.Data.Aop.Fakes.ShimAopInfo.#ctor(CYQ.Data.Aop.AopInfo)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:CYQ.Data.Aop.Fakes.ShimAopInfo.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:CYQ.Data.Aop.Fakes.ShimAopInfo.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:CYQ.Data.Aop.Fakes.ShimAopInfo.AopParaGet">
            <summary>设置 AopInfo.get_AopPara() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Aop.Fakes.ShimAopInfo.AopParaSetObject">
            <summary>设置 AopInfo.set_AopPara(Object value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Aop.Fakes.ShimAopInfo.AutoSetValueGet">
            <summary>设置 AopInfo.get_AutoSetValue() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Aop.Fakes.ShimAopInfo.AutoSetValueSetBoolean">
            <summary>设置 AopInfo.set_AutoSetValue(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Aop.Fakes.ShimAopInfo.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:CYQ.Data.Aop.Fakes.ShimAopInfo.ConnectionStringGet">
            <summary>设置 AopInfo.get_ConnectionString() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Aop.Fakes.ShimAopInfo.Constructor">
            <summary>设置 AopInfo.AopInfo() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Aop.Fakes.ShimAopInfo.CustomDbParaGet">
            <summary>设置 AopInfo.get_CustomDbPara() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Aop.Fakes.ShimAopInfo.CustomDbParaSetListOfAopCustomDbPara">
            <summary>设置 AopInfo.set_CustomDbPara(List`1&lt;AopCustomDbPara&gt; value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Aop.Fakes.ShimAopInfo.DBParametersGet">
            <summary>设置 AopInfo.get_DBParameters() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Aop.Fakes.ShimAopInfo.DBParametersSetDbParameterCollection">
            <summary>设置 AopInfo.set_DBParameters(DbParameterCollection value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Aop.Fakes.ShimAopInfo.DalTypeGet">
            <summary>设置 AopInfo.get_DalType() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Aop.Fakes.ShimAopInfo.DataBaseGet">
            <summary>设置 AopInfo.get_DataBase() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Aop.Fakes.ShimAopInfo.ExeResultGet">
            <summary>设置 AopInfo.get_ExeResult() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Aop.Fakes.ShimAopInfo.ExeResultSetObject">
            <summary>设置 AopInfo.set_ExeResult(Object value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Aop.Fakes.ShimAopInfo.InsertOpGet">
            <summary>设置 AopInfo.get_InsertOp() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Aop.Fakes.ShimAopInfo.InsertOpSetInsertOp">
            <summary>设置 AopInfo.set_InsertOp(InsertOp value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Aop.Fakes.ShimAopInfo.IsProcGet">
            <summary>设置 AopInfo.get_IsProc() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Aop.Fakes.ShimAopInfo.IsProcSetBoolean">
            <summary>设置 AopInfo.set_IsProc(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Aop.Fakes.ShimAopInfo.IsSuccessGet">
            <summary>设置 AopInfo.get_IsSuccess() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Aop.Fakes.ShimAopInfo.IsSuccessSetBoolean">
            <summary>设置 AopInfo.set_IsSuccess(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Aop.Fakes.ShimAopInfo.IsTransactionGet">
            <summary>设置 AopInfo.get_IsTransaction() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Aop.Fakes.ShimAopInfo.IsTransactionSetBoolean">
            <summary>设置 AopInfo.set_IsTransaction(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Aop.Fakes.ShimAopInfo.MActionGet">
            <summary>设置 AopInfo.get_MAction() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Aop.Fakes.ShimAopInfo.MActionSetMAction">
            <summary>设置 AopInfo.set_MAction(MAction value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Aop.Fakes.ShimAopInfo.MProcGet">
            <summary>设置 AopInfo.get_MProc() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Aop.Fakes.ShimAopInfo.MProcSetMProc">
            <summary>设置 AopInfo.set_MProc(MProc value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Aop.Fakes.ShimAopInfo.PageIndexGet">
            <summary>设置 AopInfo.get_PageIndex() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Aop.Fakes.ShimAopInfo.PageIndexSetInt32">
            <summary>设置 AopInfo.set_PageIndex(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Aop.Fakes.ShimAopInfo.PageSizeGet">
            <summary>设置 AopInfo.get_PageSize() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Aop.Fakes.ShimAopInfo.PageSizeSetInt32">
            <summary>设置 AopInfo.set_PageSize(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Aop.Fakes.ShimAopInfo.ProcNameGet">
            <summary>设置 AopInfo.get_ProcName() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Aop.Fakes.ShimAopInfo.ProcNameSetString">
            <summary>设置 AopInfo.set_ProcName(String value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Aop.Fakes.ShimAopInfo.RowCountGet">
            <summary>设置 AopInfo.get_RowCount() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Aop.Fakes.ShimAopInfo.RowCountSetInt32">
            <summary>设置 AopInfo.set_RowCount(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Aop.Fakes.ShimAopInfo.RowGet">
            <summary>设置 AopInfo.get_Row() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Aop.Fakes.ShimAopInfo.RowSetMDataRow">
            <summary>设置 AopInfo.set_Row(MDataRow value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Aop.Fakes.ShimAopInfo.SelectColumnsGet">
            <summary>设置 AopInfo.get_SelectColumns() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Aop.Fakes.ShimAopInfo.SelectColumnsSetObjectArray">
            <summary>设置 AopInfo.set_SelectColumns(Object[] value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Aop.Fakes.ShimAopInfo.TableGet">
            <summary>设置 AopInfo.get_Table() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Aop.Fakes.ShimAopInfo.TableListGet">
            <summary>设置 AopInfo.get_TableList() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Aop.Fakes.ShimAopInfo.TableListSetListOfMDataTable">
            <summary>设置 AopInfo.set_TableList(List`1&lt;MDataTable&gt; value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Aop.Fakes.ShimAopInfo.TableNameGet">
            <summary>设置 AopInfo.get_TableName() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Aop.Fakes.ShimAopInfo.TableNameSetString">
            <summary>设置 AopInfo.set_TableName(String value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Aop.Fakes.ShimAopInfo.TableSetMDataTable">
            <summary>设置 AopInfo.set_Table(MDataTable value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Aop.Fakes.ShimAopInfo.UpdateExpressionGet">
            <summary>设置 AopInfo.get_UpdateExpression() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Aop.Fakes.ShimAopInfo.UpdateExpressionSetString">
            <summary>设置 AopInfo.set_UpdateExpression(String value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Aop.Fakes.ShimAopInfo.WhereGet">
            <summary>设置 AopInfo.get_Where() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Aop.Fakes.ShimAopInfo.WhereSetObject">
            <summary>设置 AopInfo.set_Where(Object value) 的 填充码</summary>
        </member>
        <member name="T:CYQ.Data.Aop.Fakes.ShimAopInfo.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:CYQ.Data.Aop.Fakes.ShimAopInfo.AllInstances.AopParaGet">
            <summary>设置 AopInfo.get_AopPara() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Aop.Fakes.ShimAopInfo.AllInstances.AopParaSetObject">
            <summary>设置 AopInfo.set_AopPara(Object value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Aop.Fakes.ShimAopInfo.AllInstances.AutoSetValueGet">
            <summary>设置 AopInfo.get_AutoSetValue() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Aop.Fakes.ShimAopInfo.AllInstances.AutoSetValueSetBoolean">
            <summary>设置 AopInfo.set_AutoSetValue(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Aop.Fakes.ShimAopInfo.AllInstances.ConnectionStringGet">
            <summary>设置 AopInfo.get_ConnectionString() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Aop.Fakes.ShimAopInfo.AllInstances.CustomDbParaGet">
            <summary>设置 AopInfo.get_CustomDbPara() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Aop.Fakes.ShimAopInfo.AllInstances.CustomDbParaSetListOfAopCustomDbPara">
            <summary>设置 AopInfo.set_CustomDbPara(List`1&lt;AopCustomDbPara&gt; value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Aop.Fakes.ShimAopInfo.AllInstances.DBParametersGet">
            <summary>设置 AopInfo.get_DBParameters() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Aop.Fakes.ShimAopInfo.AllInstances.DBParametersSetDbParameterCollection">
            <summary>设置 AopInfo.set_DBParameters(DbParameterCollection value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Aop.Fakes.ShimAopInfo.AllInstances.DalTypeGet">
            <summary>设置 AopInfo.get_DalType() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Aop.Fakes.ShimAopInfo.AllInstances.DataBaseGet">
            <summary>设置 AopInfo.get_DataBase() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Aop.Fakes.ShimAopInfo.AllInstances.ExeResultGet">
            <summary>设置 AopInfo.get_ExeResult() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Aop.Fakes.ShimAopInfo.AllInstances.ExeResultSetObject">
            <summary>设置 AopInfo.set_ExeResult(Object value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Aop.Fakes.ShimAopInfo.AllInstances.InsertOpGet">
            <summary>设置 AopInfo.get_InsertOp() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Aop.Fakes.ShimAopInfo.AllInstances.InsertOpSetInsertOp">
            <summary>设置 AopInfo.set_InsertOp(InsertOp value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Aop.Fakes.ShimAopInfo.AllInstances.IsProcGet">
            <summary>设置 AopInfo.get_IsProc() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Aop.Fakes.ShimAopInfo.AllInstances.IsProcSetBoolean">
            <summary>设置 AopInfo.set_IsProc(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Aop.Fakes.ShimAopInfo.AllInstances.IsSuccessGet">
            <summary>设置 AopInfo.get_IsSuccess() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Aop.Fakes.ShimAopInfo.AllInstances.IsSuccessSetBoolean">
            <summary>设置 AopInfo.set_IsSuccess(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Aop.Fakes.ShimAopInfo.AllInstances.IsTransactionGet">
            <summary>设置 AopInfo.get_IsTransaction() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Aop.Fakes.ShimAopInfo.AllInstances.IsTransactionSetBoolean">
            <summary>设置 AopInfo.set_IsTransaction(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Aop.Fakes.ShimAopInfo.AllInstances.MActionGet">
            <summary>设置 AopInfo.get_MAction() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Aop.Fakes.ShimAopInfo.AllInstances.MActionSetMAction">
            <summary>设置 AopInfo.set_MAction(MAction value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Aop.Fakes.ShimAopInfo.AllInstances.MProcGet">
            <summary>设置 AopInfo.get_MProc() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Aop.Fakes.ShimAopInfo.AllInstances.MProcSetMProc">
            <summary>设置 AopInfo.set_MProc(MProc value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Aop.Fakes.ShimAopInfo.AllInstances.PageIndexGet">
            <summary>设置 AopInfo.get_PageIndex() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Aop.Fakes.ShimAopInfo.AllInstances.PageIndexSetInt32">
            <summary>设置 AopInfo.set_PageIndex(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Aop.Fakes.ShimAopInfo.AllInstances.PageSizeGet">
            <summary>设置 AopInfo.get_PageSize() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Aop.Fakes.ShimAopInfo.AllInstances.PageSizeSetInt32">
            <summary>设置 AopInfo.set_PageSize(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Aop.Fakes.ShimAopInfo.AllInstances.ProcNameGet">
            <summary>设置 AopInfo.get_ProcName() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Aop.Fakes.ShimAopInfo.AllInstances.ProcNameSetString">
            <summary>设置 AopInfo.set_ProcName(String value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Aop.Fakes.ShimAopInfo.AllInstances.RowCountGet">
            <summary>设置 AopInfo.get_RowCount() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Aop.Fakes.ShimAopInfo.AllInstances.RowCountSetInt32">
            <summary>设置 AopInfo.set_RowCount(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Aop.Fakes.ShimAopInfo.AllInstances.RowGet">
            <summary>设置 AopInfo.get_Row() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Aop.Fakes.ShimAopInfo.AllInstances.RowSetMDataRow">
            <summary>设置 AopInfo.set_Row(MDataRow value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Aop.Fakes.ShimAopInfo.AllInstances.SelectColumnsGet">
            <summary>设置 AopInfo.get_SelectColumns() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Aop.Fakes.ShimAopInfo.AllInstances.SelectColumnsSetObjectArray">
            <summary>设置 AopInfo.set_SelectColumns(Object[] value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Aop.Fakes.ShimAopInfo.AllInstances.TableGet">
            <summary>设置 AopInfo.get_Table() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Aop.Fakes.ShimAopInfo.AllInstances.TableListGet">
            <summary>设置 AopInfo.get_TableList() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Aop.Fakes.ShimAopInfo.AllInstances.TableListSetListOfMDataTable">
            <summary>设置 AopInfo.set_TableList(List`1&lt;MDataTable&gt; value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Aop.Fakes.ShimAopInfo.AllInstances.TableNameGet">
            <summary>设置 AopInfo.get_TableName() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Aop.Fakes.ShimAopInfo.AllInstances.TableNameSetString">
            <summary>设置 AopInfo.set_TableName(String value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Aop.Fakes.ShimAopInfo.AllInstances.TableSetMDataTable">
            <summary>设置 AopInfo.set_Table(MDataTable value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Aop.Fakes.ShimAopInfo.AllInstances.UpdateExpressionGet">
            <summary>设置 AopInfo.get_UpdateExpression() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Aop.Fakes.ShimAopInfo.AllInstances.UpdateExpressionSetString">
            <summary>设置 AopInfo.set_UpdateExpression(String value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Aop.Fakes.ShimAopInfo.AllInstances.WhereGet">
            <summary>设置 AopInfo.get_Where() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Aop.Fakes.ShimAopInfo.AllInstances.WhereSetObject">
            <summary>设置 AopInfo.set_Where(Object value) 的 填充码</summary>
        </member>
        <member name="T:CYQ.Data.Aop.Fakes.StubAopCustomDbPara">
            <summary>CYQ.Data.Aop.AopCustomDbPara 的存根类型</summary>
        </member>
        <member name="M:CYQ.Data.Aop.Fakes.StubAopCustomDbPara.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:CYQ.Data.Aop.Fakes.StubAopCustomDbPara.InitializeStub">
            <summary>初始化 type StubAopCustomDbPara 的新实例</summary>
        </member>
        <member name="P:CYQ.Data.Aop.Fakes.StubAopCustomDbPara.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:CYQ.Data.Aop.Fakes.StubAopCustomDbPara.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:CYQ.Data.Aop.Fakes.StubAopCustomDbPara.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:CYQ.Data.Aop.Fakes.StubAopInfo">
            <summary>CYQ.Data.Aop.AopInfo 的存根类型</summary>
        </member>
        <member name="M:CYQ.Data.Aop.Fakes.StubAopInfo.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:CYQ.Data.Aop.Fakes.StubAopInfo.InitializeStub">
            <summary>初始化 type StubAopInfo 的新实例</summary>
        </member>
        <member name="P:CYQ.Data.Aop.Fakes.StubAopInfo.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:CYQ.Data.Aop.Fakes.StubAopInfo.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:CYQ.Data.Aop.Fakes.StubAopInfo.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:CYQ.Data.Aop.Fakes.StubIAop">
            <summary>CYQ.Data.Aop.IAop 的存根类型</summary>
        </member>
        <member name="M:CYQ.Data.Aop.Fakes.StubIAop.#ctor">
            <summary>初始化 type StubIAop 的新实例</summary>
        </member>
        <member name="F:CYQ.Data.Aop.Fakes.StubIAop.BeginAopEnumAopInfo">
            <summary>设置 IAop.Begin(AopEnum action, AopInfo aopInfo) 的 stub</summary>
        </member>
        <member name="M:CYQ.Data.Aop.Fakes.StubIAop.cyqd::CYQ#Data#Aop#IAop#Begin(CYQ.Data.Aop.AopEnum,CYQ.Data.Aop.AopInfo)">
            <summary>设置 IAop.Begin(AopEnum action, AopInfo aopInfo) 的 存根</summary>
        </member>
        <member name="M:CYQ.Data.Aop.Fakes.StubIAop.cyqd::CYQ#Data#Aop#IAop#Clone">
            <summary>设置 IAop.Clone() 的 存根</summary>
        </member>
        <member name="M:CYQ.Data.Aop.Fakes.StubIAop.cyqd::CYQ#Data#Aop#IAop#End(CYQ.Data.Aop.AopEnum,CYQ.Data.Aop.AopInfo)">
            <summary>设置 IAop.End(AopEnum action, AopInfo aopInfo) 的 存根</summary>
        </member>
        <member name="M:CYQ.Data.Aop.Fakes.StubIAop.cyqd::CYQ#Data#Aop#IAop#OnError(System.String)">
            <summary>设置 IAop.OnError(String msg) 的 存根</summary>
        </member>
        <member name="M:CYQ.Data.Aop.Fakes.StubIAop.cyqd::CYQ#Data#Aop#IAop#OnLoad">
            <summary>设置 IAop.OnLoad() 的 存根</summary>
        </member>
        <member name="F:CYQ.Data.Aop.Fakes.StubIAop.Clone">
            <summary>设置 IAop.Clone() 的 stub</summary>
        </member>
        <member name="F:CYQ.Data.Aop.Fakes.StubIAop.EndAopEnumAopInfo">
            <summary>设置 IAop.End(AopEnum action, AopInfo aopInfo) 的 stub</summary>
        </member>
        <member name="F:CYQ.Data.Aop.Fakes.StubIAop.OnErrorString">
            <summary>设置 IAop.OnError(String msg) 的 stub</summary>
        </member>
        <member name="F:CYQ.Data.Aop.Fakes.StubIAop.OnLoad">
            <summary>设置 IAop.OnLoad() 的 stub</summary>
        </member>
        <member name="T:CYQ.Data.Cache.Fakes.ShimCacheManage">
            <summary>CYQ.Data.Cache.CacheManage 的填充码类型</summary>
        </member>
        <member name="M:CYQ.Data.Cache.Fakes.ShimCacheManage.#ctor(CYQ.Data.Cache.CacheManage)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:CYQ.Data.Cache.Fakes.ShimCacheManage.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:CYQ.Data.Cache.Fakes.ShimCacheManage.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:CYQ.Data.Cache.Fakes.ShimCacheManage.GetOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0})">
            <summary>设置 CacheManage.Get(String key) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Cache.Fakes.ShimCacheManage.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:CYQ.Data.Cache.Fakes.ShimCacheManage.Constructor">
            <summary>设置 CacheManage.CacheManage() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Cache.Fakes.ShimCacheManage.GetKeyCacheKeyTypeString">
            <summary>设置 CacheManage.GetKey(CacheKeyType ckt, String tableName) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Cache.Fakes.ShimCacheManage.GetKeyCacheKeyTypeStringString">
            <summary>设置 CacheManage.GetKey(CacheKeyType ckt, String tableName, String conn) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Cache.Fakes.ShimCacheManage.InstanceGet">
            <summary>设置 CacheManage.get_Instance() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Cache.Fakes.ShimCacheManage.LocalInstanceGet">
            <summary>设置 CacheManage.get_LocalInstance() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Cache.Fakes.ShimCacheManage.MemCacheInstanceGet">
            <summary>设置 CacheManage.get_MemCacheInstance() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Cache.Fakes.ShimCacheManage.RedisInstanceGet">
            <summary>设置 CacheManage.get_RedisInstance() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Cache.Fakes.ShimCacheManage.StaticConstructor">
            <summary>设置 CacheManage.CacheManage() 的 填充码</summary>
        </member>
        <member name="T:CYQ.Data.Cache.Fakes.ShimCacheManage.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:CYQ.Data.Cache.Fakes.ShimCacheManage.AllInstances.GetOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{CYQ.Data.Cache.CacheManage,System.String,``0})">
            <summary>设置 CacheManage.Get(String key) 的 填充码</summary>
        </member>
        <member name="T:CYQ.Data.Cache.Fakes.StubCacheManage">
            <summary>CYQ.Data.Cache.CacheManage 的存根类型</summary>
        </member>
        <member name="M:CYQ.Data.Cache.Fakes.StubCacheManage.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="F:CYQ.Data.Cache.Fakes.StubCacheManage.CacheInfoGet">
            <summary>设置 CacheManage.get_CacheInfo() 的 stub</summary>
        </member>
        <member name="F:CYQ.Data.Cache.Fakes.StubCacheManage.CacheTypeGet">
            <summary>设置 CacheManage.get_CacheType() 的 stub</summary>
        </member>
        <member name="M:CYQ.Data.Cache.Fakes.StubCacheManage.Clear">
            <summary>设置 CacheManage.Clear() 的 存根</summary>
        </member>
        <member name="F:CYQ.Data.Cache.Fakes.StubCacheManage.Clear01">
            <summary>设置 CacheManage.Clear() 的 stub</summary>
        </member>
        <member name="M:CYQ.Data.Cache.Fakes.StubCacheManage.Contains(System.String)">
            <summary>设置 CacheManage.Contains(String key) 的 存根</summary>
        </member>
        <member name="F:CYQ.Data.Cache.Fakes.StubCacheManage.ContainsString">
            <summary>设置 CacheManage.Contains(String key) 的 stub</summary>
        </member>
        <member name="F:CYQ.Data.Cache.Fakes.StubCacheManage.CountGet">
            <summary>设置 CacheManage.get_Count() 的 stub</summary>
        </member>
        <member name="M:CYQ.Data.Cache.Fakes.StubCacheManage.Get(System.String)">
            <summary>设置 CacheManage.Get(String key) 的 存根</summary>
        </member>
        <member name="F:CYQ.Data.Cache.Fakes.StubCacheManage.GetString">
            <summary>设置 CacheManage.Get(String key) 的 stub</summary>
        </member>
        <member name="M:CYQ.Data.Cache.Fakes.StubCacheManage.InitializeStub">
            <summary>初始化 type StubCacheManage 的新实例</summary>
        </member>
        <member name="M:CYQ.Data.Cache.Fakes.StubCacheManage.Remove(System.String)">
            <summary>设置 CacheManage.Remove(String key) 的 存根</summary>
        </member>
        <member name="F:CYQ.Data.Cache.Fakes.StubCacheManage.RemoveString">
            <summary>设置 CacheManage.Remove(String key) 的 stub</summary>
        </member>
        <member name="M:CYQ.Data.Cache.Fakes.StubCacheManage.Set(System.String,System.Object)">
            <summary>设置 CacheManage.Set(String key, Object value) 的 存根</summary>
        </member>
        <member name="M:CYQ.Data.Cache.Fakes.StubCacheManage.Set(System.String,System.Object,System.Double)">
            <summary>设置 CacheManage.Set(String key, Object value, Double cacheMinutes) 的 存根</summary>
        </member>
        <member name="M:CYQ.Data.Cache.Fakes.StubCacheManage.Set(System.String,System.Object,System.Double,System.String)">
            <summary>设置 CacheManage.Set(String key, Object value, Double cacheMinutes, String fileName) 的 存根</summary>
        </member>
        <member name="F:CYQ.Data.Cache.Fakes.StubCacheManage.SetStringObject">
            <summary>设置 CacheManage.Set(String key, Object value) 的 stub</summary>
        </member>
        <member name="F:CYQ.Data.Cache.Fakes.StubCacheManage.SetStringObjectDouble">
            <summary>设置 CacheManage.Set(String key, Object value, Double cacheMinutes) 的 stub</summary>
        </member>
        <member name="F:CYQ.Data.Cache.Fakes.StubCacheManage.SetStringObjectDoubleString">
            <summary>设置 CacheManage.Set(String key, Object value, Double cacheMinutes, String fileName) 的 stub</summary>
        </member>
        <member name="F:CYQ.Data.Cache.Fakes.StubCacheManage.WorkInfoGet">
            <summary>设置 CacheManage.get_WorkInfo() 的 stub</summary>
        </member>
        <member name="P:CYQ.Data.Cache.Fakes.StubCacheManage.CacheInfo">
            <summary>设置 CacheManage.get_CacheInfo() 的 stub</summary>
        </member>
        <member name="P:CYQ.Data.Cache.Fakes.StubCacheManage.CacheType">
            <summary>设置 CacheManage.get_CacheType() 的 stub</summary>
        </member>
        <member name="P:CYQ.Data.Cache.Fakes.StubCacheManage.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:CYQ.Data.Cache.Fakes.StubCacheManage.Count">
            <summary>设置 CacheManage.get_Count() 的 stub</summary>
        </member>
        <member name="P:CYQ.Data.Cache.Fakes.StubCacheManage.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:CYQ.Data.Cache.Fakes.StubCacheManage.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:CYQ.Data.Cache.Fakes.StubCacheManage.WorkInfo">
            <summary>设置 CacheManage.get_WorkInfo() 的 stub</summary>
        </member>
        <member name="T:CYQ.Data.Extension.Fakes.StubIField">
            <summary>CYQ.Data.Extension.IField 的存根类型</summary>
        </member>
        <member name="M:CYQ.Data.Extension.Fakes.StubIField.#ctor">
            <summary>初始化 type StubIField 的新实例</summary>
        </member>
        <member name="M:CYQ.Data.Extension.Fakes.StubIField.AttachBackingFieldToSql">
            <summary>附加委托以将 StubIField.Sql 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:CYQ.Data.Extension.Fakes.StubIField.ColIDGet">
            <summary>设置 IField.get_ColID() 的 stub</summary>
        </member>
        <member name="F:CYQ.Data.Extension.Fakes.StubIField.NameGet">
            <summary>设置 IField.get_Name() 的 stub</summary>
        </member>
        <member name="F:CYQ.Data.Extension.Fakes.StubIField.SqlGet">
            <summary>设置 IField.get_Sql() 的 stub</summary>
        </member>
        <member name="F:CYQ.Data.Extension.Fakes.StubIField.SqlSetString">
            <summary>设置 IField.set_Sql(String value) 的 stub</summary>
        </member>
        <member name="P:CYQ.Data.Extension.Fakes.StubIField.cyqd::CYQ#Data#Extension#IField#ColID">
            <summary>设置 IField.get_ColID() 的 stub</summary>
        </member>
        <member name="P:CYQ.Data.Extension.Fakes.StubIField.cyqd::CYQ#Data#Extension#IField#Name">
            <summary>设置 IField.get_Name() 的 stub</summary>
        </member>
        <member name="P:CYQ.Data.Extension.Fakes.StubIField.cyqd::CYQ#Data#Extension#IField#Sql">
            <summary>设置 IField.get_Sql() 的 stub</summary>
        </member>
        <member name="T:CYQ.Data.Fakes.ShimAppConfig">
            <summary>CYQ.Data.AppConfig 的填充码类型</summary>
        </member>
        <member name="M:CYQ.Data.Fakes.ShimAppConfig.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:CYQ.Data.Fakes.ShimAppConfig.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:CYQ.Data.Fakes.ShimAppConfig.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimAppConfig.AopGet">
            <summary>设置 AppConfig.get_Aop() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimAppConfig.AopSetString">
            <summary>设置 AppConfig.set_Aop(String value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimAppConfig.AssemblyPathGet">
            <summary>设置 AppConfig.get_AssemblyPath() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimAppConfig.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimAppConfig.Clear">
            <summary>设置 AppConfig.Clear() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimAppConfig.EncryptKeyGet">
            <summary>设置 AppConfig.get_EncryptKey() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimAppConfig.EncryptKeySetString">
            <summary>设置 AppConfig.set_EncryptKey(String value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimAppConfig.EntitySuffixGet">
            <summary>设置 AppConfig.get_EntitySuffix() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimAppConfig.EntitySuffixSetString">
            <summary>设置 AppConfig.set_EntitySuffix(String value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimAppConfig.GetAppBoolStringBoolean">
            <summary>设置 AppConfig.GetAppBool(String key, Boolean defaultValue) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimAppConfig.GetAppIntStringInt32">
            <summary>设置 AppConfig.GetAppInt(String key, Int32 defaultValue) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimAppConfig.GetAppString">
            <summary>设置 AppConfig.GetApp(String key) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimAppConfig.GetAppStringString">
            <summary>设置 AppConfig.GetApp(String key, String defaultValue) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimAppConfig.GetConnString">
            <summary>设置 AppConfig.GetConn(String name) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimAppConfig.IsEnumToIntGet">
            <summary>设置 AppConfig.get_IsEnumToInt() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimAppConfig.IsEnumToIntSetBoolean">
            <summary>设置 AppConfig.set_IsEnumToInt(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimAppConfig.IsNetCoreGet">
            <summary>设置 AppConfig.get_IsNetCore() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimAppConfig.IsWebGet">
            <summary>设置 AppConfig.get_IsWeb() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimAppConfig.IsWebSetBoolean">
            <summary>设置 AppConfig.set_IsWeb(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimAppConfig.JsonEscapeGet">
            <summary>设置 AppConfig.get_JsonEscape() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimAppConfig.JsonEscapeSetString">
            <summary>设置 AppConfig.set_JsonEscape(String value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimAppConfig.RunPathGet">
            <summary>设置 AppConfig.get_RunPath() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimAppConfig.SetAppStringString">
            <summary>设置 AppConfig.SetApp(String key, String value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimAppConfig.SetConnStringString">
            <summary>设置 AppConfig.SetConn(String name, String connectionString) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimAppConfig.StaticConstructor">
            <summary>设置 AppConfig.AppConfig() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimAppConfig.ThreadBreakPathGet">
            <summary>设置 AppConfig.get_ThreadBreakPath() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimAppConfig.ThreadBreakPathSetString">
            <summary>设置 AppConfig.set_ThreadBreakPath(String value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimAppConfig.VersionGet">
            <summary>设置 AppConfig.get_Version() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimAppConfig.WebRootPathGet">
            <summary>设置 AppConfig.get_WebRootPath() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimAppConfig.WebRootPathSetString">
            <summary>设置 AppConfig.set_WebRootPath(String value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimAppConfig.WebUriGet">
            <summary>设置 AppConfig.get_WebUri() 的 填充码</summary>
        </member>
        <member name="T:CYQ.Data.Fakes.ShimAppConfig.ShimCache">
            <summary>CYQ.Data.AppConfig+Cache 的填充码类型</summary>
        </member>
        <member name="M:CYQ.Data.Fakes.ShimAppConfig.ShimCache.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:CYQ.Data.Fakes.ShimAppConfig.ShimCache.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:CYQ.Data.Fakes.ShimAppConfig.ShimCache.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimAppConfig.ShimCache.AutoCacheConnGet">
            <summary>设置 Cache.get_AutoCacheConn() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimAppConfig.ShimCache.AutoCacheConnSetString">
            <summary>设置 Cache.set_AutoCacheConn(String value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimAppConfig.ShimCache.AutoCacheTaskTimeGet">
            <summary>设置 Cache.get_AutoCacheTaskTime() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimAppConfig.ShimCache.AutoCacheTaskTimeSetInt32">
            <summary>设置 Cache.set_AutoCacheTaskTime(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimAppConfig.ShimCache.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimAppConfig.ShimCache.CacheTablesGet">
            <summary>设置 Cache.get_CacheTables() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimAppConfig.ShimCache.CacheTablesSetString">
            <summary>设置 Cache.set_CacheTables(String value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimAppConfig.ShimCache.DefaultCacheTimeGet">
            <summary>设置 Cache.get_DefaultCacheTime() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimAppConfig.ShimCache.DefaultCacheTimeSetInt32">
            <summary>设置 Cache.set_DefaultCacheTime(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimAppConfig.ShimCache.IngoreCacheColumnsGet">
            <summary>设置 Cache.get_IngoreCacheColumns() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimAppConfig.ShimCache.IngoreCacheColumnsSetString">
            <summary>设置 Cache.set_IngoreCacheColumns(String value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimAppConfig.ShimCache.IsAutoCacheGet">
            <summary>设置 Cache.get_IsAutoCache() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimAppConfig.ShimCache.IsAutoCacheSetBoolean">
            <summary>设置 Cache.set_IsAutoCache(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimAppConfig.ShimCache.MemCacheServersBakGet">
            <summary>设置 Cache.get_MemCacheServersBak() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimAppConfig.ShimCache.MemCacheServersBakSetString">
            <summary>设置 Cache.set_MemCacheServersBak(String value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimAppConfig.ShimCache.MemCacheServersGet">
            <summary>设置 Cache.get_MemCacheServers() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimAppConfig.ShimCache.MemCacheServersSetString">
            <summary>设置 Cache.set_MemCacheServers(String value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimAppConfig.ShimCache.NoCacheTablesGet">
            <summary>设置 Cache.get_NoCacheTables() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimAppConfig.ShimCache.NoCacheTablesSetString">
            <summary>设置 Cache.set_NoCacheTables(String value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimAppConfig.ShimCache.RedisServersBakGet">
            <summary>设置 Cache.get_RedisServersBak() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimAppConfig.ShimCache.RedisServersBakSetString">
            <summary>设置 Cache.set_RedisServersBak(String value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimAppConfig.ShimCache.RedisServersGet">
            <summary>设置 Cache.get_RedisServers() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimAppConfig.ShimCache.RedisServersSetString">
            <summary>设置 Cache.set_RedisServers(String value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimAppConfig.ShimCache.RedisUseDBCountGet">
            <summary>设置 Cache.get_RedisUseDBCount() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimAppConfig.ShimCache.RedisUseDBCountSetInt32">
            <summary>设置 Cache.set_RedisUseDBCount(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimAppConfig.ShimCache.RedisUseDBIndexGet">
            <summary>设置 Cache.get_RedisUseDBIndex() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimAppConfig.ShimCache.RedisUseDBIndexSetInt32">
            <summary>设置 Cache.set_RedisUseDBIndex(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimAppConfig.ShimCache.StaticConstructor">
            <summary>设置 Cache.Cache() 的 填充码</summary>
        </member>
        <member name="T:CYQ.Data.Fakes.ShimAppConfig.ShimDB">
            <summary>CYQ.Data.AppConfig+DB 的填充码类型</summary>
        </member>
        <member name="M:CYQ.Data.Fakes.ShimAppConfig.ShimDB.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:CYQ.Data.Fakes.ShimAppConfig.ShimDB.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:CYQ.Data.Fakes.ShimAppConfig.ShimDB.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimAppConfig.ShimDB.AutoIDGet">
            <summary>设置 DB.get_AutoID() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimAppConfig.ShimDB.AutoIDSetString">
            <summary>设置 DB.set_AutoID(String value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimAppConfig.ShimDB.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimAppConfig.ShimDB.CommandTimeoutGet">
            <summary>设置 DB.get_CommandTimeout() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimAppConfig.ShimDB.CommandTimeoutSetInt32">
            <summary>设置 DB.set_CommandTimeout(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimAppConfig.ShimDB.DefaultConnGet">
            <summary>设置 DB.get_DefaultConn() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimAppConfig.ShimDB.DefaultConnSetString">
            <summary>设置 DB.set_DefaultConn(String value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimAppConfig.ShimDB.DefaultDataBaseNameGet">
            <summary>设置 DB.get_DefaultDataBaseName() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimAppConfig.ShimDB.DefaultDataBaseTypeGet">
            <summary>设置 DB.get_DefaultDataBaseType() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimAppConfig.ShimDB.DeleteFieldGet">
            <summary>设置 DB.get_DeleteField() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimAppConfig.ShimDB.DeleteFieldSetString">
            <summary>设置 DB.set_DeleteField(String value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimAppConfig.ShimDB.EditTimeFieldsGet">
            <summary>设置 DB.get_EditTimeFields() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimAppConfig.ShimDB.EditTimeFieldsSetString">
            <summary>设置 DB.set_EditTimeFields(String value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimAppConfig.ShimDB.FilterSqlInjectionGet">
            <summary>设置 DB.get_FilterSqlInjection() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimAppConfig.ShimDB.FilterSqlInjectionSetString">
            <summary>设置 DB.set_FilterSqlInjection(String value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimAppConfig.ShimDB.HiddenFieldsGet">
            <summary>设置 DB.get_HiddenFields() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimAppConfig.ShimDB.HiddenFieldsSetString">
            <summary>设置 DB.set_HiddenFields(String value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimAppConfig.ShimDB.IsPostgreLowerGet">
            <summary>设置 DB.get_IsPostgreLower() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimAppConfig.ShimDB.IsPostgreLowerSetBoolean">
            <summary>设置 DB.set_IsPostgreLower(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimAppConfig.ShimDB.IsTxtReadOnlyGet">
            <summary>设置 DB.get_IsTxtReadOnly() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimAppConfig.ShimDB.IsTxtReadOnlySetBoolean">
            <summary>设置 DB.set_IsTxtReadOnly(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimAppConfig.ShimDB.MasterSlaveTimeGet">
            <summary>设置 DB.get_MasterSlaveTime() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimAppConfig.ShimDB.MasterSlaveTimeSetInt32">
            <summary>设置 DB.set_MasterSlaveTime(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimAppConfig.ShimDB.SchemaMapPathGet">
            <summary>设置 DB.get_SchemaMapPath() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimAppConfig.ShimDB.SchemaMapPathSetString">
            <summary>设置 DB.set_SchemaMapPath(String value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimAppConfig.ShimDB.SetDefault">
            <summary>设置 DB.SetDefault() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimAppConfig.ShimDB.StaticConstructor">
            <summary>设置 DB.DB() 的 填充码</summary>
        </member>
        <member name="T:CYQ.Data.Fakes.ShimAppConfig.ShimDebug">
            <summary>CYQ.Data.AppConfig+Debug 的填充码类型</summary>
        </member>
        <member name="M:CYQ.Data.Fakes.ShimAppConfig.ShimDebug.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:CYQ.Data.Fakes.ShimAppConfig.ShimDebug.#ctor(CYQ.Data.AppConfig.Debug)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:CYQ.Data.Fakes.ShimAppConfig.ShimDebug.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:CYQ.Data.Fakes.ShimAppConfig.ShimDebug.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimAppConfig.ShimDebug.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimAppConfig.ShimDebug.Constructor">
            <summary>设置 Debug.Debug() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimAppConfig.ShimDebug.InfoFilterGet">
            <summary>设置 Debug.get_InfoFilter() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimAppConfig.ShimDebug.InfoFilterSetInt32">
            <summary>设置 Debug.set_InfoFilter(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimAppConfig.ShimDebug.OpenDebugInfoGet">
            <summary>设置 Debug.get_OpenDebugInfo() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimAppConfig.ShimDebug.OpenDebugInfoSetBoolean">
            <summary>设置 Debug.set_OpenDebugInfo(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimAppConfig.ShimDebug.SqlFilterGet">
            <summary>设置 Debug.get_SqlFilter() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimAppConfig.ShimDebug.SqlFilterSetInt32">
            <summary>设置 Debug.set_SqlFilter(Int32 value) 的 填充码</summary>
        </member>
        <member name="T:CYQ.Data.Fakes.ShimAppConfig.ShimDebug.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:CYQ.Data.Fakes.ShimAppConfig.ShimLog">
            <summary>CYQ.Data.AppConfig+Log 的填充码类型</summary>
        </member>
        <member name="M:CYQ.Data.Fakes.ShimAppConfig.ShimLog.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:CYQ.Data.Fakes.ShimAppConfig.ShimLog.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:CYQ.Data.Fakes.ShimAppConfig.ShimLog.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimAppConfig.ShimLog.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimAppConfig.ShimLog.IsWriteLogGet">
            <summary>设置 Log.get_IsWriteLog() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimAppConfig.ShimLog.IsWriteLogSetBoolean">
            <summary>设置 Log.set_IsWriteLog(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimAppConfig.ShimLog.LogConnGet">
            <summary>设置 Log.get_LogConn() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimAppConfig.ShimLog.LogConnSetString">
            <summary>设置 Log.set_LogConn(String value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimAppConfig.ShimLog.LogPathGet">
            <summary>设置 Log.get_LogPath() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimAppConfig.ShimLog.LogPathSetString">
            <summary>设置 Log.set_LogPath(String value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimAppConfig.ShimLog.LogTableNameGet">
            <summary>设置 Log.get_LogTableName() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimAppConfig.ShimLog.LogTableNameSetString">
            <summary>设置 Log.set_LogTableName(String value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimAppConfig.ShimLog.StaticConstructor">
            <summary>设置 Log.Log() 的 填充码</summary>
        </member>
        <member name="T:CYQ.Data.Fakes.ShimAppConfig.ShimUI">
            <summary>CYQ.Data.AppConfig+UI 的填充码类型</summary>
        </member>
        <member name="M:CYQ.Data.Fakes.ShimAppConfig.ShimUI.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:CYQ.Data.Fakes.ShimAppConfig.ShimUI.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:CYQ.Data.Fakes.ShimAppConfig.ShimUI.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimAppConfig.ShimUI.AutoPrefixsGet">
            <summary>设置 UI.get_AutoPrefixs() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimAppConfig.ShimUI.AutoPrefixsSetString">
            <summary>设置 UI.set_AutoPrefixs(String value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimAppConfig.ShimUI.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="T:CYQ.Data.Fakes.ShimAppConfig.ShimXHtml">
            <summary>CYQ.Data.AppConfig+XHtml 的填充码类型</summary>
        </member>
        <member name="M:CYQ.Data.Fakes.ShimAppConfig.ShimXHtml.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:CYQ.Data.Fakes.ShimAppConfig.ShimXHtml.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:CYQ.Data.Fakes.ShimAppConfig.ShimXHtml.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimAppConfig.ShimXHtml.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimAppConfig.ShimXHtml.CDataLeftGet">
            <summary>设置 XHtml.get_CDataLeft() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimAppConfig.ShimXHtml.CDataLeftSetString">
            <summary>设置 XHtml.set_CDataLeft(String value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimAppConfig.ShimXHtml.CDataRightGet">
            <summary>设置 XHtml.get_CDataRight() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimAppConfig.ShimXHtml.CDataRightSetString">
            <summary>设置 XHtml.set_CDataRight(String value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimAppConfig.ShimXHtml.DomainGet">
            <summary>设置 XHtml.get_Domain() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimAppConfig.ShimXHtml.DomainSetString">
            <summary>设置 XHtml.set_Domain(String value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimAppConfig.ShimXHtml.DtdUriGet">
            <summary>设置 XHtml.get_DtdUri() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimAppConfig.ShimXHtml.DtdUriSetString">
            <summary>设置 XHtml.set_DtdUri(String value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimAppConfig.ShimXHtml.SysLangKeyGet">
            <summary>设置 XHtml.get_SysLangKey() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimAppConfig.ShimXHtml.SysLangKeySetString">
            <summary>设置 XHtml.set_SysLangKey(String value) 的 填充码</summary>
        </member>
        <member name="T:CYQ.Data.Fakes.ShimAppDebug">
            <summary>CYQ.Data.AppDebug 的填充码类型</summary>
        </member>
        <member name="M:CYQ.Data.Fakes.ShimAppDebug.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:CYQ.Data.Fakes.ShimAppDebug.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:CYQ.Data.Fakes.ShimAppDebug.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimAppDebug.AddString">
            <summary>设置 AppDebug.Add(String sql) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimAppDebug.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimAppDebug.InfoGet">
            <summary>设置 AppDebug.get_Info() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimAppDebug.IsRecordingGet">
            <summary>设置 AppDebug.get_IsRecording() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimAppDebug.Start">
            <summary>设置 AppDebug.Start() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimAppDebug.StartBoolean">
            <summary>设置 AppDebug.Start(Boolean isContainSysSql) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimAppDebug.StaticConstructor">
            <summary>设置 AppDebug.AppDebug() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimAppDebug.Stop">
            <summary>设置 AppDebug.Stop() 的 填充码</summary>
        </member>
        <member name="T:CYQ.Data.Fakes.ShimJsonEnumToDescriptionAttribute">
            <summary>CYQ.Data.JsonEnumToDescriptionAttribute 的填充码类型</summary>
        </member>
        <member name="M:CYQ.Data.Fakes.ShimJsonEnumToDescriptionAttribute.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:CYQ.Data.Fakes.ShimJsonEnumToDescriptionAttribute.#ctor(CYQ.Data.JsonEnumToDescriptionAttribute)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:CYQ.Data.Fakes.ShimJsonEnumToDescriptionAttribute.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:CYQ.Data.Fakes.ShimJsonEnumToDescriptionAttribute.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimJsonEnumToDescriptionAttribute.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimJsonEnumToDescriptionAttribute.Constructor">
            <summary>设置 JsonEnumToDescriptionAttribute.JsonEnumToDescriptionAttribute() 的 填充码</summary>
        </member>
        <member name="T:CYQ.Data.Fakes.ShimJsonEnumToDescriptionAttribute.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:CYQ.Data.Fakes.ShimJsonEnumToStringAttribute">
            <summary>CYQ.Data.JsonEnumToStringAttribute 的填充码类型</summary>
        </member>
        <member name="M:CYQ.Data.Fakes.ShimJsonEnumToStringAttribute.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:CYQ.Data.Fakes.ShimJsonEnumToStringAttribute.#ctor(CYQ.Data.JsonEnumToStringAttribute)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:CYQ.Data.Fakes.ShimJsonEnumToStringAttribute.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:CYQ.Data.Fakes.ShimJsonEnumToStringAttribute.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimJsonEnumToStringAttribute.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimJsonEnumToStringAttribute.Constructor">
            <summary>设置 JsonEnumToStringAttribute.JsonEnumToStringAttribute() 的 填充码</summary>
        </member>
        <member name="T:CYQ.Data.Fakes.ShimJsonEnumToStringAttribute.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:CYQ.Data.Fakes.ShimJsonIgnoreAttribute">
            <summary>CYQ.Data.JsonIgnoreAttribute 的填充码类型</summary>
        </member>
        <member name="M:CYQ.Data.Fakes.ShimJsonIgnoreAttribute.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:CYQ.Data.Fakes.ShimJsonIgnoreAttribute.#ctor(CYQ.Data.JsonIgnoreAttribute)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:CYQ.Data.Fakes.ShimJsonIgnoreAttribute.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:CYQ.Data.Fakes.ShimJsonIgnoreAttribute.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimJsonIgnoreAttribute.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimJsonIgnoreAttribute.Constructor">
            <summary>设置 JsonIgnoreAttribute.JsonIgnoreAttribute() 的 填充码</summary>
        </member>
        <member name="T:CYQ.Data.Fakes.ShimJsonIgnoreAttribute.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:CYQ.Data.Fakes.ShimLog">
            <summary>CYQ.Data.Log 的填充码类型</summary>
        </member>
        <member name="M:CYQ.Data.Fakes.ShimLog.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:CYQ.Data.Fakes.ShimLog.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:CYQ.Data.Fakes.ShimLog.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimLog.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimLog.GetExceptionMessageException">
            <summary>设置 Log.GetExceptionMessage(Exception err) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimLog.ReadyForWorkStringStringBoolean">
            <summary>设置 Log.ReadyForWork(String message, String logType, Boolean isWriteTxt) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimLog.WriteException">
            <summary>设置 Log.Write(Exception err) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimLog.WriteExceptionString">
            <summary>设置 Log.Write(Exception err, String logType) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimLog.WriteLogToDBException">
            <summary>设置 Log.WriteLogToDB(Exception err) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimLog.WriteLogToDBExceptionString">
            <summary>设置 Log.WriteLogToDB(Exception err, String logType) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimLog.WriteLogToDBString">
            <summary>设置 Log.WriteLogToDB(String message) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimLog.WriteLogToDBStringString">
            <summary>设置 Log.WriteLogToDB(String message, String logType) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimLog.WriteLogToTxtException">
            <summary>设置 Log.WriteLogToTxt(Exception err) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimLog.WriteLogToTxtExceptionString">
            <summary>设置 Log.WriteLogToTxt(Exception err, String logType) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimLog.WriteLogToTxtString">
            <summary>设置 Log.WriteLogToTxt(String message) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimLog.WriteLogToTxtStringString">
            <summary>设置 Log.WriteLogToTxt(String message, String logType) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimLog.WriteString">
            <summary>设置 Log.Write(String message) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimLog.WriteStringString">
            <summary>设置 Log.Write(String message, String logType) 的 填充码</summary>
        </member>
        <member name="T:CYQ.Data.Fakes.ShimLogType">
            <summary>CYQ.Data.LogType 的填充码类型</summary>
        </member>
        <member name="M:CYQ.Data.Fakes.ShimLogType.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:CYQ.Data.Fakes.ShimLogType.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:CYQ.Data.Fakes.ShimLogType.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimLogType.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="T:CYQ.Data.Fakes.ShimMAction">
            <summary>CYQ.Data.MAction 的填充码类型</summary>
        </member>
        <member name="M:CYQ.Data.Fakes.ShimMAction.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:CYQ.Data.Fakes.ShimMAction.#ctor(CYQ.Data.MAction)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:CYQ.Data.Fakes.ShimMAction.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:CYQ.Data.Fakes.ShimMAction.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:CYQ.Data.Fakes.ShimMAction.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:CYQ.Data.Fakes.ShimMAction.GetOf1Object``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Object,``0})">
            <summary>设置 MAction.Get(Object key) 的 填充码</summary>
        </member>
        <member name="M:CYQ.Data.Fakes.ShimMAction.GetOf1ObjectM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Object,``0,``0})">
            <summary>设置 MAction.Get(Object key, !!0 defaultValue) 的 填充码</summary>
        </member>
        <member name="M:CYQ.Data.Fakes.ShimMAction.SelectOf1Int32Int32ObjectInt32Out``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.OutFunc{System.Int32,System.Int32,System.Object,System.Int32,System.Collections.Generic.List{``0}})">
            <summary>设置 MAction.Select(Int32 pageIndex, Int32 pageSize, Object where, Int32&amp; rowCount) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimMAction.AllowInsertIDGet">
            <summary>设置 MAction.get_AllowInsertID() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimMAction.AllowInsertIDSetBoolean">
            <summary>设置 MAction.set_AllowInsertID(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimMAction.BeginTransation">
            <summary>设置 MAction.BeginTransation() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimMAction.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimMAction.CheckDisposed">
            <summary>设置 MAction.CheckDisposed() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimMAction.ClearPara">
            <summary>设置 MAction.ClearPara() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimMAction.ClearParameters">
            <summary>设置 MAction.ClearParameters() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimMAction.ConnNameGet">
            <summary>设置 MAction.get_ConnName() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimMAction.ConnStringGet">
            <summary>设置 MAction.get_ConnString() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimMAction.ConstructorObject">
            <summary>设置 MAction.MAction(Object tableNamesEnum) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimMAction.ConstructorObjectString">
            <summary>设置 MAction.MAction(Object tableNamesEnum, String conn) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimMAction.CreateRowObjectString">
            <summary>设置 MAction.CreateRow(Object tableObj, String conn) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimMAction.DataBaseNameGet">
            <summary>设置 MAction.get_DataBaseName() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimMAction.DataBaseTypeGet">
            <summary>设置 MAction.get_DataBaseType() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimMAction.DataBaseVersionGet">
            <summary>设置 MAction.get_DataBaseVersion() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimMAction.DataGet">
            <summary>设置 MAction.get_Data() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimMAction.DebugInfoGet">
            <summary>设置 MAction.get_DebugInfo() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimMAction.DebugInfoSetString">
            <summary>设置 MAction.set_DebugInfo(String value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimMAction.Delete">
            <summary>设置 MAction.Delete() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimMAction.DeleteObject">
            <summary>设置 MAction.Delete(Object where) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimMAction.DeleteObjectBoolean">
            <summary>设置 MAction.Delete(Object where, Boolean isIgnoreDeleteField) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimMAction.Dispose">
            <summary>设置 MAction.Dispose() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimMAction.DisposeBoolean">
            <summary>设置 MAction.Dispose(Boolean isOnError) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimMAction.EndTransation">
            <summary>设置 MAction.EndTransation() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimMAction.Exists">
            <summary>设置 MAction.Exists() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimMAction.ExistsObject">
            <summary>设置 MAction.Exists(Object where) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimMAction.Fill">
            <summary>设置 MAction.Fill() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimMAction.FillObject">
            <summary>设置 MAction.Fill(Object where) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimMAction.GetCount">
            <summary>设置 MAction.GetCount() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimMAction.GetCountObject">
            <summary>设置 MAction.GetCount(Object where) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimMAction.GetWhereBooleanMDataCellArray">
            <summary>设置 MAction.GetWhere(Boolean isAnd, MDataCell[] cells) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimMAction.GetWhereMDataCellArray">
            <summary>设置 MAction.GetWhere(MDataCell[] cells) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimMAction.ImplicitOpOrmBaseMAction">
            <summary>设置 MAction.op_Implicit(OrmBase orm) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimMAction.ImplicitOpSimpleOrmBaseMAction">
            <summary>设置 MAction.op_Implicit(SimpleOrmBase orm) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimMAction.InitDalHelperMDataRowString">
            <summary>设置 MAction.InitDalHelper(MDataRow newRow, String newDbName) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimMAction.InitGlobalObjectBoolean">
            <summary>设置 MAction.InitGlobalObject(Boolean allowCreate) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimMAction.InitObjectStringBooleanStringBoolean">
            <summary>设置 MAction.Init(Object tableObj, String conn, Boolean resetState, String newDbName, Boolean isFirstInit) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimMAction.InitRowSchemaMDataRowBoolean">
            <summary>设置 MAction.InitRowSchema(MDataRow row, Boolean resetState) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimMAction.Insert">
            <summary>设置 MAction.Insert() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimMAction.InsertBoolean">
            <summary>设置 MAction.Insert(Boolean autoSetValue) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimMAction.InsertBooleanInsertOp">
            <summary>设置 MAction.Insert(Boolean autoSetValue, InsertOp option) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimMAction.InsertInsertOp">
            <summary>设置 MAction.Insert(InsertOp option) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimMAction.InsertOrUpdateString">
            <summary>设置 MAction.InsertOrUpdate(String sqlCommandText) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimMAction.IsTransationGet">
            <summary>设置 MAction.get_IsTransation() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimMAction.OnError">
            <summary>设置 MAction.OnError() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimMAction.RecordsAffectedGet">
            <summary>设置 MAction.get_RecordsAffected() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimMAction.ResetTableObject">
            <summary>设置 MAction.ResetTable(Object tableObj) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimMAction.ResetTableObjectBoolean">
            <summary>设置 MAction.ResetTable(Object tableObj, Boolean resetState) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimMAction.ResetTableObjectBooleanString">
            <summary>设置 MAction.ResetTable(Object tableObj, Boolean resetState, String newDbName) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimMAction.RollBack">
            <summary>设置 MAction.RollBack() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimMAction.Select">
            <summary>设置 MAction.Select() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimMAction.SelectInt32Int32">
            <summary>设置 MAction.Select(Int32 pageIndex, Int32 pageSize) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimMAction.SelectInt32Int32Object">
            <summary>设置 MAction.Select(Int32 pageIndex, Int32 pageSize, Object where) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimMAction.SelectInt32Int32ObjectInt32Out">
            <summary>设置 MAction.Select(Int32 pageIndex, Int32 pageSize, Object where, Int32&amp; rowCount) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimMAction.SelectInt32Object">
            <summary>设置 MAction.Select(Int32 topN, Object where) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimMAction.SelectObject">
            <summary>设置 MAction.Select(Object where) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimMAction.SetAopParaObject">
            <summary>设置 MAction.SetAopPara(Object para) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimMAction.SetAopStateAopOp">
            <summary>设置 MAction.SetAopState(AopOp op) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimMAction.SetExpressionString">
            <summary>设置 MAction.SetExpression(String updateExpression) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimMAction.SetObjectObject">
            <summary>设置 MAction.Set(Object key, Object value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimMAction.SetObjectObjectInt32">
            <summary>设置 MAction.Set(Object key, Object value, Int32 state) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimMAction.SetParaListOfAopCustomDbPara">
            <summary>设置 MAction.SetPara(List`1&lt;AopCustomDbPara&gt; customParas) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimMAction.SetParaObjectObject">
            <summary>设置 MAction.SetPara(Object paraName, Object value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimMAction.SetParaObjectObjectDbType">
            <summary>设置 MAction.SetPara(Object paraName, Object value, DbType dbType) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimMAction.SetSelectColumnsObjectArray">
            <summary>设置 MAction.SetSelectColumns(Object[] columnNames) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimMAction.SetTransLevelIsolationLevel">
            <summary>设置 MAction.SetTransLevel(IsolationLevel level) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimMAction.SetidentityInsertOff">
            <summary>设置 MAction.SetidentityInsertOff() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimMAction.SetidentityInsertOn">
            <summary>设置 MAction.SetidentityInsertOn() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimMAction.SetsObjectObjectArray">
            <summary>设置 MAction.Sets(Object startKey, Object[] values) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimMAction.TableNameGet">
            <summary>设置 MAction.get_TableName() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimMAction.TableNameSetString">
            <summary>设置 MAction.set_TableName(String value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimMAction.TimeOutGet">
            <summary>设置 MAction.get_TimeOut() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimMAction.TimeOutSetInt32">
            <summary>设置 MAction.set_TimeOut(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimMAction.UIGet">
            <summary>设置 MAction.get_UI() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimMAction.Update">
            <summary>设置 MAction.Update() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimMAction.UpdateBoolean">
            <summary>设置 MAction.Update(Boolean autoSetValue) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimMAction.UpdateObject">
            <summary>设置 MAction.Update(Object where) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimMAction.UpdateObjectBoolean">
            <summary>设置 MAction.Update(Object where, Boolean autoSetValue) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimMAction._DataSqlHelper_OnExceptionEventString">
            <summary>设置 MAction._DataSqlHelper_OnExceptionEvent(String msg) 的 填充码</summary>
        </member>
        <member name="T:CYQ.Data.Fakes.ShimMAction.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:CYQ.Data.Fakes.ShimMAction.AllInstances.GetOf1Object``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{CYQ.Data.MAction,System.Object,``0})">
            <summary>设置 MAction.Get(Object key) 的 填充码</summary>
        </member>
        <member name="M:CYQ.Data.Fakes.ShimMAction.AllInstances.GetOf1ObjectM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{CYQ.Data.MAction,System.Object,``0,``0})">
            <summary>设置 MAction.Get(Object key, !!0 defaultValue) 的 填充码</summary>
        </member>
        <member name="M:CYQ.Data.Fakes.ShimMAction.AllInstances.SelectOf1Int32Int32ObjectInt32Out``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.OutFunc{CYQ.Data.MAction,System.Int32,System.Int32,System.Object,System.Int32,System.Collections.Generic.List{``0}})">
            <summary>设置 MAction.Select(Int32 pageIndex, Int32 pageSize, Object where, Int32&amp; rowCount) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimMAction.AllInstances.AllowInsertIDGet">
            <summary>设置 MAction.get_AllowInsertID() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimMAction.AllInstances.AllowInsertIDSetBoolean">
            <summary>设置 MAction.set_AllowInsertID(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimMAction.AllInstances.BeginTransation">
            <summary>设置 MAction.BeginTransation() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimMAction.AllInstances.CheckDisposed">
            <summary>设置 MAction.CheckDisposed() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimMAction.AllInstances.ClearPara">
            <summary>设置 MAction.ClearPara() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimMAction.AllInstances.ClearParameters">
            <summary>设置 MAction.ClearParameters() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimMAction.AllInstances.ConnNameGet">
            <summary>设置 MAction.get_ConnName() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimMAction.AllInstances.ConnStringGet">
            <summary>设置 MAction.get_ConnString() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimMAction.AllInstances.CreateRowObjectString">
            <summary>设置 MAction.CreateRow(Object tableObj, String conn) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimMAction.AllInstances.DataBaseNameGet">
            <summary>设置 MAction.get_DataBaseName() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimMAction.AllInstances.DataBaseTypeGet">
            <summary>设置 MAction.get_DataBaseType() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimMAction.AllInstances.DataBaseVersionGet">
            <summary>设置 MAction.get_DataBaseVersion() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimMAction.AllInstances.DataGet">
            <summary>设置 MAction.get_Data() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimMAction.AllInstances.DebugInfoGet">
            <summary>设置 MAction.get_DebugInfo() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimMAction.AllInstances.DebugInfoSetString">
            <summary>设置 MAction.set_DebugInfo(String value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimMAction.AllInstances.Delete">
            <summary>设置 MAction.Delete() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimMAction.AllInstances.DeleteObject">
            <summary>设置 MAction.Delete(Object where) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimMAction.AllInstances.DeleteObjectBoolean">
            <summary>设置 MAction.Delete(Object where, Boolean isIgnoreDeleteField) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimMAction.AllInstances.Dispose">
            <summary>设置 MAction.Dispose() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimMAction.AllInstances.DisposeBoolean">
            <summary>设置 MAction.Dispose(Boolean isOnError) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimMAction.AllInstances.EndTransation">
            <summary>设置 MAction.EndTransation() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimMAction.AllInstances.Exists">
            <summary>设置 MAction.Exists() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimMAction.AllInstances.ExistsObject">
            <summary>设置 MAction.Exists(Object where) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimMAction.AllInstances.Fill">
            <summary>设置 MAction.Fill() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimMAction.AllInstances.FillObject">
            <summary>设置 MAction.Fill(Object where) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimMAction.AllInstances.GetCount">
            <summary>设置 MAction.GetCount() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimMAction.AllInstances.GetCountObject">
            <summary>设置 MAction.GetCount(Object where) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimMAction.AllInstances.GetWhereBooleanMDataCellArray">
            <summary>设置 MAction.GetWhere(Boolean isAnd, MDataCell[] cells) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimMAction.AllInstances.GetWhereMDataCellArray">
            <summary>设置 MAction.GetWhere(MDataCell[] cells) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimMAction.AllInstances.InitDalHelperMDataRowString">
            <summary>设置 MAction.InitDalHelper(MDataRow newRow, String newDbName) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimMAction.AllInstances.InitGlobalObjectBoolean">
            <summary>设置 MAction.InitGlobalObject(Boolean allowCreate) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimMAction.AllInstances.InitObjectStringBooleanStringBoolean">
            <summary>设置 MAction.Init(Object tableObj, String conn, Boolean resetState, String newDbName, Boolean isFirstInit) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimMAction.AllInstances.InitRowSchemaMDataRowBoolean">
            <summary>设置 MAction.InitRowSchema(MDataRow row, Boolean resetState) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimMAction.AllInstances.Insert">
            <summary>设置 MAction.Insert() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimMAction.AllInstances.InsertBoolean">
            <summary>设置 MAction.Insert(Boolean autoSetValue) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimMAction.AllInstances.InsertBooleanInsertOp">
            <summary>设置 MAction.Insert(Boolean autoSetValue, InsertOp option) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimMAction.AllInstances.InsertInsertOp">
            <summary>设置 MAction.Insert(InsertOp option) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimMAction.AllInstances.InsertOrUpdateString">
            <summary>设置 MAction.InsertOrUpdate(String sqlCommandText) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimMAction.AllInstances.IsTransationGet">
            <summary>设置 MAction.get_IsTransation() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimMAction.AllInstances.OnError">
            <summary>设置 MAction.OnError() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimMAction.AllInstances.RecordsAffectedGet">
            <summary>设置 MAction.get_RecordsAffected() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimMAction.AllInstances.ResetTableObject">
            <summary>设置 MAction.ResetTable(Object tableObj) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimMAction.AllInstances.ResetTableObjectBoolean">
            <summary>设置 MAction.ResetTable(Object tableObj, Boolean resetState) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimMAction.AllInstances.ResetTableObjectBooleanString">
            <summary>设置 MAction.ResetTable(Object tableObj, Boolean resetState, String newDbName) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimMAction.AllInstances.RollBack">
            <summary>设置 MAction.RollBack() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimMAction.AllInstances.Select">
            <summary>设置 MAction.Select() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimMAction.AllInstances.SelectInt32Int32">
            <summary>设置 MAction.Select(Int32 pageIndex, Int32 pageSize) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimMAction.AllInstances.SelectInt32Int32Object">
            <summary>设置 MAction.Select(Int32 pageIndex, Int32 pageSize, Object where) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimMAction.AllInstances.SelectInt32Int32ObjectInt32Out">
            <summary>设置 MAction.Select(Int32 pageIndex, Int32 pageSize, Object where, Int32&amp; rowCount) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimMAction.AllInstances.SelectInt32Object">
            <summary>设置 MAction.Select(Int32 topN, Object where) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimMAction.AllInstances.SelectObject">
            <summary>设置 MAction.Select(Object where) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimMAction.AllInstances.SetAopParaObject">
            <summary>设置 MAction.SetAopPara(Object para) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimMAction.AllInstances.SetAopStateAopOp">
            <summary>设置 MAction.SetAopState(AopOp op) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimMAction.AllInstances.SetExpressionString">
            <summary>设置 MAction.SetExpression(String updateExpression) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimMAction.AllInstances.SetObjectObject">
            <summary>设置 MAction.Set(Object key, Object value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimMAction.AllInstances.SetObjectObjectInt32">
            <summary>设置 MAction.Set(Object key, Object value, Int32 state) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimMAction.AllInstances.SetParaListOfAopCustomDbPara">
            <summary>设置 MAction.SetPara(List`1&lt;AopCustomDbPara&gt; customParas) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimMAction.AllInstances.SetParaObjectObject">
            <summary>设置 MAction.SetPara(Object paraName, Object value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimMAction.AllInstances.SetParaObjectObjectDbType">
            <summary>设置 MAction.SetPara(Object paraName, Object value, DbType dbType) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimMAction.AllInstances.SetSelectColumnsObjectArray">
            <summary>设置 MAction.SetSelectColumns(Object[] columnNames) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimMAction.AllInstances.SetTransLevelIsolationLevel">
            <summary>设置 MAction.SetTransLevel(IsolationLevel level) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimMAction.AllInstances.SetidentityInsertOff">
            <summary>设置 MAction.SetidentityInsertOff() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimMAction.AllInstances.SetidentityInsertOn">
            <summary>设置 MAction.SetidentityInsertOn() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimMAction.AllInstances.SetsObjectObjectArray">
            <summary>设置 MAction.Sets(Object startKey, Object[] values) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimMAction.AllInstances.TableNameGet">
            <summary>设置 MAction.get_TableName() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimMAction.AllInstances.TableNameSetString">
            <summary>设置 MAction.set_TableName(String value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimMAction.AllInstances.TimeOutGet">
            <summary>设置 MAction.get_TimeOut() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimMAction.AllInstances.TimeOutSetInt32">
            <summary>设置 MAction.set_TimeOut(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimMAction.AllInstances.UIGet">
            <summary>设置 MAction.get_UI() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimMAction.AllInstances.Update">
            <summary>设置 MAction.Update() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimMAction.AllInstances.UpdateBoolean">
            <summary>设置 MAction.Update(Boolean autoSetValue) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimMAction.AllInstances.UpdateObject">
            <summary>设置 MAction.Update(Object where) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimMAction.AllInstances.UpdateObjectBoolean">
            <summary>设置 MAction.Update(Object where, Boolean autoSetValue) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimMAction.AllInstances._DataSqlHelper_OnExceptionEventString">
            <summary>设置 MAction._DataSqlHelper_OnExceptionEvent(String msg) 的 填充码</summary>
        </member>
        <member name="T:CYQ.Data.Fakes.ShimMProc">
            <summary>CYQ.Data.MProc 的填充码类型</summary>
        </member>
        <member name="M:CYQ.Data.Fakes.ShimMProc.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:CYQ.Data.Fakes.ShimMProc.#ctor(CYQ.Data.MProc)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:CYQ.Data.Fakes.ShimMProc.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:CYQ.Data.Fakes.ShimMProc.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:CYQ.Data.Fakes.ShimMProc.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:CYQ.Data.Fakes.ShimMProc.ExeListOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.List{``0}})">
            <summary>设置 MProc.ExeList() 的 填充码</summary>
        </member>
        <member name="M:CYQ.Data.Fakes.ShimMProc.ExeScalarOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0})">
            <summary>设置 MProc.ExeScalar() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimMProc.BeginTransation">
            <summary>设置 MProc.BeginTransation() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimMProc.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimMProc.CheckDisposed">
            <summary>设置 MProc.CheckDisposed() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimMProc.Clear">
            <summary>设置 MProc.Clear() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimMProc.ConnNameGet">
            <summary>设置 MProc.get_ConnName() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimMProc.ConnStringGet">
            <summary>设置 MProc.get_ConnString() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimMProc.ConstructorObject">
            <summary>设置 MProc.MProc(Object procNameOrSql) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimMProc.ConstructorObjectString">
            <summary>设置 MProc.MProc(Object procNameOrSql, String conn) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimMProc.DataBaseNameGet">
            <summary>设置 MProc.get_DataBaseName() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimMProc.DataBaseTypeGet">
            <summary>设置 MProc.get_DataBaseType() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimMProc.DataBaseVersionGet">
            <summary>设置 MProc.get_DataBaseVersion() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimMProc.DebugInfoGet">
            <summary>设置 MProc.get_DebugInfo() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimMProc.Dispose">
            <summary>设置 MProc.Dispose() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimMProc.EndTransation">
            <summary>设置 MProc.EndTransation() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimMProc.ExeMDataTable">
            <summary>设置 MProc.ExeMDataTable() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimMProc.ExeMDataTableList">
            <summary>设置 MProc.ExeMDataTableList() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimMProc.ExeNonQuery">
            <summary>设置 MProc.ExeNonQuery() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimMProc.ImplicitOpMActionMProc">
            <summary>设置 MProc.op_Implicit(MAction action) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimMProc.ImplicitOpOrmBaseMProc">
            <summary>设置 MProc.op_Implicit(OrmBase orm) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimMProc.ImplicitOpSimpleOrmBaseMProc">
            <summary>设置 MProc.op_Implicit(SimpleOrmBase orm) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimMProc.InitObjectStringBoolean">
            <summary>设置 MProc.Init(Object procNameOrSql, String conn, Boolean isClearPara) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimMProc.IsTransationGet">
            <summary>设置 MProc.get_IsTransation() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimMProc.OutPutValueGet">
            <summary>设置 MProc.get_OutPutValue() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimMProc.RecordsAffectedGet">
            <summary>设置 MProc.get_RecordsAffected() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimMProc.ResetProcObject">
            <summary>设置 MProc.ResetProc(Object procNameOrSql) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimMProc.ResetProcObjectBoolean">
            <summary>设置 MProc.ResetProc(Object procNameOrSql, Boolean isClearPara) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimMProc.ReturnValueGet">
            <summary>设置 MProc.get_ReturnValue() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimMProc.RollBack">
            <summary>设置 MProc.RollBack() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimMProc.SetAopParaObject">
            <summary>设置 MProc.SetAopPara(Object para) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimMProc.SetAopResultAopEnum">
            <summary>设置 MProc.SetAopResult(AopEnum action) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimMProc.SetAopStateAopOp">
            <summary>设置 MProc.SetAopState(AopOp op) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimMProc.SetCustomObjectParaType">
            <summary>设置 MProc.SetCustom(Object paraName, ParaType paraType) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimMProc.SetCustomObjectParaTypeObject">
            <summary>设置 MProc.SetCustom(Object paraName, ParaType paraType, Object value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimMProc.SetCustomObjectParaTypeObjectString">
            <summary>设置 MProc.SetCustom(Object paraName, ParaType paraType, Object value, String typeName) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimMProc.SetObjectObject">
            <summary>设置 MProc.Set(Object paraName, Object value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimMProc.SetObjectObjectDbType">
            <summary>设置 MProc.Set(Object paraName, Object value, DbType dbType) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimMProc.SetTransLevelIsolationLevel">
            <summary>设置 MProc.SetTransLevel(IsolationLevel level) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimMProc.TimeOutGet">
            <summary>设置 MProc.get_TimeOut() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimMProc.TimeOutSetInt32">
            <summary>设置 MProc.set_TimeOut(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimMProc.helper_OnExceptionEventString">
            <summary>设置 MProc.helper_OnExceptionEvent(String errorMsg) 的 填充码</summary>
        </member>
        <member name="T:CYQ.Data.Fakes.ShimMProc.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:CYQ.Data.Fakes.ShimMProc.AllInstances.ExeListOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{CYQ.Data.MProc,System.Collections.Generic.List{``0}})">
            <summary>设置 MProc.ExeList() 的 填充码</summary>
        </member>
        <member name="M:CYQ.Data.Fakes.ShimMProc.AllInstances.ExeScalarOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{CYQ.Data.MProc,``0})">
            <summary>设置 MProc.ExeScalar() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimMProc.AllInstances.BeginTransation">
            <summary>设置 MProc.BeginTransation() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimMProc.AllInstances.CheckDisposed">
            <summary>设置 MProc.CheckDisposed() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimMProc.AllInstances.Clear">
            <summary>设置 MProc.Clear() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimMProc.AllInstances.ConnNameGet">
            <summary>设置 MProc.get_ConnName() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimMProc.AllInstances.ConnStringGet">
            <summary>设置 MProc.get_ConnString() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimMProc.AllInstances.DataBaseNameGet">
            <summary>设置 MProc.get_DataBaseName() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimMProc.AllInstances.DataBaseTypeGet">
            <summary>设置 MProc.get_DataBaseType() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimMProc.AllInstances.DataBaseVersionGet">
            <summary>设置 MProc.get_DataBaseVersion() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimMProc.AllInstances.DebugInfoGet">
            <summary>设置 MProc.get_DebugInfo() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimMProc.AllInstances.Dispose">
            <summary>设置 MProc.Dispose() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimMProc.AllInstances.EndTransation">
            <summary>设置 MProc.EndTransation() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimMProc.AllInstances.ExeMDataTable">
            <summary>设置 MProc.ExeMDataTable() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimMProc.AllInstances.ExeMDataTableList">
            <summary>设置 MProc.ExeMDataTableList() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimMProc.AllInstances.ExeNonQuery">
            <summary>设置 MProc.ExeNonQuery() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimMProc.AllInstances.InitObjectStringBoolean">
            <summary>设置 MProc.Init(Object procNameOrSql, String conn, Boolean isClearPara) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimMProc.AllInstances.IsTransationGet">
            <summary>设置 MProc.get_IsTransation() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimMProc.AllInstances.OutPutValueGet">
            <summary>设置 MProc.get_OutPutValue() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimMProc.AllInstances.RecordsAffectedGet">
            <summary>设置 MProc.get_RecordsAffected() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimMProc.AllInstances.ResetProcObject">
            <summary>设置 MProc.ResetProc(Object procNameOrSql) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimMProc.AllInstances.ResetProcObjectBoolean">
            <summary>设置 MProc.ResetProc(Object procNameOrSql, Boolean isClearPara) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimMProc.AllInstances.ReturnValueGet">
            <summary>设置 MProc.get_ReturnValue() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimMProc.AllInstances.RollBack">
            <summary>设置 MProc.RollBack() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimMProc.AllInstances.SetAopParaObject">
            <summary>设置 MProc.SetAopPara(Object para) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimMProc.AllInstances.SetAopResultAopEnum">
            <summary>设置 MProc.SetAopResult(AopEnum action) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimMProc.AllInstances.SetAopStateAopOp">
            <summary>设置 MProc.SetAopState(AopOp op) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimMProc.AllInstances.SetCustomObjectParaType">
            <summary>设置 MProc.SetCustom(Object paraName, ParaType paraType) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimMProc.AllInstances.SetCustomObjectParaTypeObject">
            <summary>设置 MProc.SetCustom(Object paraName, ParaType paraType, Object value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimMProc.AllInstances.SetCustomObjectParaTypeObjectString">
            <summary>设置 MProc.SetCustom(Object paraName, ParaType paraType, Object value, String typeName) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimMProc.AllInstances.SetObjectObject">
            <summary>设置 MProc.Set(Object paraName, Object value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimMProc.AllInstances.SetObjectObjectDbType">
            <summary>设置 MProc.Set(Object paraName, Object value, DbType dbType) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimMProc.AllInstances.SetTransLevelIsolationLevel">
            <summary>设置 MProc.SetTransLevel(IsolationLevel level) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimMProc.AllInstances.TimeOutGet">
            <summary>设置 MProc.get_TimeOut() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimMProc.AllInstances.TimeOutSetInt32">
            <summary>设置 MProc.set_TimeOut(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimMProc.AllInstances.helper_OnExceptionEventString">
            <summary>设置 MProc.helper_OnExceptionEvent(String errorMsg) 的 填充码</summary>
        </member>
        <member name="T:CYQ.Data.Fakes.ShimSysLogs">
            <summary>CYQ.Data.SysLogs 的填充码类型</summary>
        </member>
        <member name="M:CYQ.Data.Fakes.ShimSysLogs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:CYQ.Data.Fakes.ShimSysLogs.#ctor(CYQ.Data.SysLogs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:CYQ.Data.Fakes.ShimSysLogs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:CYQ.Data.Fakes.ShimSysLogs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:CYQ.Data.Fakes.ShimSysLogs.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimSysLogs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimSysLogs.ClientIPGet">
            <summary>设置 SysLogs.get_ClientIP() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimSysLogs.ClientIPSetString">
            <summary>设置 SysLogs.set_ClientIP(String value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimSysLogs.Constructor">
            <summary>设置 SysLogs.SysLogs() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimSysLogs.CreateTimeGet">
            <summary>设置 SysLogs.get_CreateTime() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimSysLogs.CreateTimeSetDateTime">
            <summary>设置 SysLogs.set_CreateTime(DateTime value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimSysLogs.GetFormatterText">
            <summary>设置 SysLogs.GetFormatterText() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimSysLogs.HostGet">
            <summary>设置 SysLogs.get_Host() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimSysLogs.HostNameGet">
            <summary>设置 SysLogs.get_HostName() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimSysLogs.HostNameSetString">
            <summary>设置 SysLogs.set_HostName(String value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimSysLogs.HostSetString">
            <summary>设置 SysLogs.set_Host(String value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimSysLogs.HttpMethodGet">
            <summary>设置 SysLogs.get_HttpMethod() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimSysLogs.HttpMethodSetString">
            <summary>设置 SysLogs.set_HttpMethod(String value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimSysLogs.IDGet">
            <summary>设置 SysLogs.get_ID() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimSysLogs.IDSetInt32">
            <summary>设置 SysLogs.set_ID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimSysLogs.LogTypeGet">
            <summary>设置 SysLogs.get_LogType() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimSysLogs.LogTypeSetString">
            <summary>设置 SysLogs.set_LogType(String value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimSysLogs.MessageGet">
            <summary>设置 SysLogs.get_Message() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimSysLogs.MessageSetString">
            <summary>设置 SysLogs.set_Message(String value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimSysLogs.PageUrlGet">
            <summary>设置 SysLogs.get_PageUrl() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimSysLogs.PageUrlSetString">
            <summary>设置 SysLogs.set_PageUrl(String value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimSysLogs.RefererUrlGet">
            <summary>设置 SysLogs.get_RefererUrl() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimSysLogs.RefererUrlSetString">
            <summary>设置 SysLogs.set_RefererUrl(String value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimSysLogs.Write">
            <summary>设置 SysLogs.Write() 的 填充码</summary>
        </member>
        <member name="T:CYQ.Data.Fakes.ShimSysLogs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimSysLogs.AllInstances.ClientIPGet">
            <summary>设置 SysLogs.get_ClientIP() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimSysLogs.AllInstances.ClientIPSetString">
            <summary>设置 SysLogs.set_ClientIP(String value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimSysLogs.AllInstances.CreateTimeGet">
            <summary>设置 SysLogs.get_CreateTime() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimSysLogs.AllInstances.CreateTimeSetDateTime">
            <summary>设置 SysLogs.set_CreateTime(DateTime value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimSysLogs.AllInstances.GetFormatterText">
            <summary>设置 SysLogs.GetFormatterText() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimSysLogs.AllInstances.HostGet">
            <summary>设置 SysLogs.get_Host() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimSysLogs.AllInstances.HostNameGet">
            <summary>设置 SysLogs.get_HostName() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimSysLogs.AllInstances.HostNameSetString">
            <summary>设置 SysLogs.set_HostName(String value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimSysLogs.AllInstances.HostSetString">
            <summary>设置 SysLogs.set_Host(String value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimSysLogs.AllInstances.HttpMethodGet">
            <summary>设置 SysLogs.get_HttpMethod() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimSysLogs.AllInstances.HttpMethodSetString">
            <summary>设置 SysLogs.set_HttpMethod(String value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimSysLogs.AllInstances.IDGet">
            <summary>设置 SysLogs.get_ID() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimSysLogs.AllInstances.IDSetInt32">
            <summary>设置 SysLogs.set_ID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimSysLogs.AllInstances.LogTypeGet">
            <summary>设置 SysLogs.get_LogType() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimSysLogs.AllInstances.LogTypeSetString">
            <summary>设置 SysLogs.set_LogType(String value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimSysLogs.AllInstances.MessageGet">
            <summary>设置 SysLogs.get_Message() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimSysLogs.AllInstances.MessageSetString">
            <summary>设置 SysLogs.set_Message(String value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimSysLogs.AllInstances.PageUrlGet">
            <summary>设置 SysLogs.get_PageUrl() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimSysLogs.AllInstances.PageUrlSetString">
            <summary>设置 SysLogs.set_PageUrl(String value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimSysLogs.AllInstances.RefererUrlGet">
            <summary>设置 SysLogs.get_RefererUrl() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimSysLogs.AllInstances.RefererUrlSetString">
            <summary>设置 SysLogs.set_RefererUrl(String value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.ShimSysLogs.AllInstances.Write">
            <summary>设置 SysLogs.Write() 的 填充码</summary>
        </member>
        <member name="T:CYQ.Data.Fakes.StubJsonEnumToDescriptionAttribute">
            <summary>CYQ.Data.JsonEnumToDescriptionAttribute 的存根类型</summary>
        </member>
        <member name="M:CYQ.Data.Fakes.StubJsonEnumToDescriptionAttribute.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:CYQ.Data.Fakes.StubJsonEnumToDescriptionAttribute.Equals(System.Object)">
            <summary>设置 Attribute.Equals(Object obj) 的 存根</summary>
        </member>
        <member name="F:CYQ.Data.Fakes.StubJsonEnumToDescriptionAttribute.EqualsObject">
            <summary>设置 Attribute.Equals(Object obj) 的 stub</summary>
        </member>
        <member name="M:CYQ.Data.Fakes.StubJsonEnumToDescriptionAttribute.GetHashCode">
            <summary>设置 Attribute.GetHashCode() 的 存根</summary>
        </member>
        <member name="F:CYQ.Data.Fakes.StubJsonEnumToDescriptionAttribute.GetHashCode01">
            <summary>设置 Attribute.GetHashCode() 的 stub</summary>
        </member>
        <member name="M:CYQ.Data.Fakes.StubJsonEnumToDescriptionAttribute.InitializeStub">
            <summary>初始化 type StubJsonEnumToDescriptionAttribute 的新实例</summary>
        </member>
        <member name="M:CYQ.Data.Fakes.StubJsonEnumToDescriptionAttribute.IsDefaultAttribute">
            <summary>设置 Attribute.IsDefaultAttribute() 的 存根</summary>
        </member>
        <member name="F:CYQ.Data.Fakes.StubJsonEnumToDescriptionAttribute.IsDefaultAttribute01">
            <summary>设置 Attribute.IsDefaultAttribute() 的 stub</summary>
        </member>
        <member name="M:CYQ.Data.Fakes.StubJsonEnumToDescriptionAttribute.Match(System.Object)">
            <summary>设置 Attribute.Match(Object obj) 的 存根</summary>
        </member>
        <member name="F:CYQ.Data.Fakes.StubJsonEnumToDescriptionAttribute.MatchObject">
            <summary>设置 Attribute.Match(Object obj) 的 stub</summary>
        </member>
        <member name="F:CYQ.Data.Fakes.StubJsonEnumToDescriptionAttribute.TypeIdGet">
            <summary>设置 Attribute.get_TypeId() 的 stub</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.StubJsonEnumToDescriptionAttribute.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.StubJsonEnumToDescriptionAttribute.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.StubJsonEnumToDescriptionAttribute.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.StubJsonEnumToDescriptionAttribute.TypeId">
            <summary>设置 Attribute.get_TypeId() 的 stub</summary>
        </member>
        <member name="T:CYQ.Data.Fakes.StubJsonEnumToStringAttribute">
            <summary>CYQ.Data.JsonEnumToStringAttribute 的存根类型</summary>
        </member>
        <member name="M:CYQ.Data.Fakes.StubJsonEnumToStringAttribute.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:CYQ.Data.Fakes.StubJsonEnumToStringAttribute.Equals(System.Object)">
            <summary>设置 Attribute.Equals(Object obj) 的 存根</summary>
        </member>
        <member name="F:CYQ.Data.Fakes.StubJsonEnumToStringAttribute.EqualsObject">
            <summary>设置 Attribute.Equals(Object obj) 的 stub</summary>
        </member>
        <member name="M:CYQ.Data.Fakes.StubJsonEnumToStringAttribute.GetHashCode">
            <summary>设置 Attribute.GetHashCode() 的 存根</summary>
        </member>
        <member name="F:CYQ.Data.Fakes.StubJsonEnumToStringAttribute.GetHashCode01">
            <summary>设置 Attribute.GetHashCode() 的 stub</summary>
        </member>
        <member name="M:CYQ.Data.Fakes.StubJsonEnumToStringAttribute.InitializeStub">
            <summary>初始化 type StubJsonEnumToStringAttribute 的新实例</summary>
        </member>
        <member name="M:CYQ.Data.Fakes.StubJsonEnumToStringAttribute.IsDefaultAttribute">
            <summary>设置 Attribute.IsDefaultAttribute() 的 存根</summary>
        </member>
        <member name="F:CYQ.Data.Fakes.StubJsonEnumToStringAttribute.IsDefaultAttribute01">
            <summary>设置 Attribute.IsDefaultAttribute() 的 stub</summary>
        </member>
        <member name="M:CYQ.Data.Fakes.StubJsonEnumToStringAttribute.Match(System.Object)">
            <summary>设置 Attribute.Match(Object obj) 的 存根</summary>
        </member>
        <member name="F:CYQ.Data.Fakes.StubJsonEnumToStringAttribute.MatchObject">
            <summary>设置 Attribute.Match(Object obj) 的 stub</summary>
        </member>
        <member name="F:CYQ.Data.Fakes.StubJsonEnumToStringAttribute.TypeIdGet">
            <summary>设置 Attribute.get_TypeId() 的 stub</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.StubJsonEnumToStringAttribute.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.StubJsonEnumToStringAttribute.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.StubJsonEnumToStringAttribute.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.StubJsonEnumToStringAttribute.TypeId">
            <summary>设置 Attribute.get_TypeId() 的 stub</summary>
        </member>
        <member name="T:CYQ.Data.Fakes.StubJsonIgnoreAttribute">
            <summary>CYQ.Data.JsonIgnoreAttribute 的存根类型</summary>
        </member>
        <member name="M:CYQ.Data.Fakes.StubJsonIgnoreAttribute.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:CYQ.Data.Fakes.StubJsonIgnoreAttribute.Equals(System.Object)">
            <summary>设置 Attribute.Equals(Object obj) 的 存根</summary>
        </member>
        <member name="F:CYQ.Data.Fakes.StubJsonIgnoreAttribute.EqualsObject">
            <summary>设置 Attribute.Equals(Object obj) 的 stub</summary>
        </member>
        <member name="M:CYQ.Data.Fakes.StubJsonIgnoreAttribute.GetHashCode">
            <summary>设置 Attribute.GetHashCode() 的 存根</summary>
        </member>
        <member name="F:CYQ.Data.Fakes.StubJsonIgnoreAttribute.GetHashCode01">
            <summary>设置 Attribute.GetHashCode() 的 stub</summary>
        </member>
        <member name="M:CYQ.Data.Fakes.StubJsonIgnoreAttribute.InitializeStub">
            <summary>初始化 type StubJsonIgnoreAttribute 的新实例</summary>
        </member>
        <member name="M:CYQ.Data.Fakes.StubJsonIgnoreAttribute.IsDefaultAttribute">
            <summary>设置 Attribute.IsDefaultAttribute() 的 存根</summary>
        </member>
        <member name="F:CYQ.Data.Fakes.StubJsonIgnoreAttribute.IsDefaultAttribute01">
            <summary>设置 Attribute.IsDefaultAttribute() 的 stub</summary>
        </member>
        <member name="M:CYQ.Data.Fakes.StubJsonIgnoreAttribute.Match(System.Object)">
            <summary>设置 Attribute.Match(Object obj) 的 存根</summary>
        </member>
        <member name="F:CYQ.Data.Fakes.StubJsonIgnoreAttribute.MatchObject">
            <summary>设置 Attribute.Match(Object obj) 的 stub</summary>
        </member>
        <member name="F:CYQ.Data.Fakes.StubJsonIgnoreAttribute.TypeIdGet">
            <summary>设置 Attribute.get_TypeId() 的 stub</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.StubJsonIgnoreAttribute.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.StubJsonIgnoreAttribute.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.StubJsonIgnoreAttribute.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.StubJsonIgnoreAttribute.TypeId">
            <summary>设置 Attribute.get_TypeId() 的 stub</summary>
        </member>
        <member name="T:CYQ.Data.Fakes.StubMAction">
            <summary>CYQ.Data.MAction 的存根类型</summary>
        </member>
        <member name="M:CYQ.Data.Fakes.StubMAction.#ctor(System.Object)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:CYQ.Data.Fakes.StubMAction.#ctor(System.Object,System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:CYQ.Data.Fakes.StubMAction.InitializeStub">
            <summary>初始化 type StubMAction 的新实例</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.StubMAction.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.StubMAction.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.StubMAction.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:CYQ.Data.Fakes.StubMProc">
            <summary>CYQ.Data.MProc 的存根类型</summary>
        </member>
        <member name="M:CYQ.Data.Fakes.StubMProc.#ctor(System.Object)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:CYQ.Data.Fakes.StubMProc.#ctor(System.Object,System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:CYQ.Data.Fakes.StubMProc.InitializeStub">
            <summary>初始化 type StubMProc 的新实例</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.StubMProc.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.StubMProc.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.StubMProc.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:CYQ.Data.Fakes.StubSysLogs">
            <summary>CYQ.Data.SysLogs 的存根类型</summary>
        </member>
        <member name="M:CYQ.Data.Fakes.StubSysLogs.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:CYQ.Data.Fakes.StubSysLogs.Get``1(System.Object)">
            <summary>设置 SimpleOrmBase.Get(Object where) 的 存根</summary>
        </member>
        <member name="M:CYQ.Data.Fakes.StubSysLogs.GetOf1Object``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Object,``0})">
            <summary>设置 Get(Object where) 的存根</summary>
        </member>
        <member name="M:CYQ.Data.Fakes.StubSysLogs.InitializeStub">
            <summary>初始化 type StubSysLogs 的新实例</summary>
        </member>
        <member name="M:CYQ.Data.Fakes.StubSysLogs.Select``1">
            <summary>设置 SimpleOrmBase.Select() 的 存根</summary>
        </member>
        <member name="M:CYQ.Data.Fakes.StubSysLogs.Select``1(System.String)">
            <summary>设置 SimpleOrmBase.Select(String where) 的 存根</summary>
        </member>
        <member name="M:CYQ.Data.Fakes.StubSysLogs.Select``1(System.Int32,System.String)">
            <summary>设置 SimpleOrmBase.Select(Int32 topN, String where) 的 存根</summary>
        </member>
        <member name="M:CYQ.Data.Fakes.StubSysLogs.Select``1(System.Int32,System.Int32)">
            <summary>设置 SimpleOrmBase.Select(Int32 pageIndex, Int32 pageSize) 的 存根</summary>
        </member>
        <member name="M:CYQ.Data.Fakes.StubSysLogs.Select``1(System.Int32,System.Int32,System.String)">
            <summary>设置 SimpleOrmBase.Select(Int32 pageIndex, Int32 pageSize, String where) 的 存根</summary>
        </member>
        <member name="M:CYQ.Data.Fakes.StubSysLogs.Select``1(System.Int32,System.Int32,System.String,System.Int32@)">
            <summary>设置 SimpleOrmBase.Select(Int32 pageIndex, Int32 pageSize, String where, Int32&amp; count) 的 存根</summary>
        </member>
        <member name="M:CYQ.Data.Fakes.StubSysLogs.SelectOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.List{``0}})">
            <summary>设置 Select() 的存根</summary>
        </member>
        <member name="M:CYQ.Data.Fakes.StubSysLogs.SelectOf1Int32Int32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Int32,System.Int32,System.Collections.Generic.List{``0}})">
            <summary>设置 Select(Int32 pageIndex, Int32 pageSize) 的存根</summary>
        </member>
        <member name="M:CYQ.Data.Fakes.StubSysLogs.SelectOf1Int32Int32String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Int32,System.Int32,System.String,System.Collections.Generic.List{``0}})">
            <summary>设置 Select(Int32 pageIndex, Int32 pageSize, String where) 的存根</summary>
        </member>
        <member name="M:CYQ.Data.Fakes.StubSysLogs.SelectOf1Int32Int32StringInt32Out``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.OutFunc{System.Int32,System.Int32,System.String,System.Int32,System.Collections.Generic.List{``0}})">
            <summary>设置 Select(Int32 pageIndex, Int32 pageSize, String where, Int32&amp; count) 的存根</summary>
        </member>
        <member name="M:CYQ.Data.Fakes.StubSysLogs.SelectOf1Int32String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Int32,System.String,System.Collections.Generic.List{``0}})">
            <summary>设置 Select(Int32 topN, String where) 的存根</summary>
        </member>
        <member name="M:CYQ.Data.Fakes.StubSysLogs.SelectOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.Collections.Generic.List{``0}})">
            <summary>设置 Select(String where) 的存根</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.StubSysLogs.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.StubSysLogs.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:CYQ.Data.Fakes.StubSysLogs.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:CYQ.Data.Orm.Fakes.ShimColumnNameAttribute">
            <summary>CYQ.Data.Orm.ColumnNameAttribute 的填充码类型</summary>
        </member>
        <member name="M:CYQ.Data.Orm.Fakes.ShimColumnNameAttribute.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:CYQ.Data.Orm.Fakes.ShimColumnNameAttribute.#ctor(CYQ.Data.Orm.ColumnNameAttribute)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:CYQ.Data.Orm.Fakes.ShimColumnNameAttribute.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:CYQ.Data.Orm.Fakes.ShimColumnNameAttribute.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimColumnNameAttribute.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimColumnNameAttribute.ColumneNameGet">
            <summary>设置 ColumnNameAttribute.get_ColumneName() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimColumnNameAttribute.ColumneNameSetString">
            <summary>设置 ColumnNameAttribute.set_ColumneName(String value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimColumnNameAttribute.ConstructorString">
            <summary>设置 ColumnNameAttribute.ColumnNameAttribute(String columnName) 的 填充码</summary>
        </member>
        <member name="T:CYQ.Data.Orm.Fakes.ShimColumnNameAttribute.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimColumnNameAttribute.AllInstances.ColumneNameGet">
            <summary>设置 ColumnNameAttribute.get_ColumneName() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimColumnNameAttribute.AllInstances.ColumneNameSetString">
            <summary>设置 ColumnNameAttribute.set_ColumneName(String value) 的 填充码</summary>
        </member>
        <member name="T:CYQ.Data.Orm.Fakes.ShimDBFast">
            <summary>CYQ.Data.Orm.DBFast 的填充码类型</summary>
        </member>
        <member name="M:CYQ.Data.Orm.Fakes.ShimDBFast.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:CYQ.Data.Orm.Fakes.ShimDBFast.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:CYQ.Data.Orm.Fakes.ShimDBFast.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:CYQ.Data.Orm.Fakes.ShimDBFast.DeleteOf1Object``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Object,System.Boolean})">
            <summary>设置 DBFast.Delete(Object where) 的 填充码</summary>
        </member>
        <member name="M:CYQ.Data.Orm.Fakes.ShimDBFast.DeleteOf1ObjectBoolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Object,System.Boolean,System.Boolean})">
            <summary>设置 DBFast.Delete(Object where, Boolean isIgnoreDeleteField) 的 填充码</summary>
        </member>
        <member name="M:CYQ.Data.Orm.Fakes.ShimDBFast.ExistsOf1Object``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Object,System.Boolean})">
            <summary>设置 DBFast.Exists(Object where) 的 填充码</summary>
        </member>
        <member name="M:CYQ.Data.Orm.Fakes.ShimDBFast.FindOf1ObjectStringArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Object,System.String[],``0})">
            <summary>设置 DBFast.Find(Object where, String[] columns) 的 填充码</summary>
        </member>
        <member name="M:CYQ.Data.Orm.Fakes.ShimDBFast.GetCountOf1Object``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Object,System.Int32})">
            <summary>设置 DBFast.GetCount(Object where) 的 填充码</summary>
        </member>
        <member name="M:CYQ.Data.Orm.Fakes.ShimDBFast.GetMActionOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{CYQ.Data.MAction})">
            <summary>设置 DBFast.GetMAction() 的 填充码</summary>
        </member>
        <member name="M:CYQ.Data.Orm.Fakes.ShimDBFast.GetTableNameOf1StringOut``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.OutFunc{System.String,System.String})">
            <summary>设置 DBFast.GetTableName(String&amp; conn) 的 填充码</summary>
        </member>
        <member name="M:CYQ.Data.Orm.Fakes.ShimDBFast.InsertOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,System.Boolean})">
            <summary>设置 DBFast.Insert(!!0 t) 的 填充码</summary>
        </member>
        <member name="M:CYQ.Data.Orm.Fakes.ShimDBFast.InsertOf1M0InsertOp``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,CYQ.Data.InsertOp,System.Boolean})">
            <summary>设置 DBFast.Insert(!!0 t, InsertOp op) 的 填充码</summary>
        </member>
        <member name="M:CYQ.Data.Orm.Fakes.ShimDBFast.InsertOf1M0InsertOpBoolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,CYQ.Data.InsertOp,System.Boolean,System.Boolean})">
            <summary>设置 DBFast.Insert(!!0 t, InsertOp op, Boolean insertID) 的 填充码</summary>
        </member>
        <member name="M:CYQ.Data.Orm.Fakes.ShimDBFast.SelectOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.List{``0}})">
            <summary>设置 DBFast.Select() 的 填充码</summary>
        </member>
        <member name="M:CYQ.Data.Orm.Fakes.ShimDBFast.SelectOf1Int32Int32ObjectInt32OutStringArray``1(Microsoft.QualityTools.Testing.Fakes.Delegates.CYQDataDelegates.Out3Func6{System.Int32,System.Int32,System.Object,System.Int32,System.String[],System.Collections.Generic.List{``0}})">
            <summary>设置 DBFast.Select(Int32 pageIndex, Int32 pageSize, Object where, Int32&amp; count, String[] columns) 的 填充码</summary>
        </member>
        <member name="M:CYQ.Data.Orm.Fakes.ShimDBFast.SelectOf1Int32Int32StringArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Int32,System.Int32,System.String[],System.Collections.Generic.List{``0}})">
            <summary>设置 DBFast.Select(Int32 pageIndex, Int32 pageSize, String[] columns) 的 填充码</summary>
        </member>
        <member name="M:CYQ.Data.Orm.Fakes.ShimDBFast.SelectOf1Int32Int32StringStringArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Int32,System.Int32,System.String,System.String[],System.Collections.Generic.List{``0}})">
            <summary>设置 DBFast.Select(Int32 pageIndex, Int32 pageSize, String where, String[] columns) 的 填充码</summary>
        </member>
        <member name="M:CYQ.Data.Orm.Fakes.ShimDBFast.SelectOf1Int32StringStringArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Int32,System.String,System.String[],System.Collections.Generic.List{``0}})">
            <summary>设置 DBFast.Select(Int32 topN, String where, String[] columns) 的 填充码</summary>
        </member>
        <member name="M:CYQ.Data.Orm.Fakes.ShimDBFast.SelectOf1StringStringArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.String[],System.Collections.Generic.List{``0}})">
            <summary>设置 DBFast.Select(String where, String[] columns) 的 填充码</summary>
        </member>
        <member name="M:CYQ.Data.Orm.Fakes.ShimDBFast.UpdateOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,System.Boolean})">
            <summary>设置 DBFast.Update(!!0 t) 的 填充码</summary>
        </member>
        <member name="M:CYQ.Data.Orm.Fakes.ShimDBFast.UpdateOf1M0ObjectStringArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,System.Object,System.String[],System.Boolean})">
            <summary>设置 DBFast.Update(!!0 t, Object where, String[] updateColumns) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimDBFast.BeginTransationString">
            <summary>设置 DBFast.BeginTransation(String conn) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimDBFast.BeginTransationStringIsolationLevel">
            <summary>设置 DBFast.BeginTransation(String conn, IsolationLevel level) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimDBFast.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimDBFast.EndTransationString">
            <summary>设置 DBFast.EndTransation(String conn) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimDBFast.GetTransationLevelString">
            <summary>设置 DBFast.GetTransationLevel(String key) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimDBFast.HasTransationString">
            <summary>设置 DBFast.HasTransation(String key) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimDBFast.RollBackString">
            <summary>设置 DBFast.RollBack(String conn) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimDBFast.StaticConstructor">
            <summary>设置 DBFast.DBFast() 的 填充码</summary>
        </member>
        <member name="T:CYQ.Data.Orm.Fakes.ShimDefaultValueAttribute">
            <summary>CYQ.Data.Orm.DefaultValueAttribute 的填充码类型</summary>
        </member>
        <member name="M:CYQ.Data.Orm.Fakes.ShimDefaultValueAttribute.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:CYQ.Data.Orm.Fakes.ShimDefaultValueAttribute.#ctor(CYQ.Data.Orm.DefaultValueAttribute)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:CYQ.Data.Orm.Fakes.ShimDefaultValueAttribute.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:CYQ.Data.Orm.Fakes.ShimDefaultValueAttribute.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimDefaultValueAttribute.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimDefaultValueAttribute.ConstructorObject">
            <summary>设置 DefaultValueAttribute.DefaultValueAttribute(Object defaultValue) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimDefaultValueAttribute.DefaultValueGet">
            <summary>设置 DefaultValueAttribute.get_DefaultValue() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimDefaultValueAttribute.DefaultValueSetObject">
            <summary>设置 DefaultValueAttribute.set_DefaultValue(Object value) 的 填充码</summary>
        </member>
        <member name="T:CYQ.Data.Orm.Fakes.ShimDefaultValueAttribute.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimDefaultValueAttribute.AllInstances.DefaultValueGet">
            <summary>设置 DefaultValueAttribute.get_DefaultValue() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimDefaultValueAttribute.AllInstances.DefaultValueSetObject">
            <summary>设置 DefaultValueAttribute.set_DefaultValue(Object value) 的 填充码</summary>
        </member>
        <member name="T:CYQ.Data.Orm.Fakes.ShimDescriptionAttribute">
            <summary>CYQ.Data.Orm.DescriptionAttribute 的填充码类型</summary>
        </member>
        <member name="M:CYQ.Data.Orm.Fakes.ShimDescriptionAttribute.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:CYQ.Data.Orm.Fakes.ShimDescriptionAttribute.#ctor(CYQ.Data.Orm.DescriptionAttribute)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:CYQ.Data.Orm.Fakes.ShimDescriptionAttribute.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:CYQ.Data.Orm.Fakes.ShimDescriptionAttribute.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimDescriptionAttribute.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimDescriptionAttribute.ConstructorString">
            <summary>设置 DescriptionAttribute.DescriptionAttribute(String description) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimDescriptionAttribute.DescriptionGet">
            <summary>设置 DescriptionAttribute.get_Description() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimDescriptionAttribute.DescriptionSetString">
            <summary>设置 DescriptionAttribute.set_Description(String value) 的 填充码</summary>
        </member>
        <member name="T:CYQ.Data.Orm.Fakes.ShimDescriptionAttribute.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimDescriptionAttribute.AllInstances.DescriptionGet">
            <summary>设置 DescriptionAttribute.get_Description() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimDescriptionAttribute.AllInstances.DescriptionSetString">
            <summary>设置 DescriptionAttribute.set_Description(String value) 的 填充码</summary>
        </member>
        <member name="T:CYQ.Data.Orm.Fakes.ShimKeyAttribute">
            <summary>CYQ.Data.Orm.KeyAttribute 的填充码类型</summary>
        </member>
        <member name="M:CYQ.Data.Orm.Fakes.ShimKeyAttribute.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:CYQ.Data.Orm.Fakes.ShimKeyAttribute.#ctor(CYQ.Data.Orm.KeyAttribute)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:CYQ.Data.Orm.Fakes.ShimKeyAttribute.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:CYQ.Data.Orm.Fakes.ShimKeyAttribute.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimKeyAttribute.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimKeyAttribute.ConstructorBoolean">
            <summary>设置 KeyAttribute.KeyAttribute(Boolean isAutoIncrement) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimKeyAttribute.ConstructorBooleanBoolean">
            <summary>设置 KeyAttribute.KeyAttribute(Boolean isAutoIncrement, Boolean isPrimaryKey) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimKeyAttribute.ConstructorBooleanBooleanBoolean">
            <summary>设置 KeyAttribute.KeyAttribute(Boolean isAutoIncrement, Boolean isPrimaryKey, Boolean isCanNull) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimKeyAttribute.IsAutoIncrementGet">
            <summary>设置 KeyAttribute.get_IsAutoIncrement() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimKeyAttribute.IsAutoIncrementSetBoolean">
            <summary>设置 KeyAttribute.set_IsAutoIncrement(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimKeyAttribute.IsCanNullGet">
            <summary>设置 KeyAttribute.get_IsCanNull() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimKeyAttribute.IsCanNullSetBoolean">
            <summary>设置 KeyAttribute.set_IsCanNull(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimKeyAttribute.IsPrimaryKeyGet">
            <summary>设置 KeyAttribute.get_IsPrimaryKey() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimKeyAttribute.IsPrimaryKeySetBoolean">
            <summary>设置 KeyAttribute.set_IsPrimaryKey(Boolean value) 的 填充码</summary>
        </member>
        <member name="T:CYQ.Data.Orm.Fakes.ShimKeyAttribute.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimKeyAttribute.AllInstances.IsAutoIncrementGet">
            <summary>设置 KeyAttribute.get_IsAutoIncrement() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimKeyAttribute.AllInstances.IsAutoIncrementSetBoolean">
            <summary>设置 KeyAttribute.set_IsAutoIncrement(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimKeyAttribute.AllInstances.IsCanNullGet">
            <summary>设置 KeyAttribute.get_IsCanNull() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimKeyAttribute.AllInstances.IsCanNullSetBoolean">
            <summary>设置 KeyAttribute.set_IsCanNull(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimKeyAttribute.AllInstances.IsPrimaryKeyGet">
            <summary>设置 KeyAttribute.get_IsPrimaryKey() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimKeyAttribute.AllInstances.IsPrimaryKeySetBoolean">
            <summary>设置 KeyAttribute.set_IsPrimaryKey(Boolean value) 的 填充码</summary>
        </member>
        <member name="T:CYQ.Data.Orm.Fakes.ShimLengthAttribute">
            <summary>CYQ.Data.Orm.LengthAttribute 的填充码类型</summary>
        </member>
        <member name="M:CYQ.Data.Orm.Fakes.ShimLengthAttribute.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:CYQ.Data.Orm.Fakes.ShimLengthAttribute.#ctor(CYQ.Data.Orm.LengthAttribute)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:CYQ.Data.Orm.Fakes.ShimLengthAttribute.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:CYQ.Data.Orm.Fakes.ShimLengthAttribute.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimLengthAttribute.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimLengthAttribute.ConstructorInt32">
            <summary>设置 LengthAttribute.LengthAttribute(Int32 maxSize) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimLengthAttribute.ConstructorInt32Int16">
            <summary>设置 LengthAttribute.LengthAttribute(Int32 maxSize, Int16 scale) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimLengthAttribute.MaxSizeGet">
            <summary>设置 LengthAttribute.get_MaxSize() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimLengthAttribute.MaxSizeSetInt32">
            <summary>设置 LengthAttribute.set_MaxSize(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimLengthAttribute.ScaleGet">
            <summary>设置 LengthAttribute.get_Scale() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimLengthAttribute.ScaleSetInt16">
            <summary>设置 LengthAttribute.set_Scale(Int16 value) 的 填充码</summary>
        </member>
        <member name="T:CYQ.Data.Orm.Fakes.ShimLengthAttribute.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimLengthAttribute.AllInstances.MaxSizeGet">
            <summary>设置 LengthAttribute.get_MaxSize() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimLengthAttribute.AllInstances.MaxSizeSetInt32">
            <summary>设置 LengthAttribute.set_MaxSize(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimLengthAttribute.AllInstances.ScaleGet">
            <summary>设置 LengthAttribute.get_Scale() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimLengthAttribute.AllInstances.ScaleSetInt16">
            <summary>设置 LengthAttribute.set_Scale(Int16 value) 的 填充码</summary>
        </member>
        <member name="T:CYQ.Data.Orm.Fakes.ShimOrmBase">
            <summary>CYQ.Data.Orm.OrmBase 的填充码类型</summary>
        </member>
        <member name="M:CYQ.Data.Orm.Fakes.ShimOrmBase.#ctor(CYQ.Data.Orm.OrmBase)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:CYQ.Data.Orm.Fakes.ShimOrmBase.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:CYQ.Data.Orm.Fakes.ShimOrmBase.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:CYQ.Data.Orm.Fakes.ShimOrmBase.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimOrmBase.ActionGet">
            <summary>设置 OrmBase.get_Action() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimOrmBase.AllowInsertIDGet">
            <summary>设置 OrmBase.get_AllowInsertID() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimOrmBase.AllowInsertIDSetBoolean">
            <summary>设置 OrmBase.set_AllowInsertID(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimOrmBase.BaseInfoGet">
            <summary>设置 OrmBase.get_BaseInfo() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimOrmBase.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimOrmBase.Clear">
            <summary>设置 OrmBase.Clear() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimOrmBase.ClearPara">
            <summary>设置 OrmBase.ClearPara() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimOrmBase.Constructor">
            <summary>设置 OrmBase.OrmBase() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimOrmBase.Delete">
            <summary>设置 OrmBase.Delete() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimOrmBase.DeleteObject">
            <summary>设置 OrmBase.Delete(Object where) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimOrmBase.Dispose">
            <summary>设置 OrmBase.Dispose() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimOrmBase.ExistsObject">
            <summary>设置 OrmBase.Exists(Object where) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimOrmBase.Fill">
            <summary>设置 OrmBase.Fill() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimOrmBase.FillObject">
            <summary>设置 OrmBase.Fill(Object where) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimOrmBase.GetCount">
            <summary>设置 OrmBase.GetCount() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimOrmBase.GetCountObject">
            <summary>设置 OrmBase.GetCount(Object where) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimOrmBase.GetObject">
            <summary>设置 OrmBase.Get(Object where) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimOrmBase.Insert">
            <summary>设置 OrmBase.Insert() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimOrmBase.InsertBoolean">
            <summary>设置 OrmBase.Insert(Boolean autoSetValue) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimOrmBase.InsertBooleanInsertOp">
            <summary>设置 OrmBase.Insert(Boolean autoSetValue, InsertOp option) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimOrmBase.InsertInsertOp">
            <summary>设置 OrmBase.Insert(InsertOp option) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimOrmBase.LoadFromObject">
            <summary>设置 OrmBase.LoadFrom(Object jsonOrEntity) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimOrmBase.Select">
            <summary>设置 OrmBase.Select() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimOrmBase.SelectInt32Int32">
            <summary>设置 OrmBase.Select(Int32 pageIndex, Int32 pageSize) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimOrmBase.SelectInt32Int32String">
            <summary>设置 OrmBase.Select(Int32 pageIndex, Int32 pageSize, String where) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimOrmBase.SelectInt32Int32StringInt32Out">
            <summary>设置 OrmBase.Select(Int32 pageIndex, Int32 pageSize, String where, Int32&amp; count) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimOrmBase.SelectInt32String">
            <summary>设置 OrmBase.Select(Int32 topN, String where) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimOrmBase.SelectString">
            <summary>设置 OrmBase.Select(String where) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimOrmBase.SetAopStateAopOp">
            <summary>设置 OrmBase.SetAopState(AopOp op) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimOrmBase.SetExpressionString">
            <summary>设置 OrmBase.SetExpression(String updateExpression) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimOrmBase.SetInitObject">
            <summary>设置 OrmBase.SetInit(Object entityInstance) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimOrmBase.SetInitObjectString">
            <summary>设置 OrmBase.SetInit(Object entityInstance, String tableName) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimOrmBase.SetInitObjectStringString">
            <summary>设置 OrmBase.SetInit(Object entityInstance, String tableName, String conn) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimOrmBase.SetObjectObject">
            <summary>设置 OrmBase.Set(Object key, Object value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimOrmBase.SetParaObjectObject">
            <summary>设置 OrmBase.SetPara(Object paraName, Object value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimOrmBase.SetParaObjectObjectDbType">
            <summary>设置 OrmBase.SetPara(Object paraName, Object value, DbType dbType) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimOrmBase.SetSelectColumnsObjectArray">
            <summary>设置 OrmBase.SetSelectColumns(Object[] columnNames) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimOrmBase.UIGet">
            <summary>设置 OrmBase.get_UI() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimOrmBase.UI_OnAfterGetFromEventString">
            <summary>设置 OrmBase.UI_OnAfterGetFromEvent(String propValue) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimOrmBase.Update">
            <summary>设置 OrmBase.Update() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimOrmBase.UpdateObject">
            <summary>设置 OrmBase.Update(Object where) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimOrmBase.UpdateObjectBoolean">
            <summary>设置 OrmBase.Update(Object where, Boolean autoSetValue) 的 填充码</summary>
        </member>
        <member name="T:CYQ.Data.Orm.Fakes.ShimOrmBase.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimOrmBase.AllInstances.ActionGet">
            <summary>设置 OrmBase.get_Action() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimOrmBase.AllInstances.AllowInsertIDGet">
            <summary>设置 OrmBase.get_AllowInsertID() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimOrmBase.AllInstances.AllowInsertIDSetBoolean">
            <summary>设置 OrmBase.set_AllowInsertID(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimOrmBase.AllInstances.BaseInfoGet">
            <summary>设置 OrmBase.get_BaseInfo() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimOrmBase.AllInstances.Clear">
            <summary>设置 OrmBase.Clear() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimOrmBase.AllInstances.ClearPara">
            <summary>设置 OrmBase.ClearPara() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimOrmBase.AllInstances.Delete">
            <summary>设置 OrmBase.Delete() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimOrmBase.AllInstances.DeleteObject">
            <summary>设置 OrmBase.Delete(Object where) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimOrmBase.AllInstances.Dispose">
            <summary>设置 OrmBase.Dispose() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimOrmBase.AllInstances.ExistsObject">
            <summary>设置 OrmBase.Exists(Object where) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimOrmBase.AllInstances.Fill">
            <summary>设置 OrmBase.Fill() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimOrmBase.AllInstances.FillObject">
            <summary>设置 OrmBase.Fill(Object where) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimOrmBase.AllInstances.GetCount">
            <summary>设置 OrmBase.GetCount() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimOrmBase.AllInstances.GetCountObject">
            <summary>设置 OrmBase.GetCount(Object where) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimOrmBase.AllInstances.GetObject">
            <summary>设置 OrmBase.Get(Object where) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimOrmBase.AllInstances.Insert">
            <summary>设置 OrmBase.Insert() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimOrmBase.AllInstances.InsertBoolean">
            <summary>设置 OrmBase.Insert(Boolean autoSetValue) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimOrmBase.AllInstances.InsertBooleanInsertOp">
            <summary>设置 OrmBase.Insert(Boolean autoSetValue, InsertOp option) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimOrmBase.AllInstances.InsertInsertOp">
            <summary>设置 OrmBase.Insert(InsertOp option) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimOrmBase.AllInstances.LoadFromObject">
            <summary>设置 OrmBase.LoadFrom(Object jsonOrEntity) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimOrmBase.AllInstances.Select">
            <summary>设置 OrmBase.Select() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimOrmBase.AllInstances.SelectInt32Int32">
            <summary>设置 OrmBase.Select(Int32 pageIndex, Int32 pageSize) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimOrmBase.AllInstances.SelectInt32Int32String">
            <summary>设置 OrmBase.Select(Int32 pageIndex, Int32 pageSize, String where) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimOrmBase.AllInstances.SelectInt32Int32StringInt32Out">
            <summary>设置 OrmBase.Select(Int32 pageIndex, Int32 pageSize, String where, Int32&amp; count) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimOrmBase.AllInstances.SelectInt32String">
            <summary>设置 OrmBase.Select(Int32 topN, String where) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimOrmBase.AllInstances.SelectString">
            <summary>设置 OrmBase.Select(String where) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimOrmBase.AllInstances.SetAopStateAopOp">
            <summary>设置 OrmBase.SetAopState(AopOp op) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimOrmBase.AllInstances.SetExpressionString">
            <summary>设置 OrmBase.SetExpression(String updateExpression) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimOrmBase.AllInstances.SetInitObject">
            <summary>设置 OrmBase.SetInit(Object entityInstance) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimOrmBase.AllInstances.SetInitObjectString">
            <summary>设置 OrmBase.SetInit(Object entityInstance, String tableName) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimOrmBase.AllInstances.SetInitObjectStringString">
            <summary>设置 OrmBase.SetInit(Object entityInstance, String tableName, String conn) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimOrmBase.AllInstances.SetObjectObject">
            <summary>设置 OrmBase.Set(Object key, Object value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimOrmBase.AllInstances.SetParaObjectObject">
            <summary>设置 OrmBase.SetPara(Object paraName, Object value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimOrmBase.AllInstances.SetParaObjectObjectDbType">
            <summary>设置 OrmBase.SetPara(Object paraName, Object value, DbType dbType) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimOrmBase.AllInstances.SetSelectColumnsObjectArray">
            <summary>设置 OrmBase.SetSelectColumns(Object[] columnNames) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimOrmBase.AllInstances.UIGet">
            <summary>设置 OrmBase.get_UI() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimOrmBase.AllInstances.UI_OnAfterGetFromEventString">
            <summary>设置 OrmBase.UI_OnAfterGetFromEvent(String propValue) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimOrmBase.AllInstances.Update">
            <summary>设置 OrmBase.Update() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimOrmBase.AllInstances.UpdateObject">
            <summary>设置 OrmBase.Update(Object where) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimOrmBase.AllInstances.UpdateObjectBoolean">
            <summary>设置 OrmBase.Update(Object where, Boolean autoSetValue) 的 填充码</summary>
        </member>
        <member name="T:CYQ.Data.Orm.Fakes.ShimOrmBaseInfo">
            <summary>CYQ.Data.Orm.OrmBaseInfo 的填充码类型</summary>
        </member>
        <member name="M:CYQ.Data.Orm.Fakes.ShimOrmBaseInfo.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:CYQ.Data.Orm.Fakes.ShimOrmBaseInfo.#ctor(CYQ.Data.Orm.OrmBaseInfo)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:CYQ.Data.Orm.Fakes.ShimOrmBaseInfo.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:CYQ.Data.Orm.Fakes.ShimOrmBaseInfo.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimOrmBaseInfo.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimOrmBaseInfo.ConnNameGet">
            <summary>设置 OrmBaseInfo.get_ConnName() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimOrmBaseInfo.ConnStringGet">
            <summary>设置 OrmBaseInfo.get_ConnString() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimOrmBaseInfo.ConstructorMAction">
            <summary>设置 OrmBaseInfo.OrmBaseInfo(MAction action) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimOrmBaseInfo.DataBaseNameGet">
            <summary>设置 OrmBaseInfo.get_DataBaseName() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimOrmBaseInfo.DataBaseTypeGet">
            <summary>设置 OrmBaseInfo.get_DataBaseType() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimOrmBaseInfo.DataBaseVersionGet">
            <summary>设置 OrmBaseInfo.get_DataBaseVersion() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimOrmBaseInfo.DebugInfoGet">
            <summary>设置 OrmBaseInfo.get_DebugInfo() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimOrmBaseInfo.IsTransationGet">
            <summary>设置 OrmBaseInfo.get_IsTransation() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimOrmBaseInfo.MDataColumnGet">
            <summary>设置 OrmBaseInfo.get_MDataColumn() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimOrmBaseInfo.RecordsAffectedGet">
            <summary>设置 OrmBaseInfo.get_RecordsAffected() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimOrmBaseInfo.TableNameGet">
            <summary>设置 OrmBaseInfo.get_TableName() 的 填充码</summary>
        </member>
        <member name="T:CYQ.Data.Orm.Fakes.ShimOrmBaseInfo.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimOrmBaseInfo.AllInstances.ConnNameGet">
            <summary>设置 OrmBaseInfo.get_ConnName() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimOrmBaseInfo.AllInstances.ConnStringGet">
            <summary>设置 OrmBaseInfo.get_ConnString() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimOrmBaseInfo.AllInstances.DataBaseNameGet">
            <summary>设置 OrmBaseInfo.get_DataBaseName() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimOrmBaseInfo.AllInstances.DataBaseTypeGet">
            <summary>设置 OrmBaseInfo.get_DataBaseType() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimOrmBaseInfo.AllInstances.DataBaseVersionGet">
            <summary>设置 OrmBaseInfo.get_DataBaseVersion() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimOrmBaseInfo.AllInstances.DebugInfoGet">
            <summary>设置 OrmBaseInfo.get_DebugInfo() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimOrmBaseInfo.AllInstances.IsTransationGet">
            <summary>设置 OrmBaseInfo.get_IsTransation() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimOrmBaseInfo.AllInstances.MDataColumnGet">
            <summary>设置 OrmBaseInfo.get_MDataColumn() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimOrmBaseInfo.AllInstances.RecordsAffectedGet">
            <summary>设置 OrmBaseInfo.get_RecordsAffected() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimOrmBaseInfo.AllInstances.TableNameGet">
            <summary>设置 OrmBaseInfo.get_TableName() 的 填充码</summary>
        </member>
        <member name="T:CYQ.Data.Orm.Fakes.ShimSimpleOrmBase">
            <summary>CYQ.Data.Orm.SimpleOrmBase 的填充码类型</summary>
        </member>
        <member name="M:CYQ.Data.Orm.Fakes.ShimSimpleOrmBase.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:CYQ.Data.Orm.Fakes.ShimSimpleOrmBase.#ctor(CYQ.Data.Orm.SimpleOrmBase)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:CYQ.Data.Orm.Fakes.ShimSimpleOrmBase.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:CYQ.Data.Orm.Fakes.ShimSimpleOrmBase.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:CYQ.Data.Orm.Fakes.ShimSimpleOrmBase.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:CYQ.Data.Orm.Fakes.ShimSimpleOrmBase.GetOf1Object``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Object,``0})">
            <summary>设置 SimpleOrmBase.Get(Object where) 的 填充码</summary>
        </member>
        <member name="M:CYQ.Data.Orm.Fakes.ShimSimpleOrmBase.SelectOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.List{``0}})">
            <summary>设置 SimpleOrmBase.Select() 的 填充码</summary>
        </member>
        <member name="M:CYQ.Data.Orm.Fakes.ShimSimpleOrmBase.SelectOf1Int32Int32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Int32,System.Int32,System.Collections.Generic.List{``0}})">
            <summary>设置 SimpleOrmBase.Select(Int32 pageIndex, Int32 pageSize) 的 填充码</summary>
        </member>
        <member name="M:CYQ.Data.Orm.Fakes.ShimSimpleOrmBase.SelectOf1Int32Int32String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Int32,System.Int32,System.String,System.Collections.Generic.List{``0}})">
            <summary>设置 SimpleOrmBase.Select(Int32 pageIndex, Int32 pageSize, String where) 的 填充码</summary>
        </member>
        <member name="M:CYQ.Data.Orm.Fakes.ShimSimpleOrmBase.SelectOf1Int32Int32StringInt32Out``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.OutFunc{System.Int32,System.Int32,System.String,System.Int32,System.Collections.Generic.List{``0}})">
            <summary>设置 SimpleOrmBase.Select(Int32 pageIndex, Int32 pageSize, String where, Int32&amp; count) 的 填充码</summary>
        </member>
        <member name="M:CYQ.Data.Orm.Fakes.ShimSimpleOrmBase.SelectOf1Int32String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Int32,System.String,System.Collections.Generic.List{``0}})">
            <summary>设置 SimpleOrmBase.Select(Int32 topN, String where) 的 填充码</summary>
        </member>
        <member name="M:CYQ.Data.Orm.Fakes.ShimSimpleOrmBase.SelectOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.Collections.Generic.List{``0}})">
            <summary>设置 SimpleOrmBase.Select(String where) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimSimpleOrmBase.ActionGet">
            <summary>设置 SimpleOrmBase.get_Action() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimSimpleOrmBase.BaseInfoGet">
            <summary>设置 SimpleOrmBase.get_BaseInfo() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimSimpleOrmBase.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimSimpleOrmBase.Clear">
            <summary>设置 SimpleOrmBase.Clear() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimSimpleOrmBase.ClearPara">
            <summary>设置 SimpleOrmBase.ClearPara() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimSimpleOrmBase.Constructor">
            <summary>设置 SimpleOrmBase.SimpleOrmBase() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimSimpleOrmBase.Delete">
            <summary>设置 SimpleOrmBase.Delete() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimSimpleOrmBase.DeleteObject">
            <summary>设置 SimpleOrmBase.Delete(Object where) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimSimpleOrmBase.DeleteObjectBoolean">
            <summary>设置 SimpleOrmBase.Delete(Object where, Boolean isIgnoreDeleteField) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimSimpleOrmBase.Dispose">
            <summary>设置 SimpleOrmBase.Dispose() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimSimpleOrmBase.ExistsObject">
            <summary>设置 SimpleOrmBase.Exists(Object where) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimSimpleOrmBase.Fill">
            <summary>设置 SimpleOrmBase.Fill() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimSimpleOrmBase.FillObject">
            <summary>设置 SimpleOrmBase.Fill(Object where) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimSimpleOrmBase.GetCount">
            <summary>设置 SimpleOrmBase.GetCount() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimSimpleOrmBase.GetCountObject">
            <summary>设置 SimpleOrmBase.GetCount(Object where) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimSimpleOrmBase.GetValueFromEntity">
            <summary>设置 SimpleOrmBase.GetValueFromEntity() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimSimpleOrmBase.Insert">
            <summary>设置 SimpleOrmBase.Insert() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimSimpleOrmBase.InsertBooleanInsertOpBoolean">
            <summary>设置 SimpleOrmBase.Insert(Boolean autoSetValue, InsertOp option, Boolean insertID) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimSimpleOrmBase.InsertInsertOp">
            <summary>设置 SimpleOrmBase.Insert(InsertOp option) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimSimpleOrmBase.InsertInsertOpBoolean">
            <summary>设置 SimpleOrmBase.Insert(InsertOp option, Boolean insertID) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimSimpleOrmBase.IsWriteLogOnErrorSetBoolean">
            <summary>设置 SimpleOrmBase.set_IsWriteLogOnError(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimSimpleOrmBase.LoadFromObject">
            <summary>设置 SimpleOrmBase.LoadFrom(Object jsonOrEntity) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimSimpleOrmBase.LoadFromObjectBreakOp">
            <summary>设置 SimpleOrmBase.LoadFrom(Object jsonOrEntity, BreakOp op) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimSimpleOrmBase.SelectInt32Int32StringInt32Out">
            <summary>设置 SimpleOrmBase.Select(Int32 pageIndex, Int32 pageSize, String where, Int32&amp; count) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimSimpleOrmBase.SetAopStateAopOp">
            <summary>设置 SimpleOrmBase.SetAopState(AopOp op) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimSimpleOrmBase.SetDelayInitObjectStringString">
            <summary>设置 SimpleOrmBase.SetDelayInit(Object entityInstance, String tableName, String conn) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimSimpleOrmBase.SetInit2ObjectStringString">
            <summary>设置 SimpleOrmBase.SetInit2(Object entityInstance, String tableName, String conn) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimSimpleOrmBase.SetInitObject">
            <summary>设置 SimpleOrmBase.SetInit(Object entityInstance) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimSimpleOrmBase.SetInitObjectString">
            <summary>设置 SimpleOrmBase.SetInit(Object entityInstance, String tableName) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimSimpleOrmBase.SetInitObjectStringString">
            <summary>设置 SimpleOrmBase.SetInit(Object entityInstance, String tableName, String conn) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimSimpleOrmBase.SetObjectObject">
            <summary>设置 SimpleOrmBase.Set(Object key, Object value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimSimpleOrmBase.SetParaObjectObject">
            <summary>设置 SimpleOrmBase.SetPara(Object paraName, Object value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimSimpleOrmBase.SetParaObjectObjectDbType">
            <summary>设置 SimpleOrmBase.SetPara(Object paraName, Object value, DbType dbType) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimSimpleOrmBase.SetSelectColumnsObjectArray">
            <summary>设置 SimpleOrmBase.SetSelectColumns(Object[] columnNames) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimSimpleOrmBase.SetValueToEntity">
            <summary>设置 SimpleOrmBase.SetValueToEntity() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimSimpleOrmBase.SetValueToEntityRowOp">
            <summary>设置 SimpleOrmBase.SetValueToEntity(RowOp op) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimSimpleOrmBase.SetValueToEntityStringRowOp">
            <summary>设置 SimpleOrmBase.SetValueToEntity(String propName, RowOp op) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimSimpleOrmBase.Update">
            <summary>设置 SimpleOrmBase.Update() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimSimpleOrmBase.UpdateObjectBooleanStringArray">
            <summary>设置 SimpleOrmBase.Update(Object where, Boolean autoSetValue, String[] updateColumns) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimSimpleOrmBase.UpdateObjectStringArray">
            <summary>设置 SimpleOrmBase.Update(Object where, String[] updateColumns) 的 填充码</summary>
        </member>
        <member name="T:CYQ.Data.Orm.Fakes.ShimSimpleOrmBase.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:CYQ.Data.Orm.Fakes.ShimSimpleOrmBase.AllInstances.GetOf1Object``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{CYQ.Data.Orm.SimpleOrmBase,System.Object,``0})">
            <summary>设置 SimpleOrmBase.Get(Object where) 的 填充码</summary>
        </member>
        <member name="M:CYQ.Data.Orm.Fakes.ShimSimpleOrmBase.AllInstances.SelectOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{CYQ.Data.Orm.SimpleOrmBase,System.Collections.Generic.List{``0}})">
            <summary>设置 SimpleOrmBase.Select() 的 填充码</summary>
        </member>
        <member name="M:CYQ.Data.Orm.Fakes.ShimSimpleOrmBase.AllInstances.SelectOf1Int32Int32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{CYQ.Data.Orm.SimpleOrmBase,System.Int32,System.Int32,System.Collections.Generic.List{``0}})">
            <summary>设置 SimpleOrmBase.Select(Int32 pageIndex, Int32 pageSize) 的 填充码</summary>
        </member>
        <member name="M:CYQ.Data.Orm.Fakes.ShimSimpleOrmBase.AllInstances.SelectOf1Int32Int32String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{CYQ.Data.Orm.SimpleOrmBase,System.Int32,System.Int32,System.String,System.Collections.Generic.List{``0}})">
            <summary>设置 SimpleOrmBase.Select(Int32 pageIndex, Int32 pageSize, String where) 的 填充码</summary>
        </member>
        <member name="M:CYQ.Data.Orm.Fakes.ShimSimpleOrmBase.AllInstances.SelectOf1Int32Int32StringInt32Out``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.OutFunc{CYQ.Data.Orm.SimpleOrmBase,System.Int32,System.Int32,System.String,System.Int32,System.Collections.Generic.List{``0}})">
            <summary>设置 SimpleOrmBase.Select(Int32 pageIndex, Int32 pageSize, String where, Int32&amp; count) 的 填充码</summary>
        </member>
        <member name="M:CYQ.Data.Orm.Fakes.ShimSimpleOrmBase.AllInstances.SelectOf1Int32String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{CYQ.Data.Orm.SimpleOrmBase,System.Int32,System.String,System.Collections.Generic.List{``0}})">
            <summary>设置 SimpleOrmBase.Select(Int32 topN, String where) 的 填充码</summary>
        </member>
        <member name="M:CYQ.Data.Orm.Fakes.ShimSimpleOrmBase.AllInstances.SelectOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{CYQ.Data.Orm.SimpleOrmBase,System.String,System.Collections.Generic.List{``0}})">
            <summary>设置 SimpleOrmBase.Select(String where) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimSimpleOrmBase.AllInstances.ActionGet">
            <summary>设置 SimpleOrmBase.get_Action() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimSimpleOrmBase.AllInstances.BaseInfoGet">
            <summary>设置 SimpleOrmBase.get_BaseInfo() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimSimpleOrmBase.AllInstances.Clear">
            <summary>设置 SimpleOrmBase.Clear() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimSimpleOrmBase.AllInstances.ClearPara">
            <summary>设置 SimpleOrmBase.ClearPara() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimSimpleOrmBase.AllInstances.Delete">
            <summary>设置 SimpleOrmBase.Delete() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimSimpleOrmBase.AllInstances.DeleteObject">
            <summary>设置 SimpleOrmBase.Delete(Object where) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimSimpleOrmBase.AllInstances.DeleteObjectBoolean">
            <summary>设置 SimpleOrmBase.Delete(Object where, Boolean isIgnoreDeleteField) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimSimpleOrmBase.AllInstances.Dispose">
            <summary>设置 SimpleOrmBase.Dispose() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimSimpleOrmBase.AllInstances.ExistsObject">
            <summary>设置 SimpleOrmBase.Exists(Object where) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimSimpleOrmBase.AllInstances.Fill">
            <summary>设置 SimpleOrmBase.Fill() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimSimpleOrmBase.AllInstances.FillObject">
            <summary>设置 SimpleOrmBase.Fill(Object where) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimSimpleOrmBase.AllInstances.GetCount">
            <summary>设置 SimpleOrmBase.GetCount() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimSimpleOrmBase.AllInstances.GetCountObject">
            <summary>设置 SimpleOrmBase.GetCount(Object where) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimSimpleOrmBase.AllInstances.GetValueFromEntity">
            <summary>设置 SimpleOrmBase.GetValueFromEntity() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimSimpleOrmBase.AllInstances.Insert">
            <summary>设置 SimpleOrmBase.Insert() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimSimpleOrmBase.AllInstances.InsertBooleanInsertOpBoolean">
            <summary>设置 SimpleOrmBase.Insert(Boolean autoSetValue, InsertOp option, Boolean insertID) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimSimpleOrmBase.AllInstances.InsertInsertOp">
            <summary>设置 SimpleOrmBase.Insert(InsertOp option) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimSimpleOrmBase.AllInstances.InsertInsertOpBoolean">
            <summary>设置 SimpleOrmBase.Insert(InsertOp option, Boolean insertID) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimSimpleOrmBase.AllInstances.IsWriteLogOnErrorSetBoolean">
            <summary>设置 SimpleOrmBase.set_IsWriteLogOnError(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimSimpleOrmBase.AllInstances.LoadFromObject">
            <summary>设置 SimpleOrmBase.LoadFrom(Object jsonOrEntity) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimSimpleOrmBase.AllInstances.LoadFromObjectBreakOp">
            <summary>设置 SimpleOrmBase.LoadFrom(Object jsonOrEntity, BreakOp op) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimSimpleOrmBase.AllInstances.SelectInt32Int32StringInt32Out">
            <summary>设置 SimpleOrmBase.Select(Int32 pageIndex, Int32 pageSize, String where, Int32&amp; count) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimSimpleOrmBase.AllInstances.SetAopStateAopOp">
            <summary>设置 SimpleOrmBase.SetAopState(AopOp op) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimSimpleOrmBase.AllInstances.SetDelayInitObjectStringString">
            <summary>设置 SimpleOrmBase.SetDelayInit(Object entityInstance, String tableName, String conn) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimSimpleOrmBase.AllInstances.SetInit2ObjectStringString">
            <summary>设置 SimpleOrmBase.SetInit2(Object entityInstance, String tableName, String conn) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimSimpleOrmBase.AllInstances.SetInitObject">
            <summary>设置 SimpleOrmBase.SetInit(Object entityInstance) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimSimpleOrmBase.AllInstances.SetInitObjectString">
            <summary>设置 SimpleOrmBase.SetInit(Object entityInstance, String tableName) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimSimpleOrmBase.AllInstances.SetInitObjectStringString">
            <summary>设置 SimpleOrmBase.SetInit(Object entityInstance, String tableName, String conn) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimSimpleOrmBase.AllInstances.SetObjectObject">
            <summary>设置 SimpleOrmBase.Set(Object key, Object value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimSimpleOrmBase.AllInstances.SetParaObjectObject">
            <summary>设置 SimpleOrmBase.SetPara(Object paraName, Object value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimSimpleOrmBase.AllInstances.SetParaObjectObjectDbType">
            <summary>设置 SimpleOrmBase.SetPara(Object paraName, Object value, DbType dbType) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimSimpleOrmBase.AllInstances.SetSelectColumnsObjectArray">
            <summary>设置 SimpleOrmBase.SetSelectColumns(Object[] columnNames) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimSimpleOrmBase.AllInstances.SetValueToEntity">
            <summary>设置 SimpleOrmBase.SetValueToEntity() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimSimpleOrmBase.AllInstances.SetValueToEntityRowOp">
            <summary>设置 SimpleOrmBase.SetValueToEntity(RowOp op) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimSimpleOrmBase.AllInstances.SetValueToEntityStringRowOp">
            <summary>设置 SimpleOrmBase.SetValueToEntity(String propName, RowOp op) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimSimpleOrmBase.AllInstances.Update">
            <summary>设置 SimpleOrmBase.Update() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimSimpleOrmBase.AllInstances.UpdateObjectBooleanStringArray">
            <summary>设置 SimpleOrmBase.Update(Object where, Boolean autoSetValue, String[] updateColumns) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimSimpleOrmBase.AllInstances.UpdateObjectStringArray">
            <summary>设置 SimpleOrmBase.Update(Object where, String[] updateColumns) 的 填充码</summary>
        </member>
        <member name="T:CYQ.Data.Orm.Fakes.ShimSimpleOrmBase`1">
            <summary>CYQ.Data.Orm.SimpleOrmBase`1 的填充码类型</summary>
        </member>
        <member name="M:CYQ.Data.Orm.Fakes.ShimSimpleOrmBase`1.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:CYQ.Data.Orm.Fakes.ShimSimpleOrmBase`1.#ctor(CYQ.Data.Orm.SimpleOrmBase{`0})">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:CYQ.Data.Orm.Fakes.ShimSimpleOrmBase`1.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:CYQ.Data.Orm.Fakes.ShimSimpleOrmBase`1.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:CYQ.Data.Orm.Fakes.ShimSimpleOrmBase`1.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimSimpleOrmBase`1.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimSimpleOrmBase`1.Constructor">
            <summary>设置 SimpleOrmBase`1.SimpleOrmBase`1() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimSimpleOrmBase`1.GetObject">
            <summary>设置 SimpleOrmBase`1.Get(Object where) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimSimpleOrmBase`1.Select">
            <summary>设置 SimpleOrmBase`1.Select() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimSimpleOrmBase`1.SelectInt32Int32">
            <summary>设置 SimpleOrmBase`1.Select(Int32 pageIndex, Int32 pageSize) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimSimpleOrmBase`1.SelectInt32Int32String">
            <summary>设置 SimpleOrmBase`1.Select(Int32 pageIndex, Int32 pageSize, String where) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimSimpleOrmBase`1.SelectInt32Int32StringInt32Out">
            <summary>设置 SimpleOrmBase`1.Select(Int32 pageIndex, Int32 pageSize, String where, Int32&amp; count) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimSimpleOrmBase`1.SelectInt32String">
            <summary>设置 SimpleOrmBase`1.Select(Int32 topN, String where) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimSimpleOrmBase`1.SelectString">
            <summary>设置 SimpleOrmBase`1.Select(String where) 的 填充码</summary>
        </member>
        <member name="T:CYQ.Data.Orm.Fakes.ShimSimpleOrmBase`1.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimSimpleOrmBase`1.AllInstances.GetObject">
            <summary>设置 SimpleOrmBase`1.Get(Object where) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimSimpleOrmBase`1.AllInstances.Select">
            <summary>设置 SimpleOrmBase`1.Select() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimSimpleOrmBase`1.AllInstances.SelectInt32Int32">
            <summary>设置 SimpleOrmBase`1.Select(Int32 pageIndex, Int32 pageSize) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimSimpleOrmBase`1.AllInstances.SelectInt32Int32String">
            <summary>设置 SimpleOrmBase`1.Select(Int32 pageIndex, Int32 pageSize, String where) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimSimpleOrmBase`1.AllInstances.SelectInt32Int32StringInt32Out">
            <summary>设置 SimpleOrmBase`1.Select(Int32 pageIndex, Int32 pageSize, String where, Int32&amp; count) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimSimpleOrmBase`1.AllInstances.SelectInt32String">
            <summary>设置 SimpleOrmBase`1.Select(Int32 topN, String where) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimSimpleOrmBase`1.AllInstances.SelectString">
            <summary>设置 SimpleOrmBase`1.Select(String where) 的 填充码</summary>
        </member>
        <member name="T:CYQ.Data.Orm.Fakes.ShimTableNameAttribute">
            <summary>CYQ.Data.Orm.TableNameAttribute 的填充码类型</summary>
        </member>
        <member name="M:CYQ.Data.Orm.Fakes.ShimTableNameAttribute.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:CYQ.Data.Orm.Fakes.ShimTableNameAttribute.#ctor(CYQ.Data.Orm.TableNameAttribute)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:CYQ.Data.Orm.Fakes.ShimTableNameAttribute.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:CYQ.Data.Orm.Fakes.ShimTableNameAttribute.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimTableNameAttribute.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimTableNameAttribute.ConstructorString">
            <summary>设置 TableNameAttribute.TableNameAttribute(String tableName) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimTableNameAttribute.TableNameGet">
            <summary>设置 TableNameAttribute.get_TableName() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimTableNameAttribute.TableNameSetString">
            <summary>设置 TableNameAttribute.set_TableName(String value) 的 填充码</summary>
        </member>
        <member name="T:CYQ.Data.Orm.Fakes.ShimTableNameAttribute.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimTableNameAttribute.AllInstances.TableNameGet">
            <summary>设置 TableNameAttribute.get_TableName() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.ShimTableNameAttribute.AllInstances.TableNameSetString">
            <summary>设置 TableNameAttribute.set_TableName(String value) 的 填充码</summary>
        </member>
        <member name="T:CYQ.Data.Orm.Fakes.StubColumnNameAttribute">
            <summary>CYQ.Data.Orm.ColumnNameAttribute 的存根类型</summary>
        </member>
        <member name="M:CYQ.Data.Orm.Fakes.StubColumnNameAttribute.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:CYQ.Data.Orm.Fakes.StubColumnNameAttribute.Equals(System.Object)">
            <summary>设置 Attribute.Equals(Object obj) 的 存根</summary>
        </member>
        <member name="F:CYQ.Data.Orm.Fakes.StubColumnNameAttribute.EqualsObject">
            <summary>设置 Attribute.Equals(Object obj) 的 stub</summary>
        </member>
        <member name="M:CYQ.Data.Orm.Fakes.StubColumnNameAttribute.GetHashCode">
            <summary>设置 Attribute.GetHashCode() 的 存根</summary>
        </member>
        <member name="F:CYQ.Data.Orm.Fakes.StubColumnNameAttribute.GetHashCode01">
            <summary>设置 Attribute.GetHashCode() 的 stub</summary>
        </member>
        <member name="M:CYQ.Data.Orm.Fakes.StubColumnNameAttribute.InitializeStub">
            <summary>初始化 type StubColumnNameAttribute 的新实例</summary>
        </member>
        <member name="M:CYQ.Data.Orm.Fakes.StubColumnNameAttribute.IsDefaultAttribute">
            <summary>设置 Attribute.IsDefaultAttribute() 的 存根</summary>
        </member>
        <member name="F:CYQ.Data.Orm.Fakes.StubColumnNameAttribute.IsDefaultAttribute01">
            <summary>设置 Attribute.IsDefaultAttribute() 的 stub</summary>
        </member>
        <member name="M:CYQ.Data.Orm.Fakes.StubColumnNameAttribute.Match(System.Object)">
            <summary>设置 Attribute.Match(Object obj) 的 存根</summary>
        </member>
        <member name="F:CYQ.Data.Orm.Fakes.StubColumnNameAttribute.MatchObject">
            <summary>设置 Attribute.Match(Object obj) 的 stub</summary>
        </member>
        <member name="F:CYQ.Data.Orm.Fakes.StubColumnNameAttribute.TypeIdGet">
            <summary>设置 Attribute.get_TypeId() 的 stub</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.StubColumnNameAttribute.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.StubColumnNameAttribute.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.StubColumnNameAttribute.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.StubColumnNameAttribute.TypeId">
            <summary>设置 Attribute.get_TypeId() 的 stub</summary>
        </member>
        <member name="T:CYQ.Data.Orm.Fakes.StubDefaultValueAttribute">
            <summary>CYQ.Data.Orm.DefaultValueAttribute 的存根类型</summary>
        </member>
        <member name="M:CYQ.Data.Orm.Fakes.StubDefaultValueAttribute.#ctor(System.Object)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:CYQ.Data.Orm.Fakes.StubDefaultValueAttribute.Equals(System.Object)">
            <summary>设置 Attribute.Equals(Object obj) 的 存根</summary>
        </member>
        <member name="F:CYQ.Data.Orm.Fakes.StubDefaultValueAttribute.EqualsObject">
            <summary>设置 Attribute.Equals(Object obj) 的 stub</summary>
        </member>
        <member name="M:CYQ.Data.Orm.Fakes.StubDefaultValueAttribute.GetHashCode">
            <summary>设置 Attribute.GetHashCode() 的 存根</summary>
        </member>
        <member name="F:CYQ.Data.Orm.Fakes.StubDefaultValueAttribute.GetHashCode01">
            <summary>设置 Attribute.GetHashCode() 的 stub</summary>
        </member>
        <member name="M:CYQ.Data.Orm.Fakes.StubDefaultValueAttribute.InitializeStub">
            <summary>初始化 type StubDefaultValueAttribute 的新实例</summary>
        </member>
        <member name="M:CYQ.Data.Orm.Fakes.StubDefaultValueAttribute.IsDefaultAttribute">
            <summary>设置 Attribute.IsDefaultAttribute() 的 存根</summary>
        </member>
        <member name="F:CYQ.Data.Orm.Fakes.StubDefaultValueAttribute.IsDefaultAttribute01">
            <summary>设置 Attribute.IsDefaultAttribute() 的 stub</summary>
        </member>
        <member name="M:CYQ.Data.Orm.Fakes.StubDefaultValueAttribute.Match(System.Object)">
            <summary>设置 Attribute.Match(Object obj) 的 存根</summary>
        </member>
        <member name="F:CYQ.Data.Orm.Fakes.StubDefaultValueAttribute.MatchObject">
            <summary>设置 Attribute.Match(Object obj) 的 stub</summary>
        </member>
        <member name="F:CYQ.Data.Orm.Fakes.StubDefaultValueAttribute.TypeIdGet">
            <summary>设置 Attribute.get_TypeId() 的 stub</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.StubDefaultValueAttribute.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.StubDefaultValueAttribute.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.StubDefaultValueAttribute.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.StubDefaultValueAttribute.TypeId">
            <summary>设置 Attribute.get_TypeId() 的 stub</summary>
        </member>
        <member name="T:CYQ.Data.Orm.Fakes.StubDescriptionAttribute">
            <summary>CYQ.Data.Orm.DescriptionAttribute 的存根类型</summary>
        </member>
        <member name="M:CYQ.Data.Orm.Fakes.StubDescriptionAttribute.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:CYQ.Data.Orm.Fakes.StubDescriptionAttribute.Equals(System.Object)">
            <summary>设置 Attribute.Equals(Object obj) 的 存根</summary>
        </member>
        <member name="F:CYQ.Data.Orm.Fakes.StubDescriptionAttribute.EqualsObject">
            <summary>设置 Attribute.Equals(Object obj) 的 stub</summary>
        </member>
        <member name="M:CYQ.Data.Orm.Fakes.StubDescriptionAttribute.GetHashCode">
            <summary>设置 Attribute.GetHashCode() 的 存根</summary>
        </member>
        <member name="F:CYQ.Data.Orm.Fakes.StubDescriptionAttribute.GetHashCode01">
            <summary>设置 Attribute.GetHashCode() 的 stub</summary>
        </member>
        <member name="M:CYQ.Data.Orm.Fakes.StubDescriptionAttribute.InitializeStub">
            <summary>初始化 type StubDescriptionAttribute 的新实例</summary>
        </member>
        <member name="M:CYQ.Data.Orm.Fakes.StubDescriptionAttribute.IsDefaultAttribute">
            <summary>设置 Attribute.IsDefaultAttribute() 的 存根</summary>
        </member>
        <member name="F:CYQ.Data.Orm.Fakes.StubDescriptionAttribute.IsDefaultAttribute01">
            <summary>设置 Attribute.IsDefaultAttribute() 的 stub</summary>
        </member>
        <member name="M:CYQ.Data.Orm.Fakes.StubDescriptionAttribute.Match(System.Object)">
            <summary>设置 Attribute.Match(Object obj) 的 存根</summary>
        </member>
        <member name="F:CYQ.Data.Orm.Fakes.StubDescriptionAttribute.MatchObject">
            <summary>设置 Attribute.Match(Object obj) 的 stub</summary>
        </member>
        <member name="F:CYQ.Data.Orm.Fakes.StubDescriptionAttribute.TypeIdGet">
            <summary>设置 Attribute.get_TypeId() 的 stub</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.StubDescriptionAttribute.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.StubDescriptionAttribute.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.StubDescriptionAttribute.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.StubDescriptionAttribute.TypeId">
            <summary>设置 Attribute.get_TypeId() 的 stub</summary>
        </member>
        <member name="T:CYQ.Data.Orm.Fakes.StubKeyAttribute">
            <summary>CYQ.Data.Orm.KeyAttribute 的存根类型</summary>
        </member>
        <member name="M:CYQ.Data.Orm.Fakes.StubKeyAttribute.#ctor(System.Boolean)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:CYQ.Data.Orm.Fakes.StubKeyAttribute.#ctor(System.Boolean,System.Boolean)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:CYQ.Data.Orm.Fakes.StubKeyAttribute.#ctor(System.Boolean,System.Boolean,System.Boolean)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:CYQ.Data.Orm.Fakes.StubKeyAttribute.Equals(System.Object)">
            <summary>设置 Attribute.Equals(Object obj) 的 存根</summary>
        </member>
        <member name="F:CYQ.Data.Orm.Fakes.StubKeyAttribute.EqualsObject">
            <summary>设置 Attribute.Equals(Object obj) 的 stub</summary>
        </member>
        <member name="M:CYQ.Data.Orm.Fakes.StubKeyAttribute.GetHashCode">
            <summary>设置 Attribute.GetHashCode() 的 存根</summary>
        </member>
        <member name="F:CYQ.Data.Orm.Fakes.StubKeyAttribute.GetHashCode01">
            <summary>设置 Attribute.GetHashCode() 的 stub</summary>
        </member>
        <member name="M:CYQ.Data.Orm.Fakes.StubKeyAttribute.InitializeStub">
            <summary>初始化 type StubKeyAttribute 的新实例</summary>
        </member>
        <member name="M:CYQ.Data.Orm.Fakes.StubKeyAttribute.IsDefaultAttribute">
            <summary>设置 Attribute.IsDefaultAttribute() 的 存根</summary>
        </member>
        <member name="F:CYQ.Data.Orm.Fakes.StubKeyAttribute.IsDefaultAttribute01">
            <summary>设置 Attribute.IsDefaultAttribute() 的 stub</summary>
        </member>
        <member name="M:CYQ.Data.Orm.Fakes.StubKeyAttribute.Match(System.Object)">
            <summary>设置 Attribute.Match(Object obj) 的 存根</summary>
        </member>
        <member name="F:CYQ.Data.Orm.Fakes.StubKeyAttribute.MatchObject">
            <summary>设置 Attribute.Match(Object obj) 的 stub</summary>
        </member>
        <member name="F:CYQ.Data.Orm.Fakes.StubKeyAttribute.TypeIdGet">
            <summary>设置 Attribute.get_TypeId() 的 stub</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.StubKeyAttribute.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.StubKeyAttribute.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.StubKeyAttribute.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.StubKeyAttribute.TypeId">
            <summary>设置 Attribute.get_TypeId() 的 stub</summary>
        </member>
        <member name="T:CYQ.Data.Orm.Fakes.StubLengthAttribute">
            <summary>CYQ.Data.Orm.LengthAttribute 的存根类型</summary>
        </member>
        <member name="M:CYQ.Data.Orm.Fakes.StubLengthAttribute.#ctor(System.Int32)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:CYQ.Data.Orm.Fakes.StubLengthAttribute.#ctor(System.Int32,System.Int16)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:CYQ.Data.Orm.Fakes.StubLengthAttribute.Equals(System.Object)">
            <summary>设置 Attribute.Equals(Object obj) 的 存根</summary>
        </member>
        <member name="F:CYQ.Data.Orm.Fakes.StubLengthAttribute.EqualsObject">
            <summary>设置 Attribute.Equals(Object obj) 的 stub</summary>
        </member>
        <member name="M:CYQ.Data.Orm.Fakes.StubLengthAttribute.GetHashCode">
            <summary>设置 Attribute.GetHashCode() 的 存根</summary>
        </member>
        <member name="F:CYQ.Data.Orm.Fakes.StubLengthAttribute.GetHashCode01">
            <summary>设置 Attribute.GetHashCode() 的 stub</summary>
        </member>
        <member name="M:CYQ.Data.Orm.Fakes.StubLengthAttribute.InitializeStub">
            <summary>初始化 type StubLengthAttribute 的新实例</summary>
        </member>
        <member name="M:CYQ.Data.Orm.Fakes.StubLengthAttribute.IsDefaultAttribute">
            <summary>设置 Attribute.IsDefaultAttribute() 的 存根</summary>
        </member>
        <member name="F:CYQ.Data.Orm.Fakes.StubLengthAttribute.IsDefaultAttribute01">
            <summary>设置 Attribute.IsDefaultAttribute() 的 stub</summary>
        </member>
        <member name="M:CYQ.Data.Orm.Fakes.StubLengthAttribute.Match(System.Object)">
            <summary>设置 Attribute.Match(Object obj) 的 存根</summary>
        </member>
        <member name="F:CYQ.Data.Orm.Fakes.StubLengthAttribute.MatchObject">
            <summary>设置 Attribute.Match(Object obj) 的 stub</summary>
        </member>
        <member name="F:CYQ.Data.Orm.Fakes.StubLengthAttribute.TypeIdGet">
            <summary>设置 Attribute.get_TypeId() 的 stub</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.StubLengthAttribute.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.StubLengthAttribute.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.StubLengthAttribute.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.StubLengthAttribute.TypeId">
            <summary>设置 Attribute.get_TypeId() 的 stub</summary>
        </member>
        <member name="T:CYQ.Data.Orm.Fakes.StubOrmBase">
            <summary>CYQ.Data.Orm.OrmBase 的存根类型</summary>
        </member>
        <member name="M:CYQ.Data.Orm.Fakes.StubOrmBase.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:CYQ.Data.Orm.Fakes.StubOrmBase.InitializeStub">
            <summary>初始化 type StubOrmBase 的新实例</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.StubOrmBase.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.StubOrmBase.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.StubOrmBase.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:CYQ.Data.Orm.Fakes.StubSimpleOrmBase">
            <summary>CYQ.Data.Orm.SimpleOrmBase 的存根类型</summary>
        </member>
        <member name="M:CYQ.Data.Orm.Fakes.StubSimpleOrmBase.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:CYQ.Data.Orm.Fakes.StubSimpleOrmBase.Get``1(System.Object)">
            <summary>设置 SimpleOrmBase.Get(Object where) 的 存根</summary>
        </member>
        <member name="M:CYQ.Data.Orm.Fakes.StubSimpleOrmBase.GetOf1Object``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Object,``0})">
            <summary>设置 Get(Object where) 的存根</summary>
        </member>
        <member name="M:CYQ.Data.Orm.Fakes.StubSimpleOrmBase.InitializeStub">
            <summary>初始化 type StubSimpleOrmBase 的新实例</summary>
        </member>
        <member name="M:CYQ.Data.Orm.Fakes.StubSimpleOrmBase.Select``1">
            <summary>设置 SimpleOrmBase.Select() 的 存根</summary>
        </member>
        <member name="M:CYQ.Data.Orm.Fakes.StubSimpleOrmBase.Select``1(System.String)">
            <summary>设置 SimpleOrmBase.Select(String where) 的 存根</summary>
        </member>
        <member name="M:CYQ.Data.Orm.Fakes.StubSimpleOrmBase.Select``1(System.Int32,System.String)">
            <summary>设置 SimpleOrmBase.Select(Int32 topN, String where) 的 存根</summary>
        </member>
        <member name="M:CYQ.Data.Orm.Fakes.StubSimpleOrmBase.Select``1(System.Int32,System.Int32)">
            <summary>设置 SimpleOrmBase.Select(Int32 pageIndex, Int32 pageSize) 的 存根</summary>
        </member>
        <member name="M:CYQ.Data.Orm.Fakes.StubSimpleOrmBase.Select``1(System.Int32,System.Int32,System.String)">
            <summary>设置 SimpleOrmBase.Select(Int32 pageIndex, Int32 pageSize, String where) 的 存根</summary>
        </member>
        <member name="M:CYQ.Data.Orm.Fakes.StubSimpleOrmBase.Select``1(System.Int32,System.Int32,System.String,System.Int32@)">
            <summary>设置 SimpleOrmBase.Select(Int32 pageIndex, Int32 pageSize, String where, Int32&amp; count) 的 存根</summary>
        </member>
        <member name="M:CYQ.Data.Orm.Fakes.StubSimpleOrmBase.SelectOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.List{``0}})">
            <summary>设置 Select() 的存根</summary>
        </member>
        <member name="M:CYQ.Data.Orm.Fakes.StubSimpleOrmBase.SelectOf1Int32Int32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Int32,System.Int32,System.Collections.Generic.List{``0}})">
            <summary>设置 Select(Int32 pageIndex, Int32 pageSize) 的存根</summary>
        </member>
        <member name="M:CYQ.Data.Orm.Fakes.StubSimpleOrmBase.SelectOf1Int32Int32String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Int32,System.Int32,System.String,System.Collections.Generic.List{``0}})">
            <summary>设置 Select(Int32 pageIndex, Int32 pageSize, String where) 的存根</summary>
        </member>
        <member name="M:CYQ.Data.Orm.Fakes.StubSimpleOrmBase.SelectOf1Int32Int32StringInt32Out``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.OutFunc{System.Int32,System.Int32,System.String,System.Int32,System.Collections.Generic.List{``0}})">
            <summary>设置 Select(Int32 pageIndex, Int32 pageSize, String where, Int32&amp; count) 的存根</summary>
        </member>
        <member name="M:CYQ.Data.Orm.Fakes.StubSimpleOrmBase.SelectOf1Int32String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Int32,System.String,System.Collections.Generic.List{``0}})">
            <summary>设置 Select(Int32 topN, String where) 的存根</summary>
        </member>
        <member name="M:CYQ.Data.Orm.Fakes.StubSimpleOrmBase.SelectOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.Collections.Generic.List{``0}})">
            <summary>设置 Select(String where) 的存根</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.StubSimpleOrmBase.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.StubSimpleOrmBase.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.StubSimpleOrmBase.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:CYQ.Data.Orm.Fakes.StubSimpleOrmBase`1">
            <summary>CYQ.Data.Orm.SimpleOrmBase`1 的存根类型</summary>
        </member>
        <member name="M:CYQ.Data.Orm.Fakes.StubSimpleOrmBase`1.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:CYQ.Data.Orm.Fakes.StubSimpleOrmBase`1.Get``1(System.Object)">
            <summary>设置 SimpleOrmBase.Get(Object where) 的 存根</summary>
        </member>
        <member name="M:CYQ.Data.Orm.Fakes.StubSimpleOrmBase`1.GetOf1Object``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Object,``0})">
            <summary>设置 Get(Object where) 的存根</summary>
        </member>
        <member name="M:CYQ.Data.Orm.Fakes.StubSimpleOrmBase`1.InitializeStub">
            <summary>初始化 type StubSimpleOrmBase 的新实例</summary>
        </member>
        <member name="M:CYQ.Data.Orm.Fakes.StubSimpleOrmBase`1.Select``1">
            <summary>设置 SimpleOrmBase.Select() 的 存根</summary>
        </member>
        <member name="M:CYQ.Data.Orm.Fakes.StubSimpleOrmBase`1.Select``1(System.String)">
            <summary>设置 SimpleOrmBase.Select(String where) 的 存根</summary>
        </member>
        <member name="M:CYQ.Data.Orm.Fakes.StubSimpleOrmBase`1.Select``1(System.Int32,System.String)">
            <summary>设置 SimpleOrmBase.Select(Int32 topN, String where) 的 存根</summary>
        </member>
        <member name="M:CYQ.Data.Orm.Fakes.StubSimpleOrmBase`1.Select``1(System.Int32,System.Int32)">
            <summary>设置 SimpleOrmBase.Select(Int32 pageIndex, Int32 pageSize) 的 存根</summary>
        </member>
        <member name="M:CYQ.Data.Orm.Fakes.StubSimpleOrmBase`1.Select``1(System.Int32,System.Int32,System.String)">
            <summary>设置 SimpleOrmBase.Select(Int32 pageIndex, Int32 pageSize, String where) 的 存根</summary>
        </member>
        <member name="M:CYQ.Data.Orm.Fakes.StubSimpleOrmBase`1.Select``1(System.Int32,System.Int32,System.String,System.Int32@)">
            <summary>设置 SimpleOrmBase.Select(Int32 pageIndex, Int32 pageSize, String where, Int32&amp; count) 的 存根</summary>
        </member>
        <member name="M:CYQ.Data.Orm.Fakes.StubSimpleOrmBase`1.SelectOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.List{``0}})">
            <summary>设置 Select() 的存根</summary>
        </member>
        <member name="M:CYQ.Data.Orm.Fakes.StubSimpleOrmBase`1.SelectOf1Int32Int32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Int32,System.Int32,System.Collections.Generic.List{``0}})">
            <summary>设置 Select(Int32 pageIndex, Int32 pageSize) 的存根</summary>
        </member>
        <member name="M:CYQ.Data.Orm.Fakes.StubSimpleOrmBase`1.SelectOf1Int32Int32String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Int32,System.Int32,System.String,System.Collections.Generic.List{``0}})">
            <summary>设置 Select(Int32 pageIndex, Int32 pageSize, String where) 的存根</summary>
        </member>
        <member name="M:CYQ.Data.Orm.Fakes.StubSimpleOrmBase`1.SelectOf1Int32Int32StringInt32Out``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.OutFunc{System.Int32,System.Int32,System.String,System.Int32,System.Collections.Generic.List{``0}})">
            <summary>设置 Select(Int32 pageIndex, Int32 pageSize, String where, Int32&amp; count) 的存根</summary>
        </member>
        <member name="M:CYQ.Data.Orm.Fakes.StubSimpleOrmBase`1.SelectOf1Int32String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Int32,System.String,System.Collections.Generic.List{``0}})">
            <summary>设置 Select(Int32 topN, String where) 的存根</summary>
        </member>
        <member name="M:CYQ.Data.Orm.Fakes.StubSimpleOrmBase`1.SelectOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.Collections.Generic.List{``0}})">
            <summary>设置 Select(String where) 的存根</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.StubSimpleOrmBase`1.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.StubSimpleOrmBase`1.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.StubSimpleOrmBase`1.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:CYQ.Data.Orm.Fakes.StubTableNameAttribute">
            <summary>CYQ.Data.Orm.TableNameAttribute 的存根类型</summary>
        </member>
        <member name="M:CYQ.Data.Orm.Fakes.StubTableNameAttribute.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:CYQ.Data.Orm.Fakes.StubTableNameAttribute.Equals(System.Object)">
            <summary>设置 Attribute.Equals(Object obj) 的 存根</summary>
        </member>
        <member name="F:CYQ.Data.Orm.Fakes.StubTableNameAttribute.EqualsObject">
            <summary>设置 Attribute.Equals(Object obj) 的 stub</summary>
        </member>
        <member name="M:CYQ.Data.Orm.Fakes.StubTableNameAttribute.GetHashCode">
            <summary>设置 Attribute.GetHashCode() 的 存根</summary>
        </member>
        <member name="F:CYQ.Data.Orm.Fakes.StubTableNameAttribute.GetHashCode01">
            <summary>设置 Attribute.GetHashCode() 的 stub</summary>
        </member>
        <member name="M:CYQ.Data.Orm.Fakes.StubTableNameAttribute.InitializeStub">
            <summary>初始化 type StubTableNameAttribute 的新实例</summary>
        </member>
        <member name="M:CYQ.Data.Orm.Fakes.StubTableNameAttribute.IsDefaultAttribute">
            <summary>设置 Attribute.IsDefaultAttribute() 的 存根</summary>
        </member>
        <member name="F:CYQ.Data.Orm.Fakes.StubTableNameAttribute.IsDefaultAttribute01">
            <summary>设置 Attribute.IsDefaultAttribute() 的 stub</summary>
        </member>
        <member name="M:CYQ.Data.Orm.Fakes.StubTableNameAttribute.Match(System.Object)">
            <summary>设置 Attribute.Match(Object obj) 的 存根</summary>
        </member>
        <member name="F:CYQ.Data.Orm.Fakes.StubTableNameAttribute.MatchObject">
            <summary>设置 Attribute.Match(Object obj) 的 stub</summary>
        </member>
        <member name="F:CYQ.Data.Orm.Fakes.StubTableNameAttribute.TypeIdGet">
            <summary>设置 Attribute.get_TypeId() 的 stub</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.StubTableNameAttribute.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.StubTableNameAttribute.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.StubTableNameAttribute.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:CYQ.Data.Orm.Fakes.StubTableNameAttribute.TypeId">
            <summary>设置 Attribute.get_TypeId() 的 stub</summary>
        </member>
        <member name="T:CYQ.Data.SQL.Fakes.ShimDataType">
            <summary>CYQ.Data.SQL.DataType 的填充码类型</summary>
        </member>
        <member name="M:CYQ.Data.SQL.Fakes.ShimDataType.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:CYQ.Data.SQL.Fakes.ShimDataType.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:CYQ.Data.SQL.Fakes.ShimDataType.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:CYQ.Data.SQL.Fakes.ShimDataType.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:CYQ.Data.SQL.Fakes.ShimDataType.GetDataTypeMCellStructDataBaseTypeString">
            <summary>设置 DataType.GetDataType(MCellStruct ms, DataBaseType dalTo, String version) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.SQL.Fakes.ShimDataType.GetDbTypeString">
            <summary>设置 DataType.GetDbType(String typeName) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.SQL.Fakes.ShimDataType.GetDbTypeStringDataBaseType">
            <summary>设置 DataType.GetDbType(String typeName, DataBaseType dalType) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.SQL.Fakes.ShimDataType.GetGroupSqlDbType">
            <summary>设置 DataType.GetGroup(SqlDbType sqlDbType) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.SQL.Fakes.ShimDataType.GetGroupSqlDbTypeDataBaseType">
            <summary>设置 DataType.GetGroup(SqlDbType sqlDbType, DataBaseType dalType) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.SQL.Fakes.ShimDataType.GetMaxSizeSqlDbType">
            <summary>设置 DataType.GetMaxSize(SqlDbType sqlDbType) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.SQL.Fakes.ShimDataType.GetSqlTypeString">
            <summary>设置 DataType.GetSqlType(String typeName) 的 填充码</summary>
        </member>
        <member name="T:CYQ.Data.SQL.Fakes.ShimSqlValue">
            <summary>CYQ.Data.SQL.SqlValue 的填充码类型</summary>
        </member>
        <member name="M:CYQ.Data.SQL.Fakes.ShimSqlValue.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:CYQ.Data.SQL.Fakes.ShimSqlValue.#ctor(CYQ.Data.SQL.SqlValue)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:CYQ.Data.SQL.Fakes.ShimSqlValue.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:CYQ.Data.SQL.Fakes.ShimSqlValue.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:CYQ.Data.SQL.Fakes.ShimSqlValue.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:CYQ.Data.SQL.Fakes.ShimSqlValue.Constructor">
            <summary>设置 SqlValue.SqlValue() 的 填充码</summary>
        </member>
        <member name="T:CYQ.Data.SQL.Fakes.ShimSqlValue.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:CYQ.Data.SQL.Fakes.StubSqlValue">
            <summary>CYQ.Data.SQL.SqlValue 的存根类型</summary>
        </member>
        <member name="M:CYQ.Data.SQL.Fakes.StubSqlValue.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:CYQ.Data.SQL.Fakes.StubSqlValue.InitializeStub">
            <summary>初始化 type StubSqlValue 的新实例</summary>
        </member>
        <member name="P:CYQ.Data.SQL.Fakes.StubSqlValue.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:CYQ.Data.SQL.Fakes.StubSqlValue.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:CYQ.Data.SQL.Fakes.StubSqlValue.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:CYQ.Data.Table.Fakes.ShimMCellStruct">
            <summary>CYQ.Data.Table.MCellStruct 的填充码类型</summary>
        </member>
        <member name="M:CYQ.Data.Table.Fakes.ShimMCellStruct.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:CYQ.Data.Table.Fakes.ShimMCellStruct.#ctor(CYQ.Data.Table.MCellStruct)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:CYQ.Data.Table.Fakes.ShimMCellStruct.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:CYQ.Data.Table.Fakes.ShimMCellStruct.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMCellStruct.AlterOpGet">
            <summary>设置 MCellStruct.get_AlterOp() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMCellStruct.AlterOpSetAlterOp">
            <summary>设置 MCellStruct.set_AlterOp(AlterOp value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMCellStruct.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMCellStruct.Clone">
            <summary>设置 MCellStruct.Clone() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMCellStruct.ColumnNameGet">
            <summary>设置 MCellStruct.get_ColumnName() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMCellStruct.ColumnNameSetString">
            <summary>设置 MCellStruct.set_ColumnName(String value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMCellStruct.ConstructorDataBaseType">
            <summary>设置 MCellStruct.MCellStruct(DataBaseType dalType) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMCellStruct.ConstructorStringSqlDbType">
            <summary>设置 MCellStruct.MCellStruct(String columnName, SqlDbType sqlType) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMCellStruct.ConstructorStringSqlDbTypeBooleanBooleanInt32">
            <summary>设置 MCellStruct.MCellStruct(String columnName, SqlDbType sqlType, Boolean isAutoIncrement, Boolean isCanNull, Int32 maxSize) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMCellStruct.DalTypeGet">
            <summary>设置 MCellStruct.get_DalType() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMCellStruct.DefaultValueGet">
            <summary>设置 MCellStruct.get_DefaultValue() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMCellStruct.DefaultValueSetObject">
            <summary>设置 MCellStruct.set_DefaultValue(Object value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMCellStruct.DescriptionGet">
            <summary>设置 MCellStruct.get_Description() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMCellStruct.DescriptionSetString">
            <summary>设置 MCellStruct.set_Description(String value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMCellStruct.FKTableNameGet">
            <summary>设置 MCellStruct.get_FKTableName() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMCellStruct.FKTableNameSetString">
            <summary>设置 MCellStruct.set_FKTableName(String value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMCellStruct.GetWhereIn">
            <summary>设置 MCellStruct.GetWhereIn() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMCellStruct.InitStringSqlDbTypeBooleanBooleanBooleanInt32Object">
            <summary>设置 MCellStruct.Init(String columnName, SqlDbType sqlType, Boolean isAutoIncrement, Boolean isCanNull, Boolean isPrimaryKey, Int32 maxSize, Object defaultValue) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMCellStruct.IsAutoIncrementGet">
            <summary>设置 MCellStruct.get_IsAutoIncrement() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMCellStruct.IsAutoIncrementSetBoolean">
            <summary>设置 MCellStruct.set_IsAutoIncrement(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMCellStruct.IsCanNullGet">
            <summary>设置 MCellStruct.get_IsCanNull() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMCellStruct.IsCanNullSetBoolean">
            <summary>设置 MCellStruct.set_IsCanNull(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMCellStruct.IsForeignKeyGet">
            <summary>设置 MCellStruct.get_IsForeignKey() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMCellStruct.IsForeignKeySetBoolean">
            <summary>设置 MCellStruct.set_IsForeignKey(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMCellStruct.IsJsonIgnoreGet">
            <summary>设置 MCellStruct.get_IsJsonIgnore() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMCellStruct.IsJsonIgnoreSetBoolean">
            <summary>设置 MCellStruct.set_IsJsonIgnore(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMCellStruct.IsPrimaryKeyGet">
            <summary>设置 MCellStruct.get_IsPrimaryKey() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMCellStruct.IsPrimaryKeySetBoolean">
            <summary>设置 MCellStruct.set_IsPrimaryKey(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMCellStruct.IsUniqueKeyGet">
            <summary>设置 MCellStruct.get_IsUniqueKey() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMCellStruct.IsUniqueKeySetBoolean">
            <summary>设置 MCellStruct.set_IsUniqueKey(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMCellStruct.LoadMCellStruct">
            <summary>设置 MCellStruct.Load(MCellStruct ms) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMCellStruct.MDataColumnGet">
            <summary>设置 MCellStruct.get_MDataColumn() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMCellStruct.MDataColumnSetMDataColumn">
            <summary>设置 MCellStruct.set_MDataColumn(MDataColumn value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMCellStruct.MaxSizeGet">
            <summary>设置 MCellStruct.get_MaxSize() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMCellStruct.MaxSizeSetInt32">
            <summary>设置 MCellStruct.set_MaxSize(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMCellStruct.OldNameGet">
            <summary>设置 MCellStruct.get_OldName() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMCellStruct.OldNameSetString">
            <summary>设置 MCellStruct.set_OldName(String value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMCellStruct.ReaderIndexGet">
            <summary>设置 MCellStruct.get_ReaderIndex() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMCellStruct.ReaderIndexSetInt32">
            <summary>设置 MCellStruct.set_ReaderIndex(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMCellStruct.ScaleGet">
            <summary>设置 MCellStruct.get_Scale() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMCellStruct.ScaleSetInt16">
            <summary>设置 MCellStruct.set_Scale(Int16 value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMCellStruct.SetObject">
            <summary>设置 MCellStruct.Set(Object value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMCellStruct.SetObjectInt32">
            <summary>设置 MCellStruct.Set(Object value, Int32 state) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMCellStruct.SqlTypeGet">
            <summary>设置 MCellStruct.get_SqlType() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMCellStruct.SqlTypeNameGet">
            <summary>设置 MCellStruct.get_SqlTypeName() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMCellStruct.SqlTypeNameSetString">
            <summary>设置 MCellStruct.set_SqlTypeName(String value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMCellStruct.SqlTypeSetSqlDbType">
            <summary>设置 MCellStruct.set_SqlType(SqlDbType value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMCellStruct.TableNameGet">
            <summary>设置 MCellStruct.get_TableName() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMCellStruct.TableNameSetString">
            <summary>设置 MCellStruct.set_TableName(String value) 的 填充码</summary>
        </member>
        <member name="T:CYQ.Data.Table.Fakes.ShimMCellStruct.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMCellStruct.AllInstances.AlterOpGet">
            <summary>设置 MCellStruct.get_AlterOp() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMCellStruct.AllInstances.AlterOpSetAlterOp">
            <summary>设置 MCellStruct.set_AlterOp(AlterOp value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMCellStruct.AllInstances.Clone">
            <summary>设置 MCellStruct.Clone() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMCellStruct.AllInstances.ColumnNameGet">
            <summary>设置 MCellStruct.get_ColumnName() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMCellStruct.AllInstances.ColumnNameSetString">
            <summary>设置 MCellStruct.set_ColumnName(String value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMCellStruct.AllInstances.DalTypeGet">
            <summary>设置 MCellStruct.get_DalType() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMCellStruct.AllInstances.DefaultValueGet">
            <summary>设置 MCellStruct.get_DefaultValue() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMCellStruct.AllInstances.DefaultValueSetObject">
            <summary>设置 MCellStruct.set_DefaultValue(Object value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMCellStruct.AllInstances.DescriptionGet">
            <summary>设置 MCellStruct.get_Description() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMCellStruct.AllInstances.DescriptionSetString">
            <summary>设置 MCellStruct.set_Description(String value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMCellStruct.AllInstances.FKTableNameGet">
            <summary>设置 MCellStruct.get_FKTableName() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMCellStruct.AllInstances.FKTableNameSetString">
            <summary>设置 MCellStruct.set_FKTableName(String value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMCellStruct.AllInstances.GetWhereIn">
            <summary>设置 MCellStruct.GetWhereIn() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMCellStruct.AllInstances.InitStringSqlDbTypeBooleanBooleanBooleanInt32Object">
            <summary>设置 MCellStruct.Init(String columnName, SqlDbType sqlType, Boolean isAutoIncrement, Boolean isCanNull, Boolean isPrimaryKey, Int32 maxSize, Object defaultValue) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMCellStruct.AllInstances.IsAutoIncrementGet">
            <summary>设置 MCellStruct.get_IsAutoIncrement() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMCellStruct.AllInstances.IsAutoIncrementSetBoolean">
            <summary>设置 MCellStruct.set_IsAutoIncrement(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMCellStruct.AllInstances.IsCanNullGet">
            <summary>设置 MCellStruct.get_IsCanNull() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMCellStruct.AllInstances.IsCanNullSetBoolean">
            <summary>设置 MCellStruct.set_IsCanNull(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMCellStruct.AllInstances.IsForeignKeyGet">
            <summary>设置 MCellStruct.get_IsForeignKey() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMCellStruct.AllInstances.IsForeignKeySetBoolean">
            <summary>设置 MCellStruct.set_IsForeignKey(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMCellStruct.AllInstances.IsJsonIgnoreGet">
            <summary>设置 MCellStruct.get_IsJsonIgnore() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMCellStruct.AllInstances.IsJsonIgnoreSetBoolean">
            <summary>设置 MCellStruct.set_IsJsonIgnore(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMCellStruct.AllInstances.IsPrimaryKeyGet">
            <summary>设置 MCellStruct.get_IsPrimaryKey() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMCellStruct.AllInstances.IsPrimaryKeySetBoolean">
            <summary>设置 MCellStruct.set_IsPrimaryKey(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMCellStruct.AllInstances.IsUniqueKeyGet">
            <summary>设置 MCellStruct.get_IsUniqueKey() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMCellStruct.AllInstances.IsUniqueKeySetBoolean">
            <summary>设置 MCellStruct.set_IsUniqueKey(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMCellStruct.AllInstances.LoadMCellStruct">
            <summary>设置 MCellStruct.Load(MCellStruct ms) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMCellStruct.AllInstances.MDataColumnGet">
            <summary>设置 MCellStruct.get_MDataColumn() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMCellStruct.AllInstances.MDataColumnSetMDataColumn">
            <summary>设置 MCellStruct.set_MDataColumn(MDataColumn value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMCellStruct.AllInstances.MaxSizeGet">
            <summary>设置 MCellStruct.get_MaxSize() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMCellStruct.AllInstances.MaxSizeSetInt32">
            <summary>设置 MCellStruct.set_MaxSize(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMCellStruct.AllInstances.OldNameGet">
            <summary>设置 MCellStruct.get_OldName() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMCellStruct.AllInstances.OldNameSetString">
            <summary>设置 MCellStruct.set_OldName(String value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMCellStruct.AllInstances.ReaderIndexGet">
            <summary>设置 MCellStruct.get_ReaderIndex() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMCellStruct.AllInstances.ReaderIndexSetInt32">
            <summary>设置 MCellStruct.set_ReaderIndex(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMCellStruct.AllInstances.ScaleGet">
            <summary>设置 MCellStruct.get_Scale() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMCellStruct.AllInstances.ScaleSetInt16">
            <summary>设置 MCellStruct.set_Scale(Int16 value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMCellStruct.AllInstances.SetObject">
            <summary>设置 MCellStruct.Set(Object value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMCellStruct.AllInstances.SetObjectInt32">
            <summary>设置 MCellStruct.Set(Object value, Int32 state) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMCellStruct.AllInstances.SqlTypeGet">
            <summary>设置 MCellStruct.get_SqlType() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMCellStruct.AllInstances.SqlTypeNameGet">
            <summary>设置 MCellStruct.get_SqlTypeName() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMCellStruct.AllInstances.SqlTypeNameSetString">
            <summary>设置 MCellStruct.set_SqlTypeName(String value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMCellStruct.AllInstances.SqlTypeSetSqlDbType">
            <summary>设置 MCellStruct.set_SqlType(SqlDbType value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMCellStruct.AllInstances.TableNameGet">
            <summary>设置 MCellStruct.get_TableName() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMCellStruct.AllInstances.TableNameSetString">
            <summary>设置 MCellStruct.set_TableName(String value) 的 填充码</summary>
        </member>
        <member name="T:CYQ.Data.Table.Fakes.ShimMDataCell">
            <summary>CYQ.Data.Table.MDataCell 的填充码类型</summary>
        </member>
        <member name="M:CYQ.Data.Table.Fakes.ShimMDataCell.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:CYQ.Data.Table.Fakes.ShimMDataCell.#ctor(CYQ.Data.Table.MDataCell)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:CYQ.Data.Table.Fakes.ShimMDataCell.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:CYQ.Data.Table.Fakes.ShimMDataCell.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:CYQ.Data.Table.Fakes.ShimMDataCell.GetOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0})">
            <summary>设置 MDataCell.Get() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataCell.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataCell.CheckNewValue">
            <summary>设置 MDataCell.CheckNewValue() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataCell.Clear">
            <summary>设置 MDataCell.Clear() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataCell.ColumnNameGet">
            <summary>设置 MDataCell.get_ColumnName() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataCell.ConstructorMCellStructRef">
            <summary>设置 MDataCell.MDataCell(MCellStruct&amp; dataStruct) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataCell.ConstructorMCellStructRefObject">
            <summary>设置 MDataCell.MDataCell(MCellStruct&amp; dataStruct, Object value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataCell.EqualsObject">
            <summary>设置 MDataCell.Equals(Object value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataCell.FixValue">
            <summary>设置 MDataCell.FixValue() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataCell.InitMCellStructObject">
            <summary>设置 MDataCell.Init(MCellStruct dataStruct, Object value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataCell.IsJsonIgnoreGet">
            <summary>设置 MDataCell.get_IsJsonIgnore() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataCell.IsNullGet">
            <summary>设置 MDataCell.get_IsNull() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataCell.IsNullOrEmptyGet">
            <summary>设置 MDataCell.get_IsNullOrEmpty() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataCell.IsNullSetBoolean">
            <summary>设置 MDataCell.set_IsNull(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataCell.LoadValueMDataCellBoolean">
            <summary>设置 MDataCell.LoadValue(MDataCell cell, Boolean isWithState) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataCell.NullCheck">
            <summary>设置 MDataCell.NullCheck() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataCell.SetDefaultValueToValue">
            <summary>设置 MDataCell.SetDefaultValueToValue() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataCell.StateGet">
            <summary>设置 MDataCell.get_State() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataCell.StateSetInt32">
            <summary>设置 MDataCell.set_State(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataCell.StringValueGet">
            <summary>设置 MDataCell.get_StringValue() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataCell.StructGet">
            <summary>设置 MDataCell.get_Struct() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataCell.ToRow">
            <summary>设置 MDataCell.ToRow() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataCell.ToString">
            <summary>设置 MDataCell.ToString() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataCell.ToXmlBoolean">
            <summary>设置 MDataCell.ToXml(Boolean isConvertNameToLower) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataCell.ValueGet">
            <summary>设置 MDataCell.get_Value() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataCell.ValueSetObject">
            <summary>设置 MDataCell.set_Value(Object value) 的 填充码</summary>
        </member>
        <member name="T:CYQ.Data.Table.Fakes.ShimMDataCell.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:CYQ.Data.Table.Fakes.ShimMDataCell.AllInstances.GetOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{CYQ.Data.Table.MDataCell,``0})">
            <summary>设置 MDataCell.Get() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataCell.AllInstances.CheckNewValue">
            <summary>设置 MDataCell.CheckNewValue() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataCell.AllInstances.Clear">
            <summary>设置 MDataCell.Clear() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataCell.AllInstances.ColumnNameGet">
            <summary>设置 MDataCell.get_ColumnName() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataCell.AllInstances.EqualsObject">
            <summary>设置 MDataCell.Equals(Object value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataCell.AllInstances.FixValue">
            <summary>设置 MDataCell.FixValue() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataCell.AllInstances.InitMCellStructObject">
            <summary>设置 MDataCell.Init(MCellStruct dataStruct, Object value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataCell.AllInstances.IsJsonIgnoreGet">
            <summary>设置 MDataCell.get_IsJsonIgnore() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataCell.AllInstances.IsNullGet">
            <summary>设置 MDataCell.get_IsNull() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataCell.AllInstances.IsNullOrEmptyGet">
            <summary>设置 MDataCell.get_IsNullOrEmpty() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataCell.AllInstances.IsNullSetBoolean">
            <summary>设置 MDataCell.set_IsNull(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataCell.AllInstances.LoadValueMDataCellBoolean">
            <summary>设置 MDataCell.LoadValue(MDataCell cell, Boolean isWithState) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataCell.AllInstances.NullCheck">
            <summary>设置 MDataCell.NullCheck() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataCell.AllInstances.SetDefaultValueToValue">
            <summary>设置 MDataCell.SetDefaultValueToValue() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataCell.AllInstances.StateGet">
            <summary>设置 MDataCell.get_State() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataCell.AllInstances.StateSetInt32">
            <summary>设置 MDataCell.set_State(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataCell.AllInstances.StringValueGet">
            <summary>设置 MDataCell.get_StringValue() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataCell.AllInstances.StructGet">
            <summary>设置 MDataCell.get_Struct() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataCell.AllInstances.ToRow">
            <summary>设置 MDataCell.ToRow() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataCell.AllInstances.ToString01">
            <summary>设置 MDataCell.ToString() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataCell.AllInstances.ToXmlBoolean">
            <summary>设置 MDataCell.ToXml(Boolean isConvertNameToLower) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataCell.AllInstances.ValueGet">
            <summary>设置 MDataCell.get_Value() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataCell.AllInstances.ValueSetObject">
            <summary>设置 MDataCell.set_Value(Object value) 的 填充码</summary>
        </member>
        <member name="T:CYQ.Data.Table.Fakes.ShimMDataColumn">
            <summary>CYQ.Data.Table.MDataColumn 的填充码类型</summary>
        </member>
        <member name="M:CYQ.Data.Table.Fakes.ShimMDataColumn.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:CYQ.Data.Table.Fakes.ShimMDataColumn.#ctor(CYQ.Data.Table.MDataColumn)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:CYQ.Data.Table.Fakes.ShimMDataColumn.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:CYQ.Data.Table.Fakes.ShimMDataColumn.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:CYQ.Data.Table.Fakes.ShimMDataColumn.Bind(System.Collections.IEnumerable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:CYQ.Data.Table.Fakes.ShimMDataColumn.Bind(System.Collections.Generic.ICollection{CYQ.Data.Table.MCellStruct})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:CYQ.Data.Table.Fakes.ShimMDataColumn.Bind(System.Collections.Generic.IEnumerable{CYQ.Data.Table.MCellStruct})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:CYQ.Data.Table.Fakes.ShimMDataColumn.Bind(System.Collections.Generic.IList{CYQ.Data.Table.MCellStruct})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataColumn.AddMCellStruct">
            <summary>设置 MDataColumn.Add(MCellStruct item) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataColumn.AddRangeMDataColumn">
            <summary>设置 MDataColumn.AddRange(MDataColumn items) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataColumn.AddRelateionTableNameString">
            <summary>设置 MDataColumn.AddRelateionTableName(String tableName) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataColumn.AddString">
            <summary>设置 MDataColumn.Add(String columnName) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataColumn.AddStringSqlDbType">
            <summary>设置 MDataColumn.Add(String columnName, SqlDbType sqlType) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataColumn.AddStringSqlDbTypeBoolean">
            <summary>设置 MDataColumn.Add(String columnName, SqlDbType sqlType, Boolean isAutoIncrement) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataColumn.AddStringSqlDbTypeBooleanBooleanInt32">
            <summary>设置 MDataColumn.Add(String columnName, SqlDbType sqlType, Boolean isAutoIncrement, Boolean isCanNull, Int32 maxSize) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataColumn.AddStringSqlDbTypeBooleanBooleanInt32BooleanObject">
            <summary>设置 MDataColumn.Add(String columnName, SqlDbType sqlType, Boolean isAutoIncrement, Boolean isCanNull, Int32 maxSize, Boolean isPrimaryKey, Object defaultValue) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataColumn.AddStringSqlDbTypeBooleanBooleanInt32BooleanObjectInt16">
            <summary>设置 MDataColumn.Add(String columnName, SqlDbType sqlType, Boolean isAutoIncrement, Boolean isCanNull, Int32 maxSize, Boolean isPrimaryKey, Object defaultValue, Int16 scale) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataColumn.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataColumn.Clear">
            <summary>设置 MDataColumn.Clear() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataColumn.Clone">
            <summary>设置 MDataColumn.Clone() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataColumn.Constructor">
            <summary>设置 MDataColumn.MDataColumn() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataColumn.ConstructorMDataTable">
            <summary>设置 MDataColumn.MDataColumn(MDataTable table) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataColumn.ContainsMCellStruct">
            <summary>设置 MDataColumn.Contains(MCellStruct item) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataColumn.ContainsString">
            <summary>设置 MDataColumn.Contains(String columnName) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataColumn.CountGet">
            <summary>设置 MDataColumn.get_Count() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataColumn.CreateFromString">
            <summary>设置 MDataColumn.CreateFrom(String jsonOrFileName) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataColumn.CreateFromStringBoolean">
            <summary>设置 MDataColumn.CreateFrom(String jsonOrFileName, Boolean readTxtOrXml) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataColumn.DescriptionGet">
            <summary>设置 MDataColumn.get_Description() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataColumn.DescriptionSetString">
            <summary>设置 MDataColumn.set_Description(String value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataColumn.FirstPrimaryGet">
            <summary>设置 MDataColumn.get_FirstPrimary() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataColumn.FirstUniqueGet">
            <summary>设置 MDataColumn.get_FirstUnique() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataColumn.GetIndexString">
            <summary>设置 MDataColumn.GetIndex(String columnName) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataColumn.ImplicitOpDataColumnCollectionMDataColumn">
            <summary>设置 MDataColumn.op_Implicit(DataColumnCollection columns) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataColumn.InsertInt32MCellStruct">
            <summary>设置 MDataColumn.Insert(Int32 index, MCellStruct item) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataColumn.InsertRangeInt32MDataColumn">
            <summary>设置 MDataColumn.InsertRange(Int32 index, MDataColumn mdc) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataColumn.IsReadOnlySystemCollectionsGenericICollectionCYQDataTableMCellStructget">
            <summary>设置 MDataColumn.System.Collections.Generic.ICollection&lt;CYQ.Data.Table.MCellStruct&gt;.get_IsReadOnly() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataColumn.ItemGetInt32">
            <summary>设置 MDataColumn.get_Item(Int32 index) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataColumn.ItemGetString">
            <summary>设置 MDataColumn.get_Item(String key) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataColumn.ItemSetInt32MCellStruct">
            <summary>设置 MDataColumn.set_Item(Int32 index, MCellStruct value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataColumn.JointPrimaryGet">
            <summary>设置 MDataColumn.get_JointPrimary() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataColumn.RemoveAtInt32">
            <summary>设置 MDataColumn.RemoveAt(Int32 index) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataColumn.RemoveMCellStruct">
            <summary>设置 MDataColumn.Remove(MCellStruct item) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataColumn.RemoveRangeInt32Int32">
            <summary>设置 MDataColumn.RemoveRange(Int32 index, Int32 count) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataColumn.RemoveString">
            <summary>设置 MDataColumn.Remove(String columnName) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataColumn.SetOrdinalStringInt32">
            <summary>设置 MDataColumn.SetOrdinal(String columnName, Int32 ordinal) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataColumn.SetValueStringObject">
            <summary>设置 MDataColumn.SetValue(String columnName, Object value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataColumn.SystemCollectionsGenericICollectionCYQDataTableMCellStructCopyToMCellStructArrayInt32">
            <summary>设置 MDataColumn.System.Collections.Generic.ICollection&lt;CYQ.Data.Table.MCellStruct&gt;.CopyTo(MCellStruct[] array, Int32 arrayIndex) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataColumn.SystemCollectionsGenericIEnumerableCYQDataTableMCellStructGetEnumerator">
            <summary>设置 MDataColumn.System.Collections.Generic.IEnumerable&lt;CYQ.Data.Table.MCellStruct&gt;.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataColumn.SystemCollectionsGenericIListCYQDataTableMCellStructIndexOfMCellStruct">
            <summary>设置 MDataColumn.System.Collections.Generic.IList&lt;CYQ.Data.Table.MCellStruct&gt;.IndexOf(MCellStruct item) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataColumn.SystemCollectionsIEnumerableGetEnumerator">
            <summary>设置 MDataColumn.System.Collections.IEnumerable.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataColumn.TableGet">
            <summary>设置 MDataColumn.get_Table() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataColumn.TableNameGet">
            <summary>设置 MDataColumn.get_TableName() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataColumn.TableNameSetString">
            <summary>设置 MDataColumn.set_TableName(String value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataColumn.ToJsonBoolean">
            <summary>设置 MDataColumn.ToJson(Boolean isFullSchema) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataColumn.ToRowString">
            <summary>设置 MDataColumn.ToRow(String tableName) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataColumn.ToTable">
            <summary>设置 MDataColumn.ToTable() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataColumn.WriteSchemaString">
            <summary>设置 MDataColumn.WriteSchema(String fileName) 的 填充码</summary>
        </member>
        <member name="T:CYQ.Data.Table.Fakes.ShimMDataColumn.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataColumn.AllInstances.AddMCellStruct">
            <summary>设置 MDataColumn.Add(MCellStruct item) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataColumn.AllInstances.AddRangeMDataColumn">
            <summary>设置 MDataColumn.AddRange(MDataColumn items) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataColumn.AllInstances.AddRelateionTableNameString">
            <summary>设置 MDataColumn.AddRelateionTableName(String tableName) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataColumn.AllInstances.AddString">
            <summary>设置 MDataColumn.Add(String columnName) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataColumn.AllInstances.AddStringSqlDbType">
            <summary>设置 MDataColumn.Add(String columnName, SqlDbType sqlType) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataColumn.AllInstances.AddStringSqlDbTypeBoolean">
            <summary>设置 MDataColumn.Add(String columnName, SqlDbType sqlType, Boolean isAutoIncrement) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataColumn.AllInstances.AddStringSqlDbTypeBooleanBooleanInt32">
            <summary>设置 MDataColumn.Add(String columnName, SqlDbType sqlType, Boolean isAutoIncrement, Boolean isCanNull, Int32 maxSize) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataColumn.AllInstances.AddStringSqlDbTypeBooleanBooleanInt32BooleanObject">
            <summary>设置 MDataColumn.Add(String columnName, SqlDbType sqlType, Boolean isAutoIncrement, Boolean isCanNull, Int32 maxSize, Boolean isPrimaryKey, Object defaultValue) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataColumn.AllInstances.AddStringSqlDbTypeBooleanBooleanInt32BooleanObjectInt16">
            <summary>设置 MDataColumn.Add(String columnName, SqlDbType sqlType, Boolean isAutoIncrement, Boolean isCanNull, Int32 maxSize, Boolean isPrimaryKey, Object defaultValue, Int16 scale) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataColumn.AllInstances.Clear">
            <summary>设置 MDataColumn.Clear() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataColumn.AllInstances.Clone">
            <summary>设置 MDataColumn.Clone() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataColumn.AllInstances.ContainsMCellStruct">
            <summary>设置 MDataColumn.Contains(MCellStruct item) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataColumn.AllInstances.ContainsString">
            <summary>设置 MDataColumn.Contains(String columnName) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataColumn.AllInstances.CountGet">
            <summary>设置 MDataColumn.get_Count() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataColumn.AllInstances.DescriptionGet">
            <summary>设置 MDataColumn.get_Description() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataColumn.AllInstances.DescriptionSetString">
            <summary>设置 MDataColumn.set_Description(String value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataColumn.AllInstances.FirstPrimaryGet">
            <summary>设置 MDataColumn.get_FirstPrimary() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataColumn.AllInstances.FirstUniqueGet">
            <summary>设置 MDataColumn.get_FirstUnique() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataColumn.AllInstances.GetIndexString">
            <summary>设置 MDataColumn.GetIndex(String columnName) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataColumn.AllInstances.InsertInt32MCellStruct">
            <summary>设置 MDataColumn.Insert(Int32 index, MCellStruct item) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataColumn.AllInstances.InsertRangeInt32MDataColumn">
            <summary>设置 MDataColumn.InsertRange(Int32 index, MDataColumn mdc) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataColumn.AllInstances.IsReadOnlySystemCollectionsGenericICollectionCYQDataTableMCellStructget">
            <summary>设置 MDataColumn.System.Collections.Generic.ICollection&lt;CYQ.Data.Table.MCellStruct&gt;.get_IsReadOnly() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataColumn.AllInstances.ItemGetInt32">
            <summary>设置 MDataColumn.get_Item(Int32 index) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataColumn.AllInstances.ItemGetString">
            <summary>设置 MDataColumn.get_Item(String key) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataColumn.AllInstances.ItemSetInt32MCellStruct">
            <summary>设置 MDataColumn.set_Item(Int32 index, MCellStruct value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataColumn.AllInstances.JointPrimaryGet">
            <summary>设置 MDataColumn.get_JointPrimary() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataColumn.AllInstances.RemoveAtInt32">
            <summary>设置 MDataColumn.RemoveAt(Int32 index) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataColumn.AllInstances.RemoveMCellStruct">
            <summary>设置 MDataColumn.Remove(MCellStruct item) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataColumn.AllInstances.RemoveRangeInt32Int32">
            <summary>设置 MDataColumn.RemoveRange(Int32 index, Int32 count) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataColumn.AllInstances.RemoveString">
            <summary>设置 MDataColumn.Remove(String columnName) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataColumn.AllInstances.SetOrdinalStringInt32">
            <summary>设置 MDataColumn.SetOrdinal(String columnName, Int32 ordinal) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataColumn.AllInstances.SetValueStringObject">
            <summary>设置 MDataColumn.SetValue(String columnName, Object value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataColumn.AllInstances.SystemCollectionsGenericICollectionCYQDataTableMCellStructCopyToMCellStructArrayInt32">
            <summary>设置 MDataColumn.System.Collections.Generic.ICollection&lt;CYQ.Data.Table.MCellStruct&gt;.CopyTo(MCellStruct[] array, Int32 arrayIndex) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataColumn.AllInstances.SystemCollectionsGenericIEnumerableCYQDataTableMCellStructGetEnumerator">
            <summary>设置 MDataColumn.System.Collections.Generic.IEnumerable&lt;CYQ.Data.Table.MCellStruct&gt;.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataColumn.AllInstances.SystemCollectionsGenericIListCYQDataTableMCellStructIndexOfMCellStruct">
            <summary>设置 MDataColumn.System.Collections.Generic.IList&lt;CYQ.Data.Table.MCellStruct&gt;.IndexOf(MCellStruct item) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataColumn.AllInstances.SystemCollectionsIEnumerableGetEnumerator">
            <summary>设置 MDataColumn.System.Collections.IEnumerable.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataColumn.AllInstances.TableGet">
            <summary>设置 MDataColumn.get_Table() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataColumn.AllInstances.TableNameGet">
            <summary>设置 MDataColumn.get_TableName() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataColumn.AllInstances.TableNameSetString">
            <summary>设置 MDataColumn.set_TableName(String value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataColumn.AllInstances.ToJsonBoolean">
            <summary>设置 MDataColumn.ToJson(Boolean isFullSchema) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataColumn.AllInstances.ToRowString">
            <summary>设置 MDataColumn.ToRow(String tableName) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataColumn.AllInstances.ToTable">
            <summary>设置 MDataColumn.ToTable() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataColumn.AllInstances.WriteSchemaString">
            <summary>设置 MDataColumn.WriteSchema(String fileName) 的 填充码</summary>
        </member>
        <member name="T:CYQ.Data.Table.Fakes.ShimMDataRow">
            <summary>CYQ.Data.Table.MDataRow 的填充码类型</summary>
        </member>
        <member name="M:CYQ.Data.Table.Fakes.ShimMDataRow.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:CYQ.Data.Table.Fakes.ShimMDataRow.#ctor(CYQ.Data.Table.MDataRow)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:CYQ.Data.Table.Fakes.ShimMDataRow.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:CYQ.Data.Table.Fakes.ShimMDataRow.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:CYQ.Data.Table.Fakes.ShimMDataRow.Bind(System.ComponentModel.ICustomTypeDescriptor)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:CYQ.Data.Table.Fakes.ShimMDataRow.Bind(System.Data.IDataRecord)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:CYQ.Data.Table.Fakes.ShimMDataRow.Bind(System.Collections.IEnumerable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:CYQ.Data.Table.Fakes.ShimMDataRow.Bind(System.Collections.Generic.ICollection{CYQ.Data.Table.MDataCell})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:CYQ.Data.Table.Fakes.ShimMDataRow.Bind(System.Collections.Generic.IEnumerable{CYQ.Data.Table.MDataCell})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:CYQ.Data.Table.Fakes.ShimMDataRow.Bind(System.Collections.Generic.IList{CYQ.Data.Table.MDataCell})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:CYQ.Data.Table.Fakes.ShimMDataRow.GetOf1Object``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Object,``0})">
            <summary>设置 MDataRow.Get(Object key) 的 填充码</summary>
        </member>
        <member name="M:CYQ.Data.Table.Fakes.ShimMDataRow.GetOf1ObjectM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Object,``0,``0})">
            <summary>设置 MDataRow.Get(Object key, !!0 defaultValue) 的 填充码</summary>
        </member>
        <member name="M:CYQ.Data.Table.Fakes.ShimMDataRow.ToEntityOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0})">
            <summary>设置 MDataRow.ToEntity() 的 填充码</summary>
        </member>
        <member name="M:CYQ.Data.Table.Fakes.ShimMDataRow.ToEntityOf1Boolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Boolean,``0})">
            <summary>设置 MDataRow.ToEntity(Boolean tIsOrmBase) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRow.AddMDataCell">
            <summary>设置 MDataRow.Add(MDataCell cell) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRow.AddStringObject">
            <summary>设置 MDataRow.Add(String columnName, Object value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRow.AddStringSqlDbTypeObject">
            <summary>设置 MDataRow.Add(String columnName, SqlDbType sqlType, Object value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRow.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRow.CellListGet">
            <summary>设置 MDataRow.get_CellList() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRow.CellListSetListOfMDataCell">
            <summary>设置 MDataRow.set_CellList(List`1&lt;MDataCell&gt; value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRow.Clear">
            <summary>设置 MDataRow.Clear() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRow.Clone">
            <summary>设置 MDataRow.Clone() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRow.ColumnsGet">
            <summary>设置 MDataRow.get_Columns() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRow.ConnGet">
            <summary>设置 MDataRow.get_Conn() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRow.ConnSetString">
            <summary>设置 MDataRow.set_Conn(String value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRow.Constructor">
            <summary>设置 MDataRow.MDataRow() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRow.ConstructorMDataColumn">
            <summary>设置 MDataRow.MDataRow(MDataColumn mdc) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRow.ConstructorMDataTable">
            <summary>设置 MDataRow.MDataRow(MDataTable dt) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRow.ContainsMDataCell">
            <summary>设置 MDataRow.Contains(MDataCell item) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRow.CountGet">
            <summary>设置 MDataRow.get_Count() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRow.Create">
            <summary>设置 MDataRow.Create() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRow.CreateFromObject">
            <summary>设置 MDataRow.CreateFrom(Object anyObj) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRow.DynamicDataGet">
            <summary>设置 MDataRow.get_DynamicData() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRow.DynamicDataSetObject">
            <summary>设置 MDataRow.set_DynamicData(Object value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRow.FieldCountSystemDataIDataRecordget">
            <summary>设置 MDataRow.System.Data.IDataRecord.get_FieldCount() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRow.GetItemValueInt32">
            <summary>设置 MDataRow.GetItemValue(Int32 index) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRow.GetItemValueString">
            <summary>设置 MDataRow.GetItemValue(String index) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRow.GetItemValues">
            <summary>设置 MDataRow.GetItemValues() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRow.GetState">
            <summary>设置 MDataRow.GetState() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRow.GetStateBoolean">
            <summary>设置 MDataRow.GetState(Boolean ignorePrimaryKey) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRow.ImplicitOpDataRowMDataRow">
            <summary>设置 MDataRow.op_Implicit(DataRow row) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRow.InsertInt32MDataCell">
            <summary>设置 MDataRow.Insert(Int32 index, MDataCell cell) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRow.IsReadOnlySystemCollectionsGenericICollectionCYQDataTableMDataCellget">
            <summary>设置 MDataRow.System.Collections.Generic.ICollection&lt;CYQ.Data.Table.MDataCell&gt;.get_IsReadOnly() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRow.ItemArrayGet">
            <summary>设置 MDataRow.get_ItemArray() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRow.ItemGetInt32">
            <summary>设置 MDataRow.get_Item(Int32 index) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRow.ItemGetObject">
            <summary>设置 MDataRow.get_Item(Object field) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRow.ItemGetString">
            <summary>设置 MDataRow.get_Item(String key) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRow.ItemSetInt32MDataCell">
            <summary>设置 MDataRow.set_Item(Int32 index, MDataCell value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRow.ItemSystemDataIDataRecordgetInt32">
            <summary>设置 MDataRow.System.Data.IDataRecord.get_Item(Int32 i) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRow.ItemSystemDataIDataRecordgetString">
            <summary>设置 MDataRow.System.Data.IDataRecord.get_Item(String name) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRow.JointPrimaryCellGet">
            <summary>设置 MDataRow.get_JointPrimaryCell() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRow.LoadFrom">
            <summary>设置 MDataRow.LoadFrom() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRow.LoadFromBooleanObjectArray">
            <summary>设置 MDataRow.LoadFrom(Boolean isWeb, Object[] prefixOrParentControl) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRow.LoadFromIEnumerable">
            <summary>设置 MDataRow.LoadFrom(IEnumerable dic) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRow.LoadFromMDataRow">
            <summary>设置 MDataRow.LoadFrom(MDataRow row) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRow.LoadFromMDataRowRowOpBoolean">
            <summary>设置 MDataRow.LoadFrom(MDataRow row, RowOp rowOp, Boolean isAllowAppendColumn) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRow.LoadFromMDataRowRowOpBooleanBoolean">
            <summary>设置 MDataRow.LoadFrom(MDataRow row, RowOp rowOp, Boolean isAllowAppendColumn, Boolean isWithValueState) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRow.LoadFromObject">
            <summary>设置 MDataRow.LoadFrom(Object entity) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRow.LoadFromObjectArray">
            <summary>设置 MDataRow.LoadFrom(Object[] values) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRow.LoadFromObjectBreakOp">
            <summary>设置 MDataRow.LoadFrom(Object entity, BreakOp op) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRow.LoadFromObjectBreakOpInt32">
            <summary>设置 MDataRow.LoadFrom(Object entity, BreakOp op, Int32 initState) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRow.LoadFromString">
            <summary>设置 MDataRow.LoadFrom(String json) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRow.LoadFromStringEscapeOp">
            <summary>设置 MDataRow.LoadFrom(String json, EscapeOp op) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRow.LoadFromStringEscapeOpBreakOp">
            <summary>设置 MDataRow.LoadFrom(String json, EscapeOp op, BreakOp breakOp) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRow.PrimaryCellGet">
            <summary>设置 MDataRow.get_PrimaryCell() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRow.RemoveAtInt32">
            <summary>设置 MDataRow.RemoveAt(Int32 index) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRow.RemoveMDataCell">
            <summary>设置 MDataRow.Remove(MDataCell item) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRow.RemoveString">
            <summary>设置 MDataRow.Remove(String columnName) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRow.RowErrorGet">
            <summary>设置 MDataRow.get_RowError() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRow.RowErrorSetString">
            <summary>设置 MDataRow.set_RowError(String value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRow.SetObjectObject">
            <summary>设置 MDataRow.Set(Object key, Object value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRow.SetObjectObjectInt32">
            <summary>设置 MDataRow.Set(Object key, Object value, Int32 state) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRow.SetState">
            <summary>设置 MDataRow.SetState() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRow.SetStateInt32">
            <summary>设置 MDataRow.SetState(Int32 state) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRow.SetStateInt32BreakOp">
            <summary>设置 MDataRow.SetState(Int32 state, BreakOp op) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRow.SetStateInt32BreakOpMDataCell">
            <summary>设置 MDataRow.SetState(Int32 state, BreakOp op, MDataCell cell) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRow.SetStateInt32BreakOpString">
            <summary>设置 MDataRow.SetState(Int32 state, BreakOp op, String columns) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRow.SetToAllObjectArray">
            <summary>设置 MDataRow.SetToAll(Object[] parentControls) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRow.SetToAllStringObjectArray">
            <summary>设置 MDataRow.SetToAll(String autoPrefix, Object[] parentControls) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRow.SetToEntityObject">
            <summary>设置 MDataRow.SetToEntity(Object obj) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRow.SetToEntityObjectRowOp">
            <summary>设置 MDataRow.SetToEntity(Object obj, RowOp op) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRow.SetsObjectObjectArray">
            <summary>设置 MDataRow.Sets(Object startKey, Object[] values) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRow.SystemCollectionsGenericICollectionCYQDataTableMDataCellCopyToMDataCellArrayInt32">
            <summary>设置 MDataRow.System.Collections.Generic.ICollection&lt;CYQ.Data.Table.MDataCell&gt;.CopyTo(MDataCell[] array, Int32 arrayIndex) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRow.SystemCollectionsGenericIEnumerableCYQDataTableMDataCellGetEnumerator">
            <summary>设置 MDataRow.System.Collections.Generic.IEnumerable&lt;CYQ.Data.Table.MDataCell&gt;.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRow.SystemCollectionsGenericIListCYQDataTableMDataCellIndexOfMDataCell">
            <summary>设置 MDataRow.System.Collections.Generic.IList&lt;CYQ.Data.Table.MDataCell&gt;.IndexOf(MDataCell item) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRow.SystemCollectionsIEnumerableGetEnumerator">
            <summary>设置 MDataRow.System.Collections.IEnumerable.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRow.SystemComponentModelICustomTypeDescriptorGetAttributes">
            <summary>设置 MDataRow.System.ComponentModel.ICustomTypeDescriptor.GetAttributes() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRow.SystemComponentModelICustomTypeDescriptorGetClassName">
            <summary>设置 MDataRow.System.ComponentModel.ICustomTypeDescriptor.GetClassName() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRow.SystemComponentModelICustomTypeDescriptorGetComponentName">
            <summary>设置 MDataRow.System.ComponentModel.ICustomTypeDescriptor.GetComponentName() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRow.SystemComponentModelICustomTypeDescriptorGetConverter">
            <summary>设置 MDataRow.System.ComponentModel.ICustomTypeDescriptor.GetConverter() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRow.SystemComponentModelICustomTypeDescriptorGetDefaultEvent">
            <summary>设置 MDataRow.System.ComponentModel.ICustomTypeDescriptor.GetDefaultEvent() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRow.SystemComponentModelICustomTypeDescriptorGetDefaultProperty">
            <summary>设置 MDataRow.System.ComponentModel.ICustomTypeDescriptor.GetDefaultProperty() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRow.SystemComponentModelICustomTypeDescriptorGetEvents">
            <summary>设置 MDataRow.System.ComponentModel.ICustomTypeDescriptor.GetEvents() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRow.SystemComponentModelICustomTypeDescriptorGetEventsAttributeArray">
            <summary>设置 MDataRow.System.ComponentModel.ICustomTypeDescriptor.GetEvents(Attribute[] attributes) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRow.SystemComponentModelICustomTypeDescriptorGetProperties">
            <summary>设置 MDataRow.System.ComponentModel.ICustomTypeDescriptor.GetProperties() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRow.SystemComponentModelICustomTypeDescriptorGetPropertiesAttributeArray">
            <summary>设置 MDataRow.System.ComponentModel.ICustomTypeDescriptor.GetProperties(Attribute[] attributes) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRow.SystemComponentModelICustomTypeDescriptorGetPropertyOwnerPropertyDescriptor">
            <summary>设置 MDataRow.System.ComponentModel.ICustomTypeDescriptor.GetPropertyOwner(PropertyDescriptor pd) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRow.SystemDataIDataRecordGetBooleanInt32">
            <summary>设置 MDataRow.System.Data.IDataRecord.GetBoolean(Int32 i) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRow.SystemDataIDataRecordGetByteInt32">
            <summary>设置 MDataRow.System.Data.IDataRecord.GetByte(Int32 i) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRow.SystemDataIDataRecordGetBytesInt32Int64ByteArrayInt32Int32">
            <summary>设置 MDataRow.System.Data.IDataRecord.GetBytes(Int32 i, Int64 fieldOffset, Byte[] buffer, Int32 bufferoffset, Int32 length) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRow.SystemDataIDataRecordGetCharInt32">
            <summary>设置 MDataRow.System.Data.IDataRecord.GetChar(Int32 i) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRow.SystemDataIDataRecordGetCharsInt32Int64CharArrayInt32Int32">
            <summary>设置 MDataRow.System.Data.IDataRecord.GetChars(Int32 i, Int64 fieldoffset, Char[] buffer, Int32 bufferoffset, Int32 length) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRow.SystemDataIDataRecordGetDataInt32">
            <summary>设置 MDataRow.System.Data.IDataRecord.GetData(Int32 i) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRow.SystemDataIDataRecordGetDataTypeNameInt32">
            <summary>设置 MDataRow.System.Data.IDataRecord.GetDataTypeName(Int32 i) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRow.SystemDataIDataRecordGetDateTimeInt32">
            <summary>设置 MDataRow.System.Data.IDataRecord.GetDateTime(Int32 i) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRow.SystemDataIDataRecordGetDecimalInt32">
            <summary>设置 MDataRow.System.Data.IDataRecord.GetDecimal(Int32 i) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRow.SystemDataIDataRecordGetDoubleInt32">
            <summary>设置 MDataRow.System.Data.IDataRecord.GetDouble(Int32 i) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRow.SystemDataIDataRecordGetFloatInt32">
            <summary>设置 MDataRow.System.Data.IDataRecord.GetFloat(Int32 i) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRow.SystemDataIDataRecordGetGuidInt32">
            <summary>设置 MDataRow.System.Data.IDataRecord.GetGuid(Int32 i) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRow.SystemDataIDataRecordGetInt16Int32">
            <summary>设置 MDataRow.System.Data.IDataRecord.GetInt16(Int32 i) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRow.SystemDataIDataRecordGetInt32Int32">
            <summary>设置 MDataRow.System.Data.IDataRecord.GetInt32(Int32 i) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRow.SystemDataIDataRecordGetInt64Int32">
            <summary>设置 MDataRow.System.Data.IDataRecord.GetInt64(Int32 i) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRow.SystemDataIDataRecordGetNameInt32">
            <summary>设置 MDataRow.System.Data.IDataRecord.GetName(Int32 i) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRow.SystemDataIDataRecordGetOrdinalString">
            <summary>设置 MDataRow.System.Data.IDataRecord.GetOrdinal(String name) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRow.SystemDataIDataRecordGetStringInt32">
            <summary>设置 MDataRow.System.Data.IDataRecord.GetString(Int32 i) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRow.SystemDataIDataRecordGetValueInt32">
            <summary>设置 MDataRow.System.Data.IDataRecord.GetValue(Int32 i) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRow.SystemDataIDataRecordGetValuesObjectArray">
            <summary>设置 MDataRow.System.Data.IDataRecord.GetValues(Object[] values) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRow.SystemDataIDataRecordIsDBNullInt32">
            <summary>设置 MDataRow.System.Data.IDataRecord.IsDBNull(Int32 i) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRow.TableGet">
            <summary>设置 MDataRow.get_Table() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRow.TableNameGet">
            <summary>设置 MDataRow.get_TableName() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRow.TableNameSetString">
            <summary>设置 MDataRow.set_TableName(String value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRow.TableSetMDataTable">
            <summary>设置 MDataRow.set_Table(MDataTable value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRow.ToJson">
            <summary>设置 MDataRow.ToJson() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRow.ToJsonBoolean">
            <summary>设置 MDataRow.ToJson(Boolean isConvertNameToLower) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRow.ToJsonRowOp">
            <summary>设置 MDataRow.ToJson(RowOp op) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRow.ToJsonRowOpBoolean">
            <summary>设置 MDataRow.ToJson(RowOp op, Boolean isConvertNameToLower) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRow.ToJsonRowOpBooleanEscapeOp">
            <summary>设置 MDataRow.ToJson(RowOp op, Boolean isConvertNameToLower, EscapeOp escapeOp) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRow.ToTable">
            <summary>设置 MDataRow.ToTable() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRow.ToTableBoolean">
            <summary>设置 MDataRow.ToTable(Boolean onlyData) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRow.ToXmlBoolean">
            <summary>设置 MDataRow.ToXml(Boolean isConvertNameToLower) 的 填充码</summary>
        </member>
        <member name="T:CYQ.Data.Table.Fakes.ShimMDataRow.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:CYQ.Data.Table.Fakes.ShimMDataRow.AllInstances.GetOf1Object``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{CYQ.Data.Table.MDataRow,System.Object,``0})">
            <summary>设置 MDataRow.Get(Object key) 的 填充码</summary>
        </member>
        <member name="M:CYQ.Data.Table.Fakes.ShimMDataRow.AllInstances.GetOf1ObjectM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{CYQ.Data.Table.MDataRow,System.Object,``0,``0})">
            <summary>设置 MDataRow.Get(Object key, !!0 defaultValue) 的 填充码</summary>
        </member>
        <member name="M:CYQ.Data.Table.Fakes.ShimMDataRow.AllInstances.ToEntityOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{CYQ.Data.Table.MDataRow,``0})">
            <summary>设置 MDataRow.ToEntity() 的 填充码</summary>
        </member>
        <member name="M:CYQ.Data.Table.Fakes.ShimMDataRow.AllInstances.ToEntityOf1Boolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{CYQ.Data.Table.MDataRow,System.Boolean,``0})">
            <summary>设置 MDataRow.ToEntity(Boolean tIsOrmBase) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRow.AllInstances.AddMDataCell">
            <summary>设置 MDataRow.Add(MDataCell cell) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRow.AllInstances.AddStringObject">
            <summary>设置 MDataRow.Add(String columnName, Object value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRow.AllInstances.AddStringSqlDbTypeObject">
            <summary>设置 MDataRow.Add(String columnName, SqlDbType sqlType, Object value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRow.AllInstances.CellListGet">
            <summary>设置 MDataRow.get_CellList() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRow.AllInstances.CellListSetListOfMDataCell">
            <summary>设置 MDataRow.set_CellList(List`1&lt;MDataCell&gt; value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRow.AllInstances.Clear">
            <summary>设置 MDataRow.Clear() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRow.AllInstances.Clone">
            <summary>设置 MDataRow.Clone() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRow.AllInstances.ColumnsGet">
            <summary>设置 MDataRow.get_Columns() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRow.AllInstances.ConnGet">
            <summary>设置 MDataRow.get_Conn() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRow.AllInstances.ConnSetString">
            <summary>设置 MDataRow.set_Conn(String value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRow.AllInstances.ContainsMDataCell">
            <summary>设置 MDataRow.Contains(MDataCell item) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRow.AllInstances.CountGet">
            <summary>设置 MDataRow.get_Count() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRow.AllInstances.Create">
            <summary>设置 MDataRow.Create() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRow.AllInstances.DynamicDataGet">
            <summary>设置 MDataRow.get_DynamicData() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRow.AllInstances.DynamicDataSetObject">
            <summary>设置 MDataRow.set_DynamicData(Object value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRow.AllInstances.FieldCountSystemDataIDataRecordget">
            <summary>设置 MDataRow.System.Data.IDataRecord.get_FieldCount() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRow.AllInstances.GetItemValueInt32">
            <summary>设置 MDataRow.GetItemValue(Int32 index) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRow.AllInstances.GetItemValueString">
            <summary>设置 MDataRow.GetItemValue(String index) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRow.AllInstances.GetItemValues">
            <summary>设置 MDataRow.GetItemValues() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRow.AllInstances.GetState">
            <summary>设置 MDataRow.GetState() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRow.AllInstances.GetStateBoolean">
            <summary>设置 MDataRow.GetState(Boolean ignorePrimaryKey) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRow.AllInstances.InsertInt32MDataCell">
            <summary>设置 MDataRow.Insert(Int32 index, MDataCell cell) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRow.AllInstances.IsReadOnlySystemCollectionsGenericICollectionCYQDataTableMDataCellget">
            <summary>设置 MDataRow.System.Collections.Generic.ICollection&lt;CYQ.Data.Table.MDataCell&gt;.get_IsReadOnly() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRow.AllInstances.ItemArrayGet">
            <summary>设置 MDataRow.get_ItemArray() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRow.AllInstances.ItemGetInt32">
            <summary>设置 MDataRow.get_Item(Int32 index) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRow.AllInstances.ItemGetObject">
            <summary>设置 MDataRow.get_Item(Object field) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRow.AllInstances.ItemGetString">
            <summary>设置 MDataRow.get_Item(String key) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRow.AllInstances.ItemSetInt32MDataCell">
            <summary>设置 MDataRow.set_Item(Int32 index, MDataCell value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRow.AllInstances.ItemSystemDataIDataRecordgetInt32">
            <summary>设置 MDataRow.System.Data.IDataRecord.get_Item(Int32 i) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRow.AllInstances.ItemSystemDataIDataRecordgetString">
            <summary>设置 MDataRow.System.Data.IDataRecord.get_Item(String name) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRow.AllInstances.JointPrimaryCellGet">
            <summary>设置 MDataRow.get_JointPrimaryCell() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRow.AllInstances.LoadFrom">
            <summary>设置 MDataRow.LoadFrom() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRow.AllInstances.LoadFromBooleanObjectArray">
            <summary>设置 MDataRow.LoadFrom(Boolean isWeb, Object[] prefixOrParentControl) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRow.AllInstances.LoadFromIEnumerable">
            <summary>设置 MDataRow.LoadFrom(IEnumerable dic) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRow.AllInstances.LoadFromMDataRow">
            <summary>设置 MDataRow.LoadFrom(MDataRow row) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRow.AllInstances.LoadFromMDataRowRowOpBoolean">
            <summary>设置 MDataRow.LoadFrom(MDataRow row, RowOp rowOp, Boolean isAllowAppendColumn) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRow.AllInstances.LoadFromMDataRowRowOpBooleanBoolean">
            <summary>设置 MDataRow.LoadFrom(MDataRow row, RowOp rowOp, Boolean isAllowAppendColumn, Boolean isWithValueState) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRow.AllInstances.LoadFromObject">
            <summary>设置 MDataRow.LoadFrom(Object entity) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRow.AllInstances.LoadFromObjectArray">
            <summary>设置 MDataRow.LoadFrom(Object[] values) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRow.AllInstances.LoadFromObjectBreakOp">
            <summary>设置 MDataRow.LoadFrom(Object entity, BreakOp op) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRow.AllInstances.LoadFromObjectBreakOpInt32">
            <summary>设置 MDataRow.LoadFrom(Object entity, BreakOp op, Int32 initState) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRow.AllInstances.LoadFromString">
            <summary>设置 MDataRow.LoadFrom(String json) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRow.AllInstances.LoadFromStringEscapeOp">
            <summary>设置 MDataRow.LoadFrom(String json, EscapeOp op) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRow.AllInstances.LoadFromStringEscapeOpBreakOp">
            <summary>设置 MDataRow.LoadFrom(String json, EscapeOp op, BreakOp breakOp) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRow.AllInstances.PrimaryCellGet">
            <summary>设置 MDataRow.get_PrimaryCell() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRow.AllInstances.RemoveAtInt32">
            <summary>设置 MDataRow.RemoveAt(Int32 index) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRow.AllInstances.RemoveMDataCell">
            <summary>设置 MDataRow.Remove(MDataCell item) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRow.AllInstances.RemoveString">
            <summary>设置 MDataRow.Remove(String columnName) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRow.AllInstances.RowErrorGet">
            <summary>设置 MDataRow.get_RowError() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRow.AllInstances.RowErrorSetString">
            <summary>设置 MDataRow.set_RowError(String value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRow.AllInstances.SetObjectObject">
            <summary>设置 MDataRow.Set(Object key, Object value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRow.AllInstances.SetObjectObjectInt32">
            <summary>设置 MDataRow.Set(Object key, Object value, Int32 state) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRow.AllInstances.SetState">
            <summary>设置 MDataRow.SetState() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRow.AllInstances.SetStateInt32">
            <summary>设置 MDataRow.SetState(Int32 state) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRow.AllInstances.SetStateInt32BreakOp">
            <summary>设置 MDataRow.SetState(Int32 state, BreakOp op) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRow.AllInstances.SetStateInt32BreakOpMDataCell">
            <summary>设置 MDataRow.SetState(Int32 state, BreakOp op, MDataCell cell) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRow.AllInstances.SetStateInt32BreakOpString">
            <summary>设置 MDataRow.SetState(Int32 state, BreakOp op, String columns) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRow.AllInstances.SetToAllObjectArray">
            <summary>设置 MDataRow.SetToAll(Object[] parentControls) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRow.AllInstances.SetToAllStringObjectArray">
            <summary>设置 MDataRow.SetToAll(String autoPrefix, Object[] parentControls) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRow.AllInstances.SetToEntityObject">
            <summary>设置 MDataRow.SetToEntity(Object obj) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRow.AllInstances.SetToEntityObjectRowOp">
            <summary>设置 MDataRow.SetToEntity(Object obj, RowOp op) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRow.AllInstances.SetsObjectObjectArray">
            <summary>设置 MDataRow.Sets(Object startKey, Object[] values) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRow.AllInstances.SystemCollectionsGenericICollectionCYQDataTableMDataCellCopyToMDataCellArrayInt32">
            <summary>设置 MDataRow.System.Collections.Generic.ICollection&lt;CYQ.Data.Table.MDataCell&gt;.CopyTo(MDataCell[] array, Int32 arrayIndex) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRow.AllInstances.SystemCollectionsGenericIEnumerableCYQDataTableMDataCellGetEnumerator">
            <summary>设置 MDataRow.System.Collections.Generic.IEnumerable&lt;CYQ.Data.Table.MDataCell&gt;.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRow.AllInstances.SystemCollectionsGenericIListCYQDataTableMDataCellIndexOfMDataCell">
            <summary>设置 MDataRow.System.Collections.Generic.IList&lt;CYQ.Data.Table.MDataCell&gt;.IndexOf(MDataCell item) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRow.AllInstances.SystemCollectionsIEnumerableGetEnumerator">
            <summary>设置 MDataRow.System.Collections.IEnumerable.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRow.AllInstances.SystemComponentModelICustomTypeDescriptorGetAttributes">
            <summary>设置 MDataRow.System.ComponentModel.ICustomTypeDescriptor.GetAttributes() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRow.AllInstances.SystemComponentModelICustomTypeDescriptorGetClassName">
            <summary>设置 MDataRow.System.ComponentModel.ICustomTypeDescriptor.GetClassName() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRow.AllInstances.SystemComponentModelICustomTypeDescriptorGetComponentName">
            <summary>设置 MDataRow.System.ComponentModel.ICustomTypeDescriptor.GetComponentName() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRow.AllInstances.SystemComponentModelICustomTypeDescriptorGetConverter">
            <summary>设置 MDataRow.System.ComponentModel.ICustomTypeDescriptor.GetConverter() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRow.AllInstances.SystemComponentModelICustomTypeDescriptorGetDefaultEvent">
            <summary>设置 MDataRow.System.ComponentModel.ICustomTypeDescriptor.GetDefaultEvent() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRow.AllInstances.SystemComponentModelICustomTypeDescriptorGetDefaultProperty">
            <summary>设置 MDataRow.System.ComponentModel.ICustomTypeDescriptor.GetDefaultProperty() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRow.AllInstances.SystemComponentModelICustomTypeDescriptorGetEvents">
            <summary>设置 MDataRow.System.ComponentModel.ICustomTypeDescriptor.GetEvents() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRow.AllInstances.SystemComponentModelICustomTypeDescriptorGetEventsAttributeArray">
            <summary>设置 MDataRow.System.ComponentModel.ICustomTypeDescriptor.GetEvents(Attribute[] attributes) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRow.AllInstances.SystemComponentModelICustomTypeDescriptorGetProperties">
            <summary>设置 MDataRow.System.ComponentModel.ICustomTypeDescriptor.GetProperties() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRow.AllInstances.SystemComponentModelICustomTypeDescriptorGetPropertiesAttributeArray">
            <summary>设置 MDataRow.System.ComponentModel.ICustomTypeDescriptor.GetProperties(Attribute[] attributes) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRow.AllInstances.SystemComponentModelICustomTypeDescriptorGetPropertyOwnerPropertyDescriptor">
            <summary>设置 MDataRow.System.ComponentModel.ICustomTypeDescriptor.GetPropertyOwner(PropertyDescriptor pd) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRow.AllInstances.SystemDataIDataRecordGetBooleanInt32">
            <summary>设置 MDataRow.System.Data.IDataRecord.GetBoolean(Int32 i) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRow.AllInstances.SystemDataIDataRecordGetByteInt32">
            <summary>设置 MDataRow.System.Data.IDataRecord.GetByte(Int32 i) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRow.AllInstances.SystemDataIDataRecordGetBytesInt32Int64ByteArrayInt32Int32">
            <summary>设置 MDataRow.System.Data.IDataRecord.GetBytes(Int32 i, Int64 fieldOffset, Byte[] buffer, Int32 bufferoffset, Int32 length) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRow.AllInstances.SystemDataIDataRecordGetCharInt32">
            <summary>设置 MDataRow.System.Data.IDataRecord.GetChar(Int32 i) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRow.AllInstances.SystemDataIDataRecordGetCharsInt32Int64CharArrayInt32Int32">
            <summary>设置 MDataRow.System.Data.IDataRecord.GetChars(Int32 i, Int64 fieldoffset, Char[] buffer, Int32 bufferoffset, Int32 length) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRow.AllInstances.SystemDataIDataRecordGetDataInt32">
            <summary>设置 MDataRow.System.Data.IDataRecord.GetData(Int32 i) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRow.AllInstances.SystemDataIDataRecordGetDataTypeNameInt32">
            <summary>设置 MDataRow.System.Data.IDataRecord.GetDataTypeName(Int32 i) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRow.AllInstances.SystemDataIDataRecordGetDateTimeInt32">
            <summary>设置 MDataRow.System.Data.IDataRecord.GetDateTime(Int32 i) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRow.AllInstances.SystemDataIDataRecordGetDecimalInt32">
            <summary>设置 MDataRow.System.Data.IDataRecord.GetDecimal(Int32 i) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRow.AllInstances.SystemDataIDataRecordGetDoubleInt32">
            <summary>设置 MDataRow.System.Data.IDataRecord.GetDouble(Int32 i) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRow.AllInstances.SystemDataIDataRecordGetFloatInt32">
            <summary>设置 MDataRow.System.Data.IDataRecord.GetFloat(Int32 i) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRow.AllInstances.SystemDataIDataRecordGetGuidInt32">
            <summary>设置 MDataRow.System.Data.IDataRecord.GetGuid(Int32 i) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRow.AllInstances.SystemDataIDataRecordGetInt16Int32">
            <summary>设置 MDataRow.System.Data.IDataRecord.GetInt16(Int32 i) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRow.AllInstances.SystemDataIDataRecordGetInt32Int32">
            <summary>设置 MDataRow.System.Data.IDataRecord.GetInt32(Int32 i) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRow.AllInstances.SystemDataIDataRecordGetInt64Int32">
            <summary>设置 MDataRow.System.Data.IDataRecord.GetInt64(Int32 i) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRow.AllInstances.SystemDataIDataRecordGetNameInt32">
            <summary>设置 MDataRow.System.Data.IDataRecord.GetName(Int32 i) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRow.AllInstances.SystemDataIDataRecordGetOrdinalString">
            <summary>设置 MDataRow.System.Data.IDataRecord.GetOrdinal(String name) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRow.AllInstances.SystemDataIDataRecordGetStringInt32">
            <summary>设置 MDataRow.System.Data.IDataRecord.GetString(Int32 i) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRow.AllInstances.SystemDataIDataRecordGetValueInt32">
            <summary>设置 MDataRow.System.Data.IDataRecord.GetValue(Int32 i) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRow.AllInstances.SystemDataIDataRecordGetValuesObjectArray">
            <summary>设置 MDataRow.System.Data.IDataRecord.GetValues(Object[] values) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRow.AllInstances.SystemDataIDataRecordIsDBNullInt32">
            <summary>设置 MDataRow.System.Data.IDataRecord.IsDBNull(Int32 i) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRow.AllInstances.TableGet">
            <summary>设置 MDataRow.get_Table() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRow.AllInstances.TableNameGet">
            <summary>设置 MDataRow.get_TableName() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRow.AllInstances.TableNameSetString">
            <summary>设置 MDataRow.set_TableName(String value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRow.AllInstances.TableSetMDataTable">
            <summary>设置 MDataRow.set_Table(MDataTable value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRow.AllInstances.ToJson">
            <summary>设置 MDataRow.ToJson() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRow.AllInstances.ToJsonBoolean">
            <summary>设置 MDataRow.ToJson(Boolean isConvertNameToLower) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRow.AllInstances.ToJsonRowOp">
            <summary>设置 MDataRow.ToJson(RowOp op) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRow.AllInstances.ToJsonRowOpBoolean">
            <summary>设置 MDataRow.ToJson(RowOp op, Boolean isConvertNameToLower) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRow.AllInstances.ToJsonRowOpBooleanEscapeOp">
            <summary>设置 MDataRow.ToJson(RowOp op, Boolean isConvertNameToLower, EscapeOp escapeOp) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRow.AllInstances.ToTable">
            <summary>设置 MDataRow.ToTable() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRow.AllInstances.ToTableBoolean">
            <summary>设置 MDataRow.ToTable(Boolean onlyData) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRow.AllInstances.ToXmlBoolean">
            <summary>设置 MDataRow.ToXml(Boolean isConvertNameToLower) 的 填充码</summary>
        </member>
        <member name="T:CYQ.Data.Table.Fakes.ShimMDataRowCollection">
            <summary>CYQ.Data.Table.MDataRowCollection 的填充码类型</summary>
        </member>
        <member name="M:CYQ.Data.Table.Fakes.ShimMDataRowCollection.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:CYQ.Data.Table.Fakes.ShimMDataRowCollection.#ctor(CYQ.Data.Table.MDataRowCollection)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:CYQ.Data.Table.Fakes.ShimMDataRowCollection.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:CYQ.Data.Table.Fakes.ShimMDataRowCollection.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:CYQ.Data.Table.Fakes.ShimMDataRowCollection.Bind(System.ComponentModel.IBindingList)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:CYQ.Data.Table.Fakes.ShimMDataRowCollection.Bind(System.Collections.ICollection)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:CYQ.Data.Table.Fakes.ShimMDataRowCollection.Bind(System.Collections.IEnumerable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:CYQ.Data.Table.Fakes.ShimMDataRowCollection.Bind(System.Collections.IList)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:CYQ.Data.Table.Fakes.ShimMDataRowCollection.Bind(System.Collections.Generic.ICollection{CYQ.Data.Table.MDataRow})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:CYQ.Data.Table.Fakes.ShimMDataRowCollection.Bind(System.Collections.Generic.IComparer{CYQ.Data.Table.MDataRow})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:CYQ.Data.Table.Fakes.ShimMDataRowCollection.Bind(System.Collections.Generic.IEnumerable{CYQ.Data.Table.MDataRow})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:CYQ.Data.Table.Fakes.ShimMDataRowCollection.Bind(System.Collections.Generic.IList{CYQ.Data.Table.MDataRow})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRowCollection.AddMDataRow">
            <summary>设置 MDataRowCollection.Add(MDataRow item) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRowCollection.AddMDataRowBoolean">
            <summary>设置 MDataRowCollection.Add(MDataRow item, Boolean resetState) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRowCollection.AddObjectArray">
            <summary>设置 MDataRowCollection.Add(Object[] values) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRowCollection.AddRangeIEnumerableOfMDataRow">
            <summary>设置 MDataRowCollection.AddRange(IEnumerable`1&lt;MDataRow&gt; collection) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRowCollection.AllowEditSystemComponentModelIBindingListget">
            <summary>设置 MDataRowCollection.System.ComponentModel.IBindingList.get_AllowEdit() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRowCollection.AllowNewSystemComponentModelIBindingListget">
            <summary>设置 MDataRowCollection.System.ComponentModel.IBindingList.get_AllowNew() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRowCollection.AllowRemoveSystemComponentModelIBindingListget">
            <summary>设置 MDataRowCollection.System.ComponentModel.IBindingList.get_AllowRemove() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRowCollection.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRowCollection.CheckErrorMDataRowIEnumerableOfMDataRow">
            <summary>设置 MDataRowCollection.CheckError(MDataRow item, IEnumerable`1&lt;MDataRow&gt; collection) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRowCollection.Clear">
            <summary>设置 MDataRowCollection.Clear() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRowCollection.CompareMDataRowMDataRow">
            <summary>设置 MDataRowCollection.Compare(MDataRow x, MDataRow y) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRowCollection.Constructor">
            <summary>设置 MDataRowCollection.MDataRowCollection() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRowCollection.ConstructorMDataTable">
            <summary>设置 MDataRowCollection.MDataRowCollection(MDataTable dt) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRowCollection.ContainsMDataRow">
            <summary>设置 MDataRowCollection.Contains(MDataRow item) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRowCollection.CountGet">
            <summary>设置 MDataRowCollection.get_Count() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRowCollection.CountSystemCollectionsICollectionget">
            <summary>设置 MDataRowCollection.System.Collections.ICollection.get_Count() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRowCollection.FindAllPredicateOfMDataRow">
            <summary>设置 MDataRowCollection.FindAll(Predicate`1&lt;MDataRow&gt; match) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRowCollection.ImplicitOpDataRowCollectionMDataRowCollection">
            <summary>设置 MDataRowCollection.op_Implicit(DataRowCollection rows) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRowCollection.ImplicitOpListOfMDataRowMDataRowCollection">
            <summary>设置 MDataRowCollection.op_Implicit(List`1&lt;MDataRow&gt; rows) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRowCollection.InsertInt32MDataRow">
            <summary>设置 MDataRowCollection.Insert(Int32 index, MDataRow item) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRowCollection.InsertRangeInt32IEnumerableOfMDataRow">
            <summary>设置 MDataRowCollection.InsertRange(Int32 index, IEnumerable`1&lt;MDataRow&gt; collection) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRowCollection.IsFixedSizeSystemCollectionsIListget">
            <summary>设置 MDataRowCollection.System.Collections.IList.get_IsFixedSize() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRowCollection.IsReadOnlySystemCollectionsGenericICollectionCYQDataTableMDataRowget">
            <summary>设置 MDataRowCollection.System.Collections.Generic.ICollection&lt;CYQ.Data.Table.MDataRow&gt;.get_IsReadOnly() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRowCollection.IsReadOnlySystemCollectionsIListget">
            <summary>设置 MDataRowCollection.System.Collections.IList.get_IsReadOnly() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRowCollection.IsSortedSystemComponentModelIBindingListget">
            <summary>设置 MDataRowCollection.System.ComponentModel.IBindingList.get_IsSorted() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRowCollection.IsSynchronizedSystemCollectionsICollectionget">
            <summary>设置 MDataRowCollection.System.Collections.ICollection.get_IsSynchronized() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRowCollection.ItemGetInt32">
            <summary>设置 MDataRowCollection.get_Item(Int32 index) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRowCollection.ItemSetInt32MDataRow">
            <summary>设置 MDataRowCollection.set_Item(Int32 index, MDataRow value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRowCollection.ItemSystemCollectionsIListgetInt32">
            <summary>设置 MDataRowCollection.System.Collections.IList.get_Item(Int32 index) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRowCollection.ItemSystemCollectionsIListsetInt32Object">
            <summary>设置 MDataRowCollection.System.Collections.IList.set_Item(Int32 index, Object value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRowCollection.ListChangedSystemComponentModelIBindingListaddListChangedEventHandler">
            <summary>设置 MDataRowCollection.System.ComponentModel.IBindingList.add_ListChanged(ListChangedEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRowCollection.ListChangedSystemComponentModelIBindingListremoveListChangedEventHandler">
            <summary>设置 MDataRowCollection.System.ComponentModel.IBindingList.remove_ListChanged(ListChangedEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRowCollection.RemoveAtInt32">
            <summary>设置 MDataRowCollection.RemoveAt(Int32 index) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRowCollection.RemoveMDataRow">
            <summary>设置 MDataRowCollection.Remove(MDataRow item) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRowCollection.RemoveRangeInt32Int32">
            <summary>设置 MDataRowCollection.RemoveRange(Int32 index, Int32 count) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRowCollection.SortDirectionSystemComponentModelIBindingListget">
            <summary>设置 MDataRowCollection.System.ComponentModel.IBindingList.get_SortDirection() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRowCollection.SortPropertySystemComponentModelIBindingListget">
            <summary>设置 MDataRowCollection.System.ComponentModel.IBindingList.get_SortProperty() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRowCollection.SortString">
            <summary>设置 MDataRowCollection.Sort(String orderby) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRowCollection.StaticConstructor">
            <summary>设置 MDataRowCollection.MDataRowCollection() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRowCollection.SupportsChangeNotificationSystemComponentModelIBindingListget">
            <summary>设置 MDataRowCollection.System.ComponentModel.IBindingList.get_SupportsChangeNotification() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRowCollection.SupportsSearchingSystemComponentModelIBindingListget">
            <summary>设置 MDataRowCollection.System.ComponentModel.IBindingList.get_SupportsSearching() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRowCollection.SupportsSortingSystemComponentModelIBindingListget">
            <summary>设置 MDataRowCollection.System.ComponentModel.IBindingList.get_SupportsSorting() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRowCollection.SyncRootSystemCollectionsICollectionget">
            <summary>设置 MDataRowCollection.System.Collections.ICollection.get_SyncRoot() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRowCollection.SystemCollectionsGenericICollectionCYQDataTableMDataRowCopyToMDataRowArrayInt32">
            <summary>设置 MDataRowCollection.System.Collections.Generic.ICollection&lt;CYQ.Data.Table.MDataRow&gt;.CopyTo(MDataRow[] array, Int32 arrayIndex) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRowCollection.SystemCollectionsGenericIEnumerableCYQDataTableMDataRowGetEnumerator">
            <summary>设置 MDataRowCollection.System.Collections.Generic.IEnumerable&lt;CYQ.Data.Table.MDataRow&gt;.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRowCollection.SystemCollectionsGenericIListCYQDataTableMDataRowIndexOfMDataRow">
            <summary>设置 MDataRowCollection.System.Collections.Generic.IList&lt;CYQ.Data.Table.MDataRow&gt;.IndexOf(MDataRow item) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRowCollection.SystemCollectionsICollectionCopyToArrayInt32">
            <summary>设置 MDataRowCollection.System.Collections.ICollection.CopyTo(Array array, Int32 index) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRowCollection.SystemCollectionsIEnumerableGetEnumerator">
            <summary>设置 MDataRowCollection.System.Collections.IEnumerable.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRowCollection.SystemCollectionsIListAddObject">
            <summary>设置 MDataRowCollection.System.Collections.IList.Add(Object value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRowCollection.SystemCollectionsIListClear">
            <summary>设置 MDataRowCollection.System.Collections.IList.Clear() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRowCollection.SystemCollectionsIListContainsObject">
            <summary>设置 MDataRowCollection.System.Collections.IList.Contains(Object value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRowCollection.SystemCollectionsIListIndexOfObject">
            <summary>设置 MDataRowCollection.System.Collections.IList.IndexOf(Object value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRowCollection.SystemCollectionsIListInsertInt32Object">
            <summary>设置 MDataRowCollection.System.Collections.IList.Insert(Int32 index, Object value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRowCollection.SystemCollectionsIListRemoveAtInt32">
            <summary>设置 MDataRowCollection.System.Collections.IList.RemoveAt(Int32 index) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRowCollection.SystemCollectionsIListRemoveObject">
            <summary>设置 MDataRowCollection.System.Collections.IList.Remove(Object value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRowCollection.SystemComponentModelIBindingListAddIndexPropertyDescriptor">
            <summary>设置 MDataRowCollection.System.ComponentModel.IBindingList.AddIndex(PropertyDescriptor property) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRowCollection.SystemComponentModelIBindingListAddNew">
            <summary>设置 MDataRowCollection.System.ComponentModel.IBindingList.AddNew() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRowCollection.SystemComponentModelIBindingListApplySortPropertyDescriptorListSortDirection">
            <summary>设置 MDataRowCollection.System.ComponentModel.IBindingList.ApplySort(PropertyDescriptor property, ListSortDirection direction) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRowCollection.SystemComponentModelIBindingListFindPropertyDescriptorObject">
            <summary>设置 MDataRowCollection.System.ComponentModel.IBindingList.Find(PropertyDescriptor property, Object key) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRowCollection.SystemComponentModelIBindingListRemoveIndexPropertyDescriptor">
            <summary>设置 MDataRowCollection.System.ComponentModel.IBindingList.RemoveIndex(PropertyDescriptor property) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRowCollection.SystemComponentModelIBindingListRemoveSort">
            <summary>设置 MDataRowCollection.System.ComponentModel.IBindingList.RemoveSort() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRowCollection.TableGet">
            <summary>设置 MDataRowCollection.get_Table() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRowCollection.TableSetMDataTable">
            <summary>设置 MDataRowCollection.set_Table(MDataTable value) 的 填充码</summary>
        </member>
        <member name="T:CYQ.Data.Table.Fakes.ShimMDataRowCollection.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRowCollection.AllInstances.AddMDataRow">
            <summary>设置 MDataRowCollection.Add(MDataRow item) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRowCollection.AllInstances.AddMDataRowBoolean">
            <summary>设置 MDataRowCollection.Add(MDataRow item, Boolean resetState) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRowCollection.AllInstances.AddObjectArray">
            <summary>设置 MDataRowCollection.Add(Object[] values) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRowCollection.AllInstances.AddRangeIEnumerableOfMDataRow">
            <summary>设置 MDataRowCollection.AddRange(IEnumerable`1&lt;MDataRow&gt; collection) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRowCollection.AllInstances.AllowEditSystemComponentModelIBindingListget">
            <summary>设置 MDataRowCollection.System.ComponentModel.IBindingList.get_AllowEdit() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRowCollection.AllInstances.AllowNewSystemComponentModelIBindingListget">
            <summary>设置 MDataRowCollection.System.ComponentModel.IBindingList.get_AllowNew() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRowCollection.AllInstances.AllowRemoveSystemComponentModelIBindingListget">
            <summary>设置 MDataRowCollection.System.ComponentModel.IBindingList.get_AllowRemove() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRowCollection.AllInstances.CheckErrorMDataRowIEnumerableOfMDataRow">
            <summary>设置 MDataRowCollection.CheckError(MDataRow item, IEnumerable`1&lt;MDataRow&gt; collection) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRowCollection.AllInstances.Clear">
            <summary>设置 MDataRowCollection.Clear() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRowCollection.AllInstances.CompareMDataRowMDataRow">
            <summary>设置 MDataRowCollection.Compare(MDataRow x, MDataRow y) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRowCollection.AllInstances.ContainsMDataRow">
            <summary>设置 MDataRowCollection.Contains(MDataRow item) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRowCollection.AllInstances.CountGet">
            <summary>设置 MDataRowCollection.get_Count() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRowCollection.AllInstances.CountSystemCollectionsICollectionget">
            <summary>设置 MDataRowCollection.System.Collections.ICollection.get_Count() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRowCollection.AllInstances.FindAllPredicateOfMDataRow">
            <summary>设置 MDataRowCollection.FindAll(Predicate`1&lt;MDataRow&gt; match) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRowCollection.AllInstances.InsertInt32MDataRow">
            <summary>设置 MDataRowCollection.Insert(Int32 index, MDataRow item) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRowCollection.AllInstances.InsertRangeInt32IEnumerableOfMDataRow">
            <summary>设置 MDataRowCollection.InsertRange(Int32 index, IEnumerable`1&lt;MDataRow&gt; collection) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRowCollection.AllInstances.IsFixedSizeSystemCollectionsIListget">
            <summary>设置 MDataRowCollection.System.Collections.IList.get_IsFixedSize() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRowCollection.AllInstances.IsReadOnlySystemCollectionsGenericICollectionCYQDataTableMDataRowget">
            <summary>设置 MDataRowCollection.System.Collections.Generic.ICollection&lt;CYQ.Data.Table.MDataRow&gt;.get_IsReadOnly() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRowCollection.AllInstances.IsReadOnlySystemCollectionsIListget">
            <summary>设置 MDataRowCollection.System.Collections.IList.get_IsReadOnly() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRowCollection.AllInstances.IsSortedSystemComponentModelIBindingListget">
            <summary>设置 MDataRowCollection.System.ComponentModel.IBindingList.get_IsSorted() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRowCollection.AllInstances.IsSynchronizedSystemCollectionsICollectionget">
            <summary>设置 MDataRowCollection.System.Collections.ICollection.get_IsSynchronized() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRowCollection.AllInstances.ItemGetInt32">
            <summary>设置 MDataRowCollection.get_Item(Int32 index) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRowCollection.AllInstances.ItemSetInt32MDataRow">
            <summary>设置 MDataRowCollection.set_Item(Int32 index, MDataRow value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRowCollection.AllInstances.ItemSystemCollectionsIListgetInt32">
            <summary>设置 MDataRowCollection.System.Collections.IList.get_Item(Int32 index) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRowCollection.AllInstances.ItemSystemCollectionsIListsetInt32Object">
            <summary>设置 MDataRowCollection.System.Collections.IList.set_Item(Int32 index, Object value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRowCollection.AllInstances.ListChangedSystemComponentModelIBindingListaddListChangedEventHandler">
            <summary>设置 MDataRowCollection.System.ComponentModel.IBindingList.add_ListChanged(ListChangedEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRowCollection.AllInstances.ListChangedSystemComponentModelIBindingListremoveListChangedEventHandler">
            <summary>设置 MDataRowCollection.System.ComponentModel.IBindingList.remove_ListChanged(ListChangedEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRowCollection.AllInstances.RemoveAtInt32">
            <summary>设置 MDataRowCollection.RemoveAt(Int32 index) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRowCollection.AllInstances.RemoveMDataRow">
            <summary>设置 MDataRowCollection.Remove(MDataRow item) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRowCollection.AllInstances.RemoveRangeInt32Int32">
            <summary>设置 MDataRowCollection.RemoveRange(Int32 index, Int32 count) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRowCollection.AllInstances.SortDirectionSystemComponentModelIBindingListget">
            <summary>设置 MDataRowCollection.System.ComponentModel.IBindingList.get_SortDirection() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRowCollection.AllInstances.SortPropertySystemComponentModelIBindingListget">
            <summary>设置 MDataRowCollection.System.ComponentModel.IBindingList.get_SortProperty() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRowCollection.AllInstances.SortString">
            <summary>设置 MDataRowCollection.Sort(String orderby) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRowCollection.AllInstances.SupportsChangeNotificationSystemComponentModelIBindingListget">
            <summary>设置 MDataRowCollection.System.ComponentModel.IBindingList.get_SupportsChangeNotification() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRowCollection.AllInstances.SupportsSearchingSystemComponentModelIBindingListget">
            <summary>设置 MDataRowCollection.System.ComponentModel.IBindingList.get_SupportsSearching() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRowCollection.AllInstances.SupportsSortingSystemComponentModelIBindingListget">
            <summary>设置 MDataRowCollection.System.ComponentModel.IBindingList.get_SupportsSorting() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRowCollection.AllInstances.SyncRootSystemCollectionsICollectionget">
            <summary>设置 MDataRowCollection.System.Collections.ICollection.get_SyncRoot() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRowCollection.AllInstances.SystemCollectionsGenericICollectionCYQDataTableMDataRowCopyToMDataRowArrayInt32">
            <summary>设置 MDataRowCollection.System.Collections.Generic.ICollection&lt;CYQ.Data.Table.MDataRow&gt;.CopyTo(MDataRow[] array, Int32 arrayIndex) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRowCollection.AllInstances.SystemCollectionsGenericIEnumerableCYQDataTableMDataRowGetEnumerator">
            <summary>设置 MDataRowCollection.System.Collections.Generic.IEnumerable&lt;CYQ.Data.Table.MDataRow&gt;.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRowCollection.AllInstances.SystemCollectionsGenericIListCYQDataTableMDataRowIndexOfMDataRow">
            <summary>设置 MDataRowCollection.System.Collections.Generic.IList&lt;CYQ.Data.Table.MDataRow&gt;.IndexOf(MDataRow item) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRowCollection.AllInstances.SystemCollectionsICollectionCopyToArrayInt32">
            <summary>设置 MDataRowCollection.System.Collections.ICollection.CopyTo(Array array, Int32 index) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRowCollection.AllInstances.SystemCollectionsIEnumerableGetEnumerator">
            <summary>设置 MDataRowCollection.System.Collections.IEnumerable.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRowCollection.AllInstances.SystemCollectionsIListAddObject">
            <summary>设置 MDataRowCollection.System.Collections.IList.Add(Object value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRowCollection.AllInstances.SystemCollectionsIListClear">
            <summary>设置 MDataRowCollection.System.Collections.IList.Clear() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRowCollection.AllInstances.SystemCollectionsIListContainsObject">
            <summary>设置 MDataRowCollection.System.Collections.IList.Contains(Object value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRowCollection.AllInstances.SystemCollectionsIListIndexOfObject">
            <summary>设置 MDataRowCollection.System.Collections.IList.IndexOf(Object value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRowCollection.AllInstances.SystemCollectionsIListInsertInt32Object">
            <summary>设置 MDataRowCollection.System.Collections.IList.Insert(Int32 index, Object value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRowCollection.AllInstances.SystemCollectionsIListRemoveAtInt32">
            <summary>设置 MDataRowCollection.System.Collections.IList.RemoveAt(Int32 index) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRowCollection.AllInstances.SystemCollectionsIListRemoveObject">
            <summary>设置 MDataRowCollection.System.Collections.IList.Remove(Object value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRowCollection.AllInstances.SystemComponentModelIBindingListAddIndexPropertyDescriptor">
            <summary>设置 MDataRowCollection.System.ComponentModel.IBindingList.AddIndex(PropertyDescriptor property) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRowCollection.AllInstances.SystemComponentModelIBindingListAddNew">
            <summary>设置 MDataRowCollection.System.ComponentModel.IBindingList.AddNew() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRowCollection.AllInstances.SystemComponentModelIBindingListApplySortPropertyDescriptorListSortDirection">
            <summary>设置 MDataRowCollection.System.ComponentModel.IBindingList.ApplySort(PropertyDescriptor property, ListSortDirection direction) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRowCollection.AllInstances.SystemComponentModelIBindingListFindPropertyDescriptorObject">
            <summary>设置 MDataRowCollection.System.ComponentModel.IBindingList.Find(PropertyDescriptor property, Object key) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRowCollection.AllInstances.SystemComponentModelIBindingListRemoveIndexPropertyDescriptor">
            <summary>设置 MDataRowCollection.System.ComponentModel.IBindingList.RemoveIndex(PropertyDescriptor property) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRowCollection.AllInstances.SystemComponentModelIBindingListRemoveSort">
            <summary>设置 MDataRowCollection.System.ComponentModel.IBindingList.RemoveSort() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRowCollection.AllInstances.TableGet">
            <summary>设置 MDataRowCollection.get_Table() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataRowCollection.AllInstances.TableSetMDataTable">
            <summary>设置 MDataRowCollection.set_Table(MDataTable value) 的 填充码</summary>
        </member>
        <member name="T:CYQ.Data.Table.Fakes.ShimMDataTable">
            <summary>CYQ.Data.Table.MDataTable 的填充码类型</summary>
        </member>
        <member name="M:CYQ.Data.Table.Fakes.ShimMDataTable.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:CYQ.Data.Table.Fakes.ShimMDataTable.#ctor(CYQ.Data.Table.MDataTable)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:CYQ.Data.Table.Fakes.ShimMDataTable.AvgOf1Int32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Int32,``0})">
            <summary>设置 MDataTable.Avg(Int32 index) 的 填充码</summary>
        </member>
        <member name="M:CYQ.Data.Table.Fakes.ShimMDataTable.AvgOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0})">
            <summary>设置 MDataTable.Avg(String columnName) 的 填充码</summary>
        </member>
        <member name="M:CYQ.Data.Table.Fakes.ShimMDataTable.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:CYQ.Data.Table.Fakes.ShimMDataTable.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:CYQ.Data.Table.Fakes.ShimMDataTable.Bind(System.Data.IDataReader)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:CYQ.Data.Table.Fakes.ShimMDataTable.Bind(System.Data.IDataRecord)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:CYQ.Data.Table.Fakes.ShimMDataTable.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:CYQ.Data.Table.Fakes.ShimMDataTable.Bind(System.Collections.IEnumerable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:CYQ.Data.Table.Fakes.ShimMDataTable.GetColumnItemsOf1Int32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Int32,System.Collections.Generic.List{``0}})">
            <summary>设置 MDataTable.GetColumnItems(Int32 columnIndex) 的 填充码</summary>
        </member>
        <member name="M:CYQ.Data.Table.Fakes.ShimMDataTable.GetColumnItemsOf1Int32BreakOp``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Int32,CYQ.Data.Table.BreakOp,System.Collections.Generic.List{``0}})">
            <summary>设置 MDataTable.GetColumnItems(Int32 columnIndex, BreakOp op) 的 填充码</summary>
        </member>
        <member name="M:CYQ.Data.Table.Fakes.ShimMDataTable.GetColumnItemsOf1Int32BreakOpBoolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Int32,CYQ.Data.Table.BreakOp,System.Boolean,System.Collections.Generic.List{``0}})">
            <summary>设置 MDataTable.GetColumnItems(Int32 columnIndex, BreakOp op, Boolean isDistinct) 的 填充码</summary>
        </member>
        <member name="M:CYQ.Data.Table.Fakes.ShimMDataTable.GetColumnItemsOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.Collections.Generic.List{``0}})">
            <summary>设置 MDataTable.GetColumnItems(String columnName) 的 填充码</summary>
        </member>
        <member name="M:CYQ.Data.Table.Fakes.ShimMDataTable.GetColumnItemsOf1StringBreakOp``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,CYQ.Data.Table.BreakOp,System.Collections.Generic.List{``0}})">
            <summary>设置 MDataTable.GetColumnItems(String columnName, BreakOp op) 的 填充码</summary>
        </member>
        <member name="M:CYQ.Data.Table.Fakes.ShimMDataTable.GetColumnItemsOf1StringBreakOpBoolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,CYQ.Data.Table.BreakOp,System.Boolean,System.Collections.Generic.List{``0}})">
            <summary>设置 MDataTable.GetColumnItems(String columnName, BreakOp op, Boolean isDistinct) 的 填充码</summary>
        </member>
        <member name="M:CYQ.Data.Table.Fakes.ShimMDataTable.GetMinMaxValueOf1Int32Boolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Int32,System.Boolean,``0})">
            <summary>设置 MDataTable.GetMinMaxValue(Int32 index, Boolean isMin) 的 填充码</summary>
        </member>
        <member name="M:CYQ.Data.Table.Fakes.ShimMDataTable.MaxOf1Int32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Int32,``0})">
            <summary>设置 MDataTable.Max(Int32 index) 的 填充码</summary>
        </member>
        <member name="M:CYQ.Data.Table.Fakes.ShimMDataTable.MaxOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0})">
            <summary>设置 MDataTable.Max(String columnName) 的 填充码</summary>
        </member>
        <member name="M:CYQ.Data.Table.Fakes.ShimMDataTable.MinOf1Int32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Int32,``0})">
            <summary>设置 MDataTable.Min(Int32 index) 的 填充码</summary>
        </member>
        <member name="M:CYQ.Data.Table.Fakes.ShimMDataTable.MinOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0})">
            <summary>设置 MDataTable.Min(String columnName) 的 填充码</summary>
        </member>
        <member name="M:CYQ.Data.Table.Fakes.ShimMDataTable.SumOf1Int32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Int32,``0})">
            <summary>设置 MDataTable.Sum(Int32 index) 的 填充码</summary>
        </member>
        <member name="M:CYQ.Data.Table.Fakes.ShimMDataTable.SumOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0})">
            <summary>设置 MDataTable.Sum(String columnName) 的 填充码</summary>
        </member>
        <member name="M:CYQ.Data.Table.Fakes.ShimMDataTable.ToListOf1BooleanArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Boolean[],System.Collections.Generic.List{``0}})">
            <summary>设置 MDataTable.ToList(Boolean[] useEmit) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataTable.AcceptChangesAcceptOp">
            <summary>设置 MDataTable.AcceptChanges(AcceptOp op) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataTable.AcceptChangesAcceptOpIsolationLevel">
            <summary>设置 MDataTable.AcceptChanges(AcceptOp op, IsolationLevel tranLevel) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataTable.AcceptChangesAcceptOpIsolationLevelStringObjectArray">
            <summary>设置 MDataTable.AcceptChanges(AcceptOp op, IsolationLevel tranLevel, String newConn, Object[] jointPrimaryKeys) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataTable.AcceptChangesAcceptOpStringObjectArray">
            <summary>设置 MDataTable.AcceptChanges(AcceptOp op, String newConn, Object[] jointPrimaryKeys) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataTable.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataTable.BindObject">
            <summary>设置 MDataTable.Bind(Object control) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataTable.BindObjectString">
            <summary>设置 MDataTable.Bind(Object control, String nodeID) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataTable.Clone">
            <summary>设置 MDataTable.Clone() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataTable.ColumnsGet">
            <summary>设置 MDataTable.get_Columns() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataTable.ColumnsSetMDataColumn">
            <summary>设置 MDataTable.set_Columns(MDataColumn value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataTable.ConnGet">
            <summary>设置 MDataTable.get_Conn() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataTable.ConnSetString">
            <summary>设置 MDataTable.set_Conn(String value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataTable.Constructor">
            <summary>设置 MDataTable.MDataTable() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataTable.ConstructorString">
            <summary>设置 MDataTable.MDataTable(String tableName) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataTable.ConstructorStringMDataColumn">
            <summary>设置 MDataTable.MDataTable(String tableName, MDataColumn mdc) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataTable.CreateFromDbDataReader">
            <summary>设置 MDataTable.CreateFrom(DbDataReader sdr) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataTable.CreateFromNameObjectCollectionBase">
            <summary>设置 MDataTable.CreateFrom(NameObjectCollectionBase noc) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataTable.CreateFromObject">
            <summary>设置 MDataTable.CreateFrom(Object entityList) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataTable.CreateFromObjectBreakOp">
            <summary>设置 MDataTable.CreateFrom(Object entityList, BreakOp op) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataTable.CreateFromString">
            <summary>设置 MDataTable.CreateFrom(String jsonOrXml) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataTable.CreateFromStringMDataColumn">
            <summary>设置 MDataTable.CreateFrom(String jsonOrXml, MDataColumn mdc) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataTable.CreateFromStringMDataColumnEscapeOp">
            <summary>设置 MDataTable.CreateFrom(String jsonOrXml, MDataColumn mdc, EscapeOp op) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataTable.CreateFromXmlStringMDataColumn">
            <summary>设置 MDataTable.CreateFromXml(String xmlOrFileName, MDataColumn mdc) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataTable.DepthSystemDataIDataReaderget">
            <summary>设置 MDataTable.System.Data.IDataReader.get_Depth() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataTable.DescriptionGet">
            <summary>设置 MDataTable.get_Description() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataTable.DescriptionSetString">
            <summary>设置 MDataTable.set_Description(String value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataTable.Distinct">
            <summary>设置 MDataTable.Distinct() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataTable.DistinctMDataTableOut">
            <summary>设置 MDataTable.Distinct(MDataTable&amp; filterRows) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataTable.DynamicDataGet">
            <summary>设置 MDataTable.get_DynamicData() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataTable.DynamicDataSetObject">
            <summary>设置 MDataTable.set_DynamicData(Object value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataTable.FieldCountSystemDataIDataRecordget">
            <summary>设置 MDataTable.System.Data.IDataRecord.get_FieldCount() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataTable.FindAllObject">
            <summary>设置 MDataTable.FindAll(Object where) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataTable.FindRowObject">
            <summary>设置 MDataTable.FindRow(Object where) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataTable.GetChanges">
            <summary>设置 MDataTable.GetChanges() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataTable.GetChangesRowOp">
            <summary>设置 MDataTable.GetChanges(RowOp rowOp) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataTable.GetCountObject">
            <summary>设置 MDataTable.GetCount(Object where) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataTable.GetIndexObject">
            <summary>设置 MDataTable.GetIndex(Object where) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataTable.GetSchemaBoolean">
            <summary>设置 MDataTable.GetSchema(Boolean clone) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataTable.ImplicitOpDataTableMDataTable">
            <summary>设置 MDataTable.op_Implicit(DataTable dt) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataTable.ImplicitOpDbDataReaderMDataTable">
            <summary>设置 MDataTable.op_Implicit(DbDataReader sdr) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataTable.ImplicitOpListOfMDataRowMDataTable">
            <summary>设置 MDataTable.op_Implicit(List`1&lt;MDataRow&gt; rows) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataTable.ImplicitOpMDataRowCollectionMDataTable">
            <summary>设置 MDataTable.op_Implicit(MDataRowCollection rows) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataTable.ImplicitOpMDataRowMDataTable">
            <summary>设置 MDataTable.op_Implicit(MDataRow row) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataTable.InitStringMDataColumn">
            <summary>设置 MDataTable.Init(String tableName, MDataColumn mdc) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataTable.IsClosedSystemDataIDataReaderget">
            <summary>设置 MDataTable.System.Data.IDataReader.get_IsClosed() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataTable.ItemSystemDataIDataRecordgetInt32">
            <summary>设置 MDataTable.System.Data.IDataRecord.get_Item(Int32 i) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataTable.ItemSystemDataIDataRecordgetString">
            <summary>设置 MDataTable.System.Data.IDataRecord.get_Item(String name) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataTable.JoinMDataTableStringArray">
            <summary>设置 MDataTable.Join(MDataTable dt, String[] appendColumns) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataTable.JoinObjectStringStringArray">
            <summary>设置 MDataTable.Join(Object tableName, String joinOnName, String[] appendColumns) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataTable.JoinOnNameGet">
            <summary>设置 MDataTable.get_JoinOnName() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataTable.JoinOnNameSetString">
            <summary>设置 MDataTable.set_JoinOnName(String value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataTable.LoadMDataTableMCellStruct">
            <summary>设置 MDataTable.Load(MDataTable dt, MCellStruct primary) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataTable.LoadRowMDataRow">
            <summary>设置 MDataTable.LoadRow(MDataRow row) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataTable.MergeMDataTable">
            <summary>设置 MDataTable.Merge(MDataTable newTable) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataTable.NewRow">
            <summary>设置 MDataTable.NewRow() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataTable.NewRowBoolean">
            <summary>设置 MDataTable.NewRow(Boolean isAddToTable) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataTable.NewRowBooleanInt32">
            <summary>设置 MDataTable.NewRow(Boolean isAddToTable, Int32 index) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataTable.Pivot">
            <summary>设置 MDataTable.Pivot() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataTable.PivotStringStringString">
            <summary>设置 MDataTable.Pivot(String rowName, String colName, String valueName) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataTable.RecordsAffectedGet">
            <summary>设置 MDataTable.get_RecordsAffected() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataTable.RecordsAffectedSetInt32">
            <summary>设置 MDataTable.set_RecordsAffected(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataTable.RowsGet">
            <summary>设置 MDataTable.get_Rows() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataTable.SelectInt32Int32ObjectObjectArray">
            <summary>设置 MDataTable.Select(Int32 pageIndex, Int32 pageSize, Object where, Object[] selectColumns) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataTable.SelectInt32Object">
            <summary>设置 MDataTable.Select(Int32 topN, Object where) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataTable.SelectObject">
            <summary>设置 MDataTable.Select(Object where) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataTable.SetStateInt32">
            <summary>设置 MDataTable.SetState(Int32 state) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataTable.SetStateInt32BreakOp">
            <summary>设置 MDataTable.SetState(Int32 state, BreakOp op) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataTable.SplitObject">
            <summary>设置 MDataTable.Split(Object where) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataTable.SystemCollectionsIEnumerableGetEnumerator">
            <summary>设置 MDataTable.System.Collections.IEnumerable.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataTable.SystemDataIDataReaderClose">
            <summary>设置 MDataTable.System.Data.IDataReader.Close() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataTable.SystemDataIDataReaderGetSchemaTable">
            <summary>设置 MDataTable.System.Data.IDataReader.GetSchemaTable() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataTable.SystemDataIDataReaderNextResult">
            <summary>设置 MDataTable.System.Data.IDataReader.NextResult() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataTable.SystemDataIDataReaderRead">
            <summary>设置 MDataTable.System.Data.IDataReader.Read() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataTable.SystemDataIDataRecordGetBooleanInt32">
            <summary>设置 MDataTable.System.Data.IDataRecord.GetBoolean(Int32 i) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataTable.SystemDataIDataRecordGetByteInt32">
            <summary>设置 MDataTable.System.Data.IDataRecord.GetByte(Int32 i) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataTable.SystemDataIDataRecordGetBytesInt32Int64ByteArrayInt32Int32">
            <summary>设置 MDataTable.System.Data.IDataRecord.GetBytes(Int32 i, Int64 fieldOffset, Byte[] buffer, Int32 bufferoffset, Int32 length) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataTable.SystemDataIDataRecordGetCharInt32">
            <summary>设置 MDataTable.System.Data.IDataRecord.GetChar(Int32 i) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataTable.SystemDataIDataRecordGetCharsInt32Int64CharArrayInt32Int32">
            <summary>设置 MDataTable.System.Data.IDataRecord.GetChars(Int32 i, Int64 fieldoffset, Char[] buffer, Int32 bufferoffset, Int32 length) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataTable.SystemDataIDataRecordGetDataInt32">
            <summary>设置 MDataTable.System.Data.IDataRecord.GetData(Int32 i) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataTable.SystemDataIDataRecordGetDataTypeNameInt32">
            <summary>设置 MDataTable.System.Data.IDataRecord.GetDataTypeName(Int32 i) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataTable.SystemDataIDataRecordGetDateTimeInt32">
            <summary>设置 MDataTable.System.Data.IDataRecord.GetDateTime(Int32 i) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataTable.SystemDataIDataRecordGetDecimalInt32">
            <summary>设置 MDataTable.System.Data.IDataRecord.GetDecimal(Int32 i) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataTable.SystemDataIDataRecordGetDoubleInt32">
            <summary>设置 MDataTable.System.Data.IDataRecord.GetDouble(Int32 i) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataTable.SystemDataIDataRecordGetFloatInt32">
            <summary>设置 MDataTable.System.Data.IDataRecord.GetFloat(Int32 i) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataTable.SystemDataIDataRecordGetGuidInt32">
            <summary>设置 MDataTable.System.Data.IDataRecord.GetGuid(Int32 i) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataTable.SystemDataIDataRecordGetInt16Int32">
            <summary>设置 MDataTable.System.Data.IDataRecord.GetInt16(Int32 i) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataTable.SystemDataIDataRecordGetInt32Int32">
            <summary>设置 MDataTable.System.Data.IDataRecord.GetInt32(Int32 i) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataTable.SystemDataIDataRecordGetInt64Int32">
            <summary>设置 MDataTable.System.Data.IDataRecord.GetInt64(Int32 i) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataTable.SystemDataIDataRecordGetNameInt32">
            <summary>设置 MDataTable.System.Data.IDataRecord.GetName(Int32 i) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataTable.SystemDataIDataRecordGetOrdinalString">
            <summary>设置 MDataTable.System.Data.IDataRecord.GetOrdinal(String name) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataTable.SystemDataIDataRecordGetStringInt32">
            <summary>设置 MDataTable.System.Data.IDataRecord.GetString(Int32 i) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataTable.SystemDataIDataRecordGetValueInt32">
            <summary>设置 MDataTable.System.Data.IDataRecord.GetValue(Int32 i) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataTable.SystemDataIDataRecordGetValuesObjectArray">
            <summary>设置 MDataTable.System.Data.IDataRecord.GetValues(Object[] values) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataTable.SystemDataIDataRecordIsDBNullInt32">
            <summary>设置 MDataTable.System.Data.IDataRecord.IsDBNull(Int32 i) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataTable.SystemIDisposableDispose">
            <summary>设置 MDataTable.System.IDisposable.Dispose() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataTable.TableNameGet">
            <summary>设置 MDataTable.get_TableName() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataTable.TableNameSetString">
            <summary>设置 MDataTable.set_TableName(String value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataTable.ToDataTable">
            <summary>设置 MDataTable.ToDataTable() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataTable.ToDataTableBoolean">
            <summary>设置 MDataTable.ToDataTable(Boolean isAddExtend) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataTable.ToJson">
            <summary>设置 MDataTable.ToJson() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataTable.ToJsonBoolean">
            <summary>设置 MDataTable.ToJson(Boolean addHead) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataTable.ToJsonBooleanBoolean">
            <summary>设置 MDataTable.ToJson(Boolean addHead, Boolean addSchema) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataTable.ToJsonBooleanBooleanRowOp">
            <summary>设置 MDataTable.ToJson(Boolean addHead, Boolean addSchema, RowOp rowOp) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataTable.ToJsonBooleanBooleanRowOpBoolean">
            <summary>设置 MDataTable.ToJson(Boolean addHead, Boolean addSchema, RowOp rowOp, Boolean isConvertNameToLower) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataTable.ToJsonBooleanBooleanRowOpBooleanEscapeOp">
            <summary>设置 MDataTable.ToJson(Boolean addHead, Boolean addSchema, RowOp rowOp, Boolean isConvertNameToLower, EscapeOp escapeOp) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataTable.ToString">
            <summary>设置 MDataTable.ToString() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataTable.ToXml">
            <summary>设置 MDataTable.ToXml() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataTable.ToXmlBoolean">
            <summary>设置 MDataTable.ToXml(Boolean isConvertNameToLower) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataTable.ToXmlBooleanBooleanBoolean">
            <summary>设置 MDataTable.ToXml(Boolean isConvertNameToLower, Boolean needHeader, Boolean needRootNode) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataTable.WriteJsonBooleanBooleanString">
            <summary>设置 MDataTable.WriteJson(Boolean addHead, Boolean addSchema, String fileName) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataTable.WriteXmlString">
            <summary>设置 MDataTable.WriteXml(String fileName) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataTable.WriteXmlStringBoolean">
            <summary>设置 MDataTable.WriteXml(String fileName, Boolean isConvertNameToLower) 的 填充码</summary>
        </member>
        <member name="T:CYQ.Data.Table.Fakes.ShimMDataTable.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:CYQ.Data.Table.Fakes.ShimMDataTable.AllInstances.AvgOf1Int32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{CYQ.Data.Table.MDataTable,System.Int32,``0})">
            <summary>设置 MDataTable.Avg(Int32 index) 的 填充码</summary>
        </member>
        <member name="M:CYQ.Data.Table.Fakes.ShimMDataTable.AllInstances.AvgOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{CYQ.Data.Table.MDataTable,System.String,``0})">
            <summary>设置 MDataTable.Avg(String columnName) 的 填充码</summary>
        </member>
        <member name="M:CYQ.Data.Table.Fakes.ShimMDataTable.AllInstances.GetColumnItemsOf1Int32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{CYQ.Data.Table.MDataTable,System.Int32,System.Collections.Generic.List{``0}})">
            <summary>设置 MDataTable.GetColumnItems(Int32 columnIndex) 的 填充码</summary>
        </member>
        <member name="M:CYQ.Data.Table.Fakes.ShimMDataTable.AllInstances.GetColumnItemsOf1Int32BreakOp``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{CYQ.Data.Table.MDataTable,System.Int32,CYQ.Data.Table.BreakOp,System.Collections.Generic.List{``0}})">
            <summary>设置 MDataTable.GetColumnItems(Int32 columnIndex, BreakOp op) 的 填充码</summary>
        </member>
        <member name="M:CYQ.Data.Table.Fakes.ShimMDataTable.AllInstances.GetColumnItemsOf1Int32BreakOpBoolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{CYQ.Data.Table.MDataTable,System.Int32,CYQ.Data.Table.BreakOp,System.Boolean,System.Collections.Generic.List{``0}})">
            <summary>设置 MDataTable.GetColumnItems(Int32 columnIndex, BreakOp op, Boolean isDistinct) 的 填充码</summary>
        </member>
        <member name="M:CYQ.Data.Table.Fakes.ShimMDataTable.AllInstances.GetColumnItemsOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{CYQ.Data.Table.MDataTable,System.String,System.Collections.Generic.List{``0}})">
            <summary>设置 MDataTable.GetColumnItems(String columnName) 的 填充码</summary>
        </member>
        <member name="M:CYQ.Data.Table.Fakes.ShimMDataTable.AllInstances.GetColumnItemsOf1StringBreakOp``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{CYQ.Data.Table.MDataTable,System.String,CYQ.Data.Table.BreakOp,System.Collections.Generic.List{``0}})">
            <summary>设置 MDataTable.GetColumnItems(String columnName, BreakOp op) 的 填充码</summary>
        </member>
        <member name="M:CYQ.Data.Table.Fakes.ShimMDataTable.AllInstances.GetColumnItemsOf1StringBreakOpBoolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{CYQ.Data.Table.MDataTable,System.String,CYQ.Data.Table.BreakOp,System.Boolean,System.Collections.Generic.List{``0}})">
            <summary>设置 MDataTable.GetColumnItems(String columnName, BreakOp op, Boolean isDistinct) 的 填充码</summary>
        </member>
        <member name="M:CYQ.Data.Table.Fakes.ShimMDataTable.AllInstances.GetMinMaxValueOf1Int32Boolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{CYQ.Data.Table.MDataTable,System.Int32,System.Boolean,``0})">
            <summary>设置 MDataTable.GetMinMaxValue(Int32 index, Boolean isMin) 的 填充码</summary>
        </member>
        <member name="M:CYQ.Data.Table.Fakes.ShimMDataTable.AllInstances.MaxOf1Int32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{CYQ.Data.Table.MDataTable,System.Int32,``0})">
            <summary>设置 MDataTable.Max(Int32 index) 的 填充码</summary>
        </member>
        <member name="M:CYQ.Data.Table.Fakes.ShimMDataTable.AllInstances.MaxOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{CYQ.Data.Table.MDataTable,System.String,``0})">
            <summary>设置 MDataTable.Max(String columnName) 的 填充码</summary>
        </member>
        <member name="M:CYQ.Data.Table.Fakes.ShimMDataTable.AllInstances.MinOf1Int32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{CYQ.Data.Table.MDataTable,System.Int32,``0})">
            <summary>设置 MDataTable.Min(Int32 index) 的 填充码</summary>
        </member>
        <member name="M:CYQ.Data.Table.Fakes.ShimMDataTable.AllInstances.MinOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{CYQ.Data.Table.MDataTable,System.String,``0})">
            <summary>设置 MDataTable.Min(String columnName) 的 填充码</summary>
        </member>
        <member name="M:CYQ.Data.Table.Fakes.ShimMDataTable.AllInstances.SumOf1Int32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{CYQ.Data.Table.MDataTable,System.Int32,``0})">
            <summary>设置 MDataTable.Sum(Int32 index) 的 填充码</summary>
        </member>
        <member name="M:CYQ.Data.Table.Fakes.ShimMDataTable.AllInstances.SumOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{CYQ.Data.Table.MDataTable,System.String,``0})">
            <summary>设置 MDataTable.Sum(String columnName) 的 填充码</summary>
        </member>
        <member name="M:CYQ.Data.Table.Fakes.ShimMDataTable.AllInstances.ToListOf1BooleanArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{CYQ.Data.Table.MDataTable,System.Boolean[],System.Collections.Generic.List{``0}})">
            <summary>设置 MDataTable.ToList(Boolean[] useEmit) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataTable.AllInstances.AcceptChangesAcceptOp">
            <summary>设置 MDataTable.AcceptChanges(AcceptOp op) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataTable.AllInstances.AcceptChangesAcceptOpIsolationLevel">
            <summary>设置 MDataTable.AcceptChanges(AcceptOp op, IsolationLevel tranLevel) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataTable.AllInstances.AcceptChangesAcceptOpIsolationLevelStringObjectArray">
            <summary>设置 MDataTable.AcceptChanges(AcceptOp op, IsolationLevel tranLevel, String newConn, Object[] jointPrimaryKeys) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataTable.AllInstances.AcceptChangesAcceptOpStringObjectArray">
            <summary>设置 MDataTable.AcceptChanges(AcceptOp op, String newConn, Object[] jointPrimaryKeys) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataTable.AllInstances.BindObject">
            <summary>设置 MDataTable.Bind(Object control) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataTable.AllInstances.BindObjectString">
            <summary>设置 MDataTable.Bind(Object control, String nodeID) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataTable.AllInstances.Clone">
            <summary>设置 MDataTable.Clone() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataTable.AllInstances.ColumnsGet">
            <summary>设置 MDataTable.get_Columns() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataTable.AllInstances.ColumnsSetMDataColumn">
            <summary>设置 MDataTable.set_Columns(MDataColumn value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataTable.AllInstances.ConnGet">
            <summary>设置 MDataTable.get_Conn() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataTable.AllInstances.ConnSetString">
            <summary>设置 MDataTable.set_Conn(String value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataTable.AllInstances.DepthSystemDataIDataReaderget">
            <summary>设置 MDataTable.System.Data.IDataReader.get_Depth() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataTable.AllInstances.DescriptionGet">
            <summary>设置 MDataTable.get_Description() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataTable.AllInstances.DescriptionSetString">
            <summary>设置 MDataTable.set_Description(String value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataTable.AllInstances.Distinct">
            <summary>设置 MDataTable.Distinct() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataTable.AllInstances.DistinctMDataTableOut">
            <summary>设置 MDataTable.Distinct(MDataTable&amp; filterRows) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataTable.AllInstances.DynamicDataGet">
            <summary>设置 MDataTable.get_DynamicData() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataTable.AllInstances.DynamicDataSetObject">
            <summary>设置 MDataTable.set_DynamicData(Object value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataTable.AllInstances.FieldCountSystemDataIDataRecordget">
            <summary>设置 MDataTable.System.Data.IDataRecord.get_FieldCount() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataTable.AllInstances.FindAllObject">
            <summary>设置 MDataTable.FindAll(Object where) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataTable.AllInstances.FindRowObject">
            <summary>设置 MDataTable.FindRow(Object where) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataTable.AllInstances.GetChanges">
            <summary>设置 MDataTable.GetChanges() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataTable.AllInstances.GetChangesRowOp">
            <summary>设置 MDataTable.GetChanges(RowOp rowOp) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataTable.AllInstances.GetCountObject">
            <summary>设置 MDataTable.GetCount(Object where) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataTable.AllInstances.GetIndexObject">
            <summary>设置 MDataTable.GetIndex(Object where) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataTable.AllInstances.GetSchemaBoolean">
            <summary>设置 MDataTable.GetSchema(Boolean clone) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataTable.AllInstances.InitStringMDataColumn">
            <summary>设置 MDataTable.Init(String tableName, MDataColumn mdc) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataTable.AllInstances.IsClosedSystemDataIDataReaderget">
            <summary>设置 MDataTable.System.Data.IDataReader.get_IsClosed() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataTable.AllInstances.ItemSystemDataIDataRecordgetInt32">
            <summary>设置 MDataTable.System.Data.IDataRecord.get_Item(Int32 i) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataTable.AllInstances.ItemSystemDataIDataRecordgetString">
            <summary>设置 MDataTable.System.Data.IDataRecord.get_Item(String name) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataTable.AllInstances.JoinMDataTableStringArray">
            <summary>设置 MDataTable.Join(MDataTable dt, String[] appendColumns) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataTable.AllInstances.JoinObjectStringStringArray">
            <summary>设置 MDataTable.Join(Object tableName, String joinOnName, String[] appendColumns) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataTable.AllInstances.JoinOnNameGet">
            <summary>设置 MDataTable.get_JoinOnName() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataTable.AllInstances.JoinOnNameSetString">
            <summary>设置 MDataTable.set_JoinOnName(String value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataTable.AllInstances.LoadMDataTableMCellStruct">
            <summary>设置 MDataTable.Load(MDataTable dt, MCellStruct primary) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataTable.AllInstances.LoadRowMDataRow">
            <summary>设置 MDataTable.LoadRow(MDataRow row) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataTable.AllInstances.MergeMDataTable">
            <summary>设置 MDataTable.Merge(MDataTable newTable) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataTable.AllInstances.NewRow">
            <summary>设置 MDataTable.NewRow() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataTable.AllInstances.NewRowBoolean">
            <summary>设置 MDataTable.NewRow(Boolean isAddToTable) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataTable.AllInstances.NewRowBooleanInt32">
            <summary>设置 MDataTable.NewRow(Boolean isAddToTable, Int32 index) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataTable.AllInstances.Pivot">
            <summary>设置 MDataTable.Pivot() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataTable.AllInstances.PivotStringStringString">
            <summary>设置 MDataTable.Pivot(String rowName, String colName, String valueName) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataTable.AllInstances.RecordsAffectedGet">
            <summary>设置 MDataTable.get_RecordsAffected() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataTable.AllInstances.RecordsAffectedSetInt32">
            <summary>设置 MDataTable.set_RecordsAffected(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataTable.AllInstances.RowsGet">
            <summary>设置 MDataTable.get_Rows() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataTable.AllInstances.SelectInt32Int32ObjectObjectArray">
            <summary>设置 MDataTable.Select(Int32 pageIndex, Int32 pageSize, Object where, Object[] selectColumns) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataTable.AllInstances.SelectInt32Object">
            <summary>设置 MDataTable.Select(Int32 topN, Object where) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataTable.AllInstances.SelectObject">
            <summary>设置 MDataTable.Select(Object where) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataTable.AllInstances.SetStateInt32">
            <summary>设置 MDataTable.SetState(Int32 state) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataTable.AllInstances.SetStateInt32BreakOp">
            <summary>设置 MDataTable.SetState(Int32 state, BreakOp op) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataTable.AllInstances.SplitObject">
            <summary>设置 MDataTable.Split(Object where) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataTable.AllInstances.SystemCollectionsIEnumerableGetEnumerator">
            <summary>设置 MDataTable.System.Collections.IEnumerable.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataTable.AllInstances.SystemDataIDataReaderClose">
            <summary>设置 MDataTable.System.Data.IDataReader.Close() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataTable.AllInstances.SystemDataIDataReaderGetSchemaTable">
            <summary>设置 MDataTable.System.Data.IDataReader.GetSchemaTable() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataTable.AllInstances.SystemDataIDataReaderNextResult">
            <summary>设置 MDataTable.System.Data.IDataReader.NextResult() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataTable.AllInstances.SystemDataIDataReaderRead">
            <summary>设置 MDataTable.System.Data.IDataReader.Read() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataTable.AllInstances.SystemDataIDataRecordGetBooleanInt32">
            <summary>设置 MDataTable.System.Data.IDataRecord.GetBoolean(Int32 i) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataTable.AllInstances.SystemDataIDataRecordGetByteInt32">
            <summary>设置 MDataTable.System.Data.IDataRecord.GetByte(Int32 i) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataTable.AllInstances.SystemDataIDataRecordGetBytesInt32Int64ByteArrayInt32Int32">
            <summary>设置 MDataTable.System.Data.IDataRecord.GetBytes(Int32 i, Int64 fieldOffset, Byte[] buffer, Int32 bufferoffset, Int32 length) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataTable.AllInstances.SystemDataIDataRecordGetCharInt32">
            <summary>设置 MDataTable.System.Data.IDataRecord.GetChar(Int32 i) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataTable.AllInstances.SystemDataIDataRecordGetCharsInt32Int64CharArrayInt32Int32">
            <summary>设置 MDataTable.System.Data.IDataRecord.GetChars(Int32 i, Int64 fieldoffset, Char[] buffer, Int32 bufferoffset, Int32 length) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataTable.AllInstances.SystemDataIDataRecordGetDataInt32">
            <summary>设置 MDataTable.System.Data.IDataRecord.GetData(Int32 i) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataTable.AllInstances.SystemDataIDataRecordGetDataTypeNameInt32">
            <summary>设置 MDataTable.System.Data.IDataRecord.GetDataTypeName(Int32 i) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataTable.AllInstances.SystemDataIDataRecordGetDateTimeInt32">
            <summary>设置 MDataTable.System.Data.IDataRecord.GetDateTime(Int32 i) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataTable.AllInstances.SystemDataIDataRecordGetDecimalInt32">
            <summary>设置 MDataTable.System.Data.IDataRecord.GetDecimal(Int32 i) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataTable.AllInstances.SystemDataIDataRecordGetDoubleInt32">
            <summary>设置 MDataTable.System.Data.IDataRecord.GetDouble(Int32 i) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataTable.AllInstances.SystemDataIDataRecordGetFloatInt32">
            <summary>设置 MDataTable.System.Data.IDataRecord.GetFloat(Int32 i) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataTable.AllInstances.SystemDataIDataRecordGetGuidInt32">
            <summary>设置 MDataTable.System.Data.IDataRecord.GetGuid(Int32 i) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataTable.AllInstances.SystemDataIDataRecordGetInt16Int32">
            <summary>设置 MDataTable.System.Data.IDataRecord.GetInt16(Int32 i) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataTable.AllInstances.SystemDataIDataRecordGetInt32Int32">
            <summary>设置 MDataTable.System.Data.IDataRecord.GetInt32(Int32 i) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataTable.AllInstances.SystemDataIDataRecordGetInt64Int32">
            <summary>设置 MDataTable.System.Data.IDataRecord.GetInt64(Int32 i) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataTable.AllInstances.SystemDataIDataRecordGetNameInt32">
            <summary>设置 MDataTable.System.Data.IDataRecord.GetName(Int32 i) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataTable.AllInstances.SystemDataIDataRecordGetOrdinalString">
            <summary>设置 MDataTable.System.Data.IDataRecord.GetOrdinal(String name) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataTable.AllInstances.SystemDataIDataRecordGetStringInt32">
            <summary>设置 MDataTable.System.Data.IDataRecord.GetString(Int32 i) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataTable.AllInstances.SystemDataIDataRecordGetValueInt32">
            <summary>设置 MDataTable.System.Data.IDataRecord.GetValue(Int32 i) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataTable.AllInstances.SystemDataIDataRecordGetValuesObjectArray">
            <summary>设置 MDataTable.System.Data.IDataRecord.GetValues(Object[] values) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataTable.AllInstances.SystemDataIDataRecordIsDBNullInt32">
            <summary>设置 MDataTable.System.Data.IDataRecord.IsDBNull(Int32 i) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataTable.AllInstances.SystemIDisposableDispose">
            <summary>设置 MDataTable.System.IDisposable.Dispose() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataTable.AllInstances.TableNameGet">
            <summary>设置 MDataTable.get_TableName() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataTable.AllInstances.TableNameSetString">
            <summary>设置 MDataTable.set_TableName(String value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataTable.AllInstances.ToDataTable">
            <summary>设置 MDataTable.ToDataTable() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataTable.AllInstances.ToDataTableBoolean">
            <summary>设置 MDataTable.ToDataTable(Boolean isAddExtend) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataTable.AllInstances.ToJson">
            <summary>设置 MDataTable.ToJson() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataTable.AllInstances.ToJsonBoolean">
            <summary>设置 MDataTable.ToJson(Boolean addHead) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataTable.AllInstances.ToJsonBooleanBoolean">
            <summary>设置 MDataTable.ToJson(Boolean addHead, Boolean addSchema) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataTable.AllInstances.ToJsonBooleanBooleanRowOp">
            <summary>设置 MDataTable.ToJson(Boolean addHead, Boolean addSchema, RowOp rowOp) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataTable.AllInstances.ToJsonBooleanBooleanRowOpBoolean">
            <summary>设置 MDataTable.ToJson(Boolean addHead, Boolean addSchema, RowOp rowOp, Boolean isConvertNameToLower) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataTable.AllInstances.ToJsonBooleanBooleanRowOpBooleanEscapeOp">
            <summary>设置 MDataTable.ToJson(Boolean addHead, Boolean addSchema, RowOp rowOp, Boolean isConvertNameToLower, EscapeOp escapeOp) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataTable.AllInstances.ToString01">
            <summary>设置 MDataTable.ToString() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataTable.AllInstances.ToXml">
            <summary>设置 MDataTable.ToXml() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataTable.AllInstances.ToXmlBoolean">
            <summary>设置 MDataTable.ToXml(Boolean isConvertNameToLower) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataTable.AllInstances.ToXmlBooleanBooleanBoolean">
            <summary>设置 MDataTable.ToXml(Boolean isConvertNameToLower, Boolean needHeader, Boolean needRootNode) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataTable.AllInstances.WriteJsonBooleanBooleanString">
            <summary>设置 MDataTable.WriteJson(Boolean addHead, Boolean addSchema, String fileName) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataTable.AllInstances.WriteXmlString">
            <summary>设置 MDataTable.WriteXml(String fileName) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.ShimMDataTable.AllInstances.WriteXmlStringBoolean">
            <summary>设置 MDataTable.WriteXml(String fileName, Boolean isConvertNameToLower) 的 填充码</summary>
        </member>
        <member name="T:CYQ.Data.Table.Fakes.StubMCellStruct">
            <summary>CYQ.Data.Table.MCellStruct 的存根类型</summary>
        </member>
        <member name="M:CYQ.Data.Table.Fakes.StubMCellStruct.#ctor(System.String,System.Data.SqlDbType)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:CYQ.Data.Table.Fakes.StubMCellStruct.#ctor(System.String,System.Data.SqlDbType,System.Boolean,System.Boolean,System.Int32)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:CYQ.Data.Table.Fakes.StubMCellStruct.InitializeStub">
            <summary>初始化 type StubMCellStruct 的新实例</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.StubMCellStruct.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.StubMCellStruct.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.StubMCellStruct.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:CYQ.Data.Table.Fakes.StubMDataColumn">
            <summary>CYQ.Data.Table.MDataColumn 的存根类型</summary>
        </member>
        <member name="M:CYQ.Data.Table.Fakes.StubMDataColumn.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:CYQ.Data.Table.Fakes.StubMDataColumn.InitializeStub">
            <summary>初始化 type StubMDataColumn 的新实例</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.StubMDataColumn.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.StubMDataColumn.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.StubMDataColumn.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:CYQ.Data.Table.Fakes.StubMDataRow">
            <summary>CYQ.Data.Table.MDataRow 的存根类型</summary>
        </member>
        <member name="M:CYQ.Data.Table.Fakes.StubMDataRow.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:CYQ.Data.Table.Fakes.StubMDataRow.#ctor(CYQ.Data.Table.MDataColumn)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:CYQ.Data.Table.Fakes.StubMDataRow.#ctor(CYQ.Data.Table.MDataTable)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:CYQ.Data.Table.Fakes.StubMDataRow.InitializeStub">
            <summary>初始化 type StubMDataRow 的新实例</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.StubMDataRow.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.StubMDataRow.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.StubMDataRow.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:CYQ.Data.Table.Fakes.StubMDataTable">
            <summary>CYQ.Data.Table.MDataTable 的存根类型</summary>
        </member>
        <member name="M:CYQ.Data.Table.Fakes.StubMDataTable.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:CYQ.Data.Table.Fakes.StubMDataTable.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:CYQ.Data.Table.Fakes.StubMDataTable.#ctor(System.String,CYQ.Data.Table.MDataColumn)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:CYQ.Data.Table.Fakes.StubMDataTable.InitializeStub">
            <summary>初始化 type StubMDataTable 的新实例</summary>
        </member>
        <member name="M:CYQ.Data.Table.Fakes.StubMDataTable.ToString">
            <summary>设置 MDataTable.ToString() 的 存根</summary>
        </member>
        <member name="F:CYQ.Data.Table.Fakes.StubMDataTable.ToString01">
            <summary>设置 MDataTable.ToString() 的 stub</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.StubMDataTable.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.StubMDataTable.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:CYQ.Data.Table.Fakes.StubMDataTable.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:CYQ.Data.Tool.Fakes.ShimConvertTool">
            <summary>CYQ.Data.Tool.ConvertTool 的填充码类型</summary>
        </member>
        <member name="M:CYQ.Data.Tool.Fakes.ShimConvertTool.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:CYQ.Data.Tool.Fakes.ShimConvertTool.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:CYQ.Data.Tool.Fakes.ShimConvertTool.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:CYQ.Data.Tool.Fakes.ShimConvertTool.ChangeReaderToListOf1DbDataReader``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Common.DbDataReader,System.Collections.Generic.List{``0}})">
            <summary>设置 ConvertTool.ChangeReaderToList(DbDataReader reader) 的 填充码</summary>
        </member>
        <member name="M:CYQ.Data.Tool.Fakes.ShimConvertTool.ChangeTypeOf1Object``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Object,``0})">
            <summary>设置 ConvertTool.ChangeType(Object value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimConvertTool.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="T:CYQ.Data.Tool.Fakes.ShimDBInfo">
            <summary>CYQ.Data.Tool.DBInfo 的填充码类型</summary>
        </member>
        <member name="M:CYQ.Data.Tool.Fakes.ShimDBInfo.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:CYQ.Data.Tool.Fakes.ShimDBInfo.#ctor(CYQ.Data.Tool.DBInfo)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:CYQ.Data.Tool.Fakes.ShimDBInfo.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:CYQ.Data.Tool.Fakes.ShimDBInfo.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimDBInfo.AddStringStringString">
            <summary>设置 DBInfo.Add(String tableHash, String type, String name) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimDBInfo.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimDBInfo.ConnNameGet">
            <summary>设置 DBInfo.get_ConnName() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimDBInfo.ConnNameSetString">
            <summary>设置 DBInfo.set_ConnName(String value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimDBInfo.ConnStringGet">
            <summary>设置 DBInfo.get_ConnString() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimDBInfo.ConnStringSetString">
            <summary>设置 DBInfo.set_ConnString(String value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimDBInfo.Constructor">
            <summary>设置 DBInfo.DBInfo() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimDBInfo.DataBaseNameGet">
            <summary>设置 DBInfo.get_DataBaseName() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimDBInfo.DataBaseNameSetString">
            <summary>设置 DBInfo.set_DataBaseName(String value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimDBInfo.DataBaseTypeGet">
            <summary>设置 DBInfo.get_DataBaseType() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimDBInfo.DataBaseTypeSetDataBaseType">
            <summary>设置 DBInfo.set_DataBaseType(DataBaseType value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimDBInfo.DataBaseVersionGet">
            <summary>设置 DBInfo.get_DataBaseVersion() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimDBInfo.DataBaseVersionSetString">
            <summary>设置 DBInfo.set_DataBaseVersion(String value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimDBInfo.GetHashKeyString">
            <summary>设置 DBInfo.GetHashKey(String connNameOrString) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimDBInfo.GetProcs">
            <summary>设置 DBInfo.GetProcs() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimDBInfo.GetTableInfoString">
            <summary>设置 DBInfo.GetTableInfo(String tableHash) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimDBInfo.GetTableInfoStringString">
            <summary>设置 DBInfo.GetTableInfo(String tableHash, String type) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimDBInfo.GetVersion">
            <summary>设置 DBInfo.GetVersion() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimDBInfo.GetViews">
            <summary>设置 DBInfo.GetViews() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimDBInfo.ProcsGet">
            <summary>设置 DBInfo.get_Procs() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimDBInfo.ProcsSetDictionaryOfStringTableInfo">
            <summary>设置 DBInfo.set_Procs(Dictionary`2&lt;String,TableInfo&gt; value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimDBInfo.RemoveStringString">
            <summary>设置 DBInfo.Remove(String tableHash, String type) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimDBInfo.TablesGet">
            <summary>设置 DBInfo.get_Tables() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimDBInfo.TablesSetDictionaryOfStringTableInfo">
            <summary>设置 DBInfo.set_Tables(Dictionary`2&lt;String,TableInfo&gt; value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimDBInfo.ViewsGet">
            <summary>设置 DBInfo.get_Views() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimDBInfo.ViewsSetDictionaryOfStringTableInfo">
            <summary>设置 DBInfo.set_Views(Dictionary`2&lt;String,TableInfo&gt; value) 的 填充码</summary>
        </member>
        <member name="T:CYQ.Data.Tool.Fakes.ShimDBInfo.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimDBInfo.AllInstances.AddStringStringString">
            <summary>设置 DBInfo.Add(String tableHash, String type, String name) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimDBInfo.AllInstances.ConnNameGet">
            <summary>设置 DBInfo.get_ConnName() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimDBInfo.AllInstances.ConnNameSetString">
            <summary>设置 DBInfo.set_ConnName(String value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimDBInfo.AllInstances.ConnStringGet">
            <summary>设置 DBInfo.get_ConnString() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimDBInfo.AllInstances.ConnStringSetString">
            <summary>设置 DBInfo.set_ConnString(String value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimDBInfo.AllInstances.DataBaseNameGet">
            <summary>设置 DBInfo.get_DataBaseName() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimDBInfo.AllInstances.DataBaseNameSetString">
            <summary>设置 DBInfo.set_DataBaseName(String value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimDBInfo.AllInstances.DataBaseTypeGet">
            <summary>设置 DBInfo.get_DataBaseType() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimDBInfo.AllInstances.DataBaseTypeSetDataBaseType">
            <summary>设置 DBInfo.set_DataBaseType(DataBaseType value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimDBInfo.AllInstances.DataBaseVersionGet">
            <summary>设置 DBInfo.get_DataBaseVersion() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimDBInfo.AllInstances.DataBaseVersionSetString">
            <summary>设置 DBInfo.set_DataBaseVersion(String value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimDBInfo.AllInstances.GetProcs">
            <summary>设置 DBInfo.GetProcs() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimDBInfo.AllInstances.GetTableInfoString">
            <summary>设置 DBInfo.GetTableInfo(String tableHash) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimDBInfo.AllInstances.GetTableInfoStringString">
            <summary>设置 DBInfo.GetTableInfo(String tableHash, String type) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimDBInfo.AllInstances.GetVersion">
            <summary>设置 DBInfo.GetVersion() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimDBInfo.AllInstances.GetViews">
            <summary>设置 DBInfo.GetViews() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimDBInfo.AllInstances.ProcsGet">
            <summary>设置 DBInfo.get_Procs() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimDBInfo.AllInstances.ProcsSetDictionaryOfStringTableInfo">
            <summary>设置 DBInfo.set_Procs(Dictionary`2&lt;String,TableInfo&gt; value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimDBInfo.AllInstances.RemoveStringString">
            <summary>设置 DBInfo.Remove(String tableHash, String type) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimDBInfo.AllInstances.TablesGet">
            <summary>设置 DBInfo.get_Tables() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimDBInfo.AllInstances.TablesSetDictionaryOfStringTableInfo">
            <summary>设置 DBInfo.set_Tables(Dictionary`2&lt;String,TableInfo&gt; value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimDBInfo.AllInstances.ViewsGet">
            <summary>设置 DBInfo.get_Views() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimDBInfo.AllInstances.ViewsSetDictionaryOfStringTableInfo">
            <summary>设置 DBInfo.set_Views(Dictionary`2&lt;String,TableInfo&gt; value) 的 填充码</summary>
        </member>
        <member name="T:CYQ.Data.Tool.Fakes.ShimDBTool">
            <summary>CYQ.Data.Tool.DBTool 的填充码类型</summary>
        </member>
        <member name="M:CYQ.Data.Tool.Fakes.ShimDBTool.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:CYQ.Data.Tool.Fakes.ShimDBTool.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:CYQ.Data.Tool.Fakes.ShimDBTool.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimDBTool.AlterTableStringMDataColumn">
            <summary>设置 DBTool.AlterTable(String tableName, MDataColumn columns) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimDBTool.AlterTableStringMDataColumnString">
            <summary>设置 DBTool.AlterTable(String tableName, MDataColumn columns, String conn) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimDBTool.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimDBTool.CheckAndCreateOracleSequenceStringStringStringString">
            <summary>设置 DBTool.CheckAndCreateOracleSequence(String seqName, String conn, String primaryKey, String tableName) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimDBTool.CreateTableStringMDataColumn">
            <summary>设置 DBTool.CreateTable(String tableName, MDataColumn columns) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimDBTool.CreateTableStringMDataColumnString">
            <summary>设置 DBTool.CreateTable(String tableName, MDataColumn columns, String conn) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimDBTool.DataBasesGet">
            <summary>设置 DBTool.get_DataBases() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimDBTool.DropTableString">
            <summary>设置 DBTool.DropTable(String tableName) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimDBTool.DropTableStringString">
            <summary>设置 DBTool.DropTable(String tableName, String conn) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimDBTool.ErrorMsgGet">
            <summary>设置 DBTool.get_ErrorMsg() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimDBTool.ErrorMsgSetString">
            <summary>设置 DBTool.set_ErrorMsg(String value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimDBTool.ExistsString">
            <summary>设置 DBTool.Exists(String name) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimDBTool.ExistsStringString">
            <summary>设置 DBTool.Exists(String name, String type) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimDBTool.ExistsStringStringString">
            <summary>设置 DBTool.Exists(String name, String type, String conn) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimDBTool.FormatDefaultValueDataBaseTypeObjectInt32SqlDbType">
            <summary>设置 DBTool.FormatDefaultValue(DataBaseType dalType, Object value, Int32 flag, SqlDbType sqlDbType) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimDBTool.GetAlterTableSqlStringMDataColumn">
            <summary>设置 DBTool.GetAlterTableSql(String tableName, MDataColumn columns) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimDBTool.GetAlterTableSqlStringMDataColumnString">
            <summary>设置 DBTool.GetAlterTableSql(String tableName, MDataColumn columns, String conn) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimDBTool.GetColumnsObject">
            <summary>设置 DBTool.GetColumns(Object tableNameObj) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimDBTool.GetColumnsStringString">
            <summary>设置 DBTool.GetColumns(String tableName, String conn) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimDBTool.GetColumnsStringStringStringOut">
            <summary>设置 DBTool.GetColumns(String tableName, String conn, String&amp; errInfo) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimDBTool.GetCreateTableDescriptionSqlString">
            <summary>设置 DBTool.GetCreateTableDescriptionSql(String tableName) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimDBTool.GetCreateTableDescriptionSqlStringMDataColumnDataBaseType">
            <summary>设置 DBTool.GetCreateTableDescriptionSql(String tableName, MDataColumn columns, DataBaseType dalType) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimDBTool.GetCreateTableDescriptionSqlStringString">
            <summary>设置 DBTool.GetCreateTableDescriptionSql(String tableName, String conn) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimDBTool.GetCreateTableSqlString">
            <summary>设置 DBTool.GetCreateTableSql(String tableName) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimDBTool.GetCreateTableSqlStringMDataColumnDataBaseTypeString">
            <summary>设置 DBTool.GetCreateTableSql(String tableName, MDataColumn columns, DataBaseType dalType, String version) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimDBTool.GetCreateTableSqlStringString">
            <summary>设置 DBTool.GetCreateTableSql(String tableName, String conn) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimDBTool.GetDBInfoString">
            <summary>设置 DBTool.GetDBInfo(String conn) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimDBTool.GetDataBaseTypeString">
            <summary>设置 DBTool.GetDataBaseType(String conn) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimDBTool.GetDataTypeMCellStructDataBaseTypeString">
            <summary>设置 DBTool.GetDataType(MCellStruct ms, DataBaseType dalType, String version) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimDBTool.GetTableInfoString">
            <summary>设置 DBTool.GetTableInfo(String tableName) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimDBTool.GetTableInfoStringString">
            <summary>设置 DBTool.GetTableInfo(String tableName, String conn) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimDBTool.KeywordStringDataBaseType">
            <summary>设置 DBTool.Keyword(String name, DataBaseType dalType) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimDBTool.NotKeywordString">
            <summary>设置 DBTool.NotKeyword(String name) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimDBTool.RemoveCacheStringString">
            <summary>设置 DBTool.RemoveCache(String tableName, String conn) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimDBTool.StaticConstructor">
            <summary>设置 DBTool.DBTool() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimDBTool.TestConnString">
            <summary>设置 DBTool.TestConn(String conn) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimDBTool.TestConnStringStringOut">
            <summary>设置 DBTool.TestConn(String conn, String&amp; msg) 的 填充码</summary>
        </member>
        <member name="T:CYQ.Data.Tool.Fakes.ShimEncryptHelper">
            <summary>CYQ.Data.Tool.EncryptHelper 的填充码类型</summary>
        </member>
        <member name="M:CYQ.Data.Tool.Fakes.ShimEncryptHelper.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:CYQ.Data.Tool.Fakes.ShimEncryptHelper.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:CYQ.Data.Tool.Fakes.ShimEncryptHelper.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimEncryptHelper.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimEncryptHelper.DecryptString">
            <summary>设置 EncryptHelper.Decrypt(String text) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimEncryptHelper.DecryptStringByteArray">
            <summary>设置 EncryptHelper.Decrypt(String text, Byte[] hashKey) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimEncryptHelper.DecryptStringString">
            <summary>设置 EncryptHelper.Decrypt(String text, String key) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimEncryptHelper.DefaultHashKeyGet">
            <summary>设置 EncryptHelper.get_DefaultHashKey() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimEncryptHelper.EncryptString">
            <summary>设置 EncryptHelper.Encrypt(String text) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimEncryptHelper.EncryptStringByteArray">
            <summary>设置 EncryptHelper.Encrypt(String text, Byte[] hashKey) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimEncryptHelper.EncryptStringString">
            <summary>设置 EncryptHelper.Encrypt(String text, String key) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimEncryptHelper.GetHashCodeString">
            <summary>设置 EncryptHelper.GetHashCode(String key) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimEncryptHelper.GetHashKeyString">
            <summary>设置 EncryptHelper.GetHashKey(String key) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimEncryptHelper.GetHashString">
            <summary>设置 EncryptHelper.GetHash(String key) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimEncryptHelper.HashKeyIsValid">
            <summary>设置 EncryptHelper.HashKeyIsValid() 的 填充码</summary>
        </member>
        <member name="T:CYQ.Data.Tool.Fakes.ShimIOHelper">
            <summary>CYQ.Data.Tool.IOHelper 的填充码类型</summary>
        </member>
        <member name="M:CYQ.Data.Tool.Fakes.ShimIOHelper.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:CYQ.Data.Tool.Fakes.ShimIOHelper.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:CYQ.Data.Tool.Fakes.ShimIOHelper.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimIOHelper.AppendStringString">
            <summary>设置 IOHelper.Append(String fileName, String text) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimIOHelper.AppendStringStringEncoding">
            <summary>设置 IOHelper.Append(String fileName, String text, Encoding encode) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimIOHelper.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimIOHelper.BytesToTextByteArrayEncoding">
            <summary>设置 IOHelper.BytesToText(Byte[] buff, Encoding encoding) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimIOHelper.DeleteString">
            <summary>设置 IOHelper.Delete(String fileName) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimIOHelper.DetectEncodeByteArray">
            <summary>设置 IOHelper.DetectEncode(Byte[] bytes) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimIOHelper.DetectEncodeString">
            <summary>设置 IOHelper.DetectEncode(String fileName) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimIOHelper.GetLockObjInt32">
            <summary>设置 IOHelper.GetLockObj(Int32 length) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimIOHelper.IsLastFileWriteTimeChangedStringDateTimeRef">
            <summary>设置 IOHelper.IsLastFileWriteTimeChanged(String fileName, DateTime&amp; compareTime) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimIOHelper.ReadAllLinesString">
            <summary>设置 IOHelper.ReadAllLines(String fileName) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimIOHelper.ReadAllLinesStringInt32">
            <summary>设置 IOHelper.ReadAllLines(String fileName, Int32 cacheMinutes) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimIOHelper.ReadAllLinesStringInt32Encoding">
            <summary>设置 IOHelper.ReadAllLines(String fileName, Int32 cacheMinutes, Encoding encoding) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimIOHelper.ReadAllTextString">
            <summary>设置 IOHelper.ReadAllText(String fileName) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimIOHelper.ReadAllTextStringInt32">
            <summary>设置 IOHelper.ReadAllText(String fileName, Int32 cacheMinutes) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimIOHelper.ReadAllTextStringInt32Encoding">
            <summary>设置 IOHelper.ReadAllText(String fileName, Int32 cacheMinutes, Encoding encoding) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimIOHelper.ReadAllTextStringInt32EncodingInt32">
            <summary>设置 IOHelper.ReadAllText(String fileName, Int32 cacheMinutes, Encoding encoding, Int32 tryCount) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimIOHelper.SaveStringStringBooleanBoolean">
            <summary>设置 IOHelper.Save(String fileName, String text, Boolean isAppend, Boolean writeLogOnError) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimIOHelper.SaveStringStringBooleanBooleanEncoding">
            <summary>设置 IOHelper.Save(String fileName, String text, Boolean isAppend, Boolean writeLogOnError, Encoding encode) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimIOHelper.SaveStringStringBooleanBooleanEncodingInt32">
            <summary>设置 IOHelper.Save(String fileName, String text, Boolean isAppend, Boolean writeLogOnError, Encoding encode, Int32 tryCount) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimIOHelper.StaticConstructor">
            <summary>设置 IOHelper.IOHelper() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimIOHelper.TenObjGet">
            <summary>设置 IOHelper.get_TenObj() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimIOHelper.WriteStringString">
            <summary>设置 IOHelper.Write(String fileName, String text) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimIOHelper.WriteStringStringEncoding">
            <summary>设置 IOHelper.Write(String fileName, String text, Encoding encode) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimIOHelper.cacheGet">
            <summary>设置 IOHelper.get_cache() 的 填充码</summary>
        </member>
        <member name="T:CYQ.Data.Tool.Fakes.ShimJsonHelper">
            <summary>CYQ.Data.Tool.JsonHelper 的填充码类型</summary>
        </member>
        <member name="M:CYQ.Data.Tool.Fakes.ShimJsonHelper.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:CYQ.Data.Tool.Fakes.ShimJsonHelper.#ctor(CYQ.Data.Tool.JsonHelper)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:CYQ.Data.Tool.Fakes.ShimJsonHelper.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:CYQ.Data.Tool.Fakes.ShimJsonHelper.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:CYQ.Data.Tool.Fakes.ShimJsonHelper.GetValueOf1StringString``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.String,``0})">
            <summary>设置 JsonHelper.GetValue(String json, String key) 的 填充码</summary>
        </member>
        <member name="M:CYQ.Data.Tool.Fakes.ShimJsonHelper.GetValueOf1StringStringEscapeOp``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.String,CYQ.Data.Tool.EscapeOp,``0})">
            <summary>设置 JsonHelper.GetValue(String json, String key, EscapeOp op) 的 填充码</summary>
        </member>
        <member name="M:CYQ.Data.Tool.Fakes.ShimJsonHelper.ToEntityOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0})">
            <summary>设置 JsonHelper.ToEntity(String json) 的 填充码</summary>
        </member>
        <member name="M:CYQ.Data.Tool.Fakes.ShimJsonHelper.ToEntityOf1StringEscapeOp``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,CYQ.Data.Tool.EscapeOp,``0})">
            <summary>设置 JsonHelper.ToEntity(String json, EscapeOp op) 的 填充码</summary>
        </member>
        <member name="M:CYQ.Data.Tool.Fakes.ShimJsonHelper.ToIEnumeratorOf1StringEscapeOp``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,CYQ.Data.Tool.EscapeOp,``0})">
            <summary>设置 JsonHelper.ToIEnumerator(String json, EscapeOp op) 的 填充码</summary>
        </member>
        <member name="M:CYQ.Data.Tool.Fakes.ShimJsonHelper.ToListOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.Collections.Generic.List{``0}})">
            <summary>设置 JsonHelper.ToList(String json) 的 填充码</summary>
        </member>
        <member name="M:CYQ.Data.Tool.Fakes.ShimJsonHelper.ToListOf1StringEscapeOp``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,CYQ.Data.Tool.EscapeOp,System.Collections.Generic.List{``0}})">
            <summary>设置 JsonHelper.ToList(String json, EscapeOp op) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimJsonHelper.AddBr">
            <summary>设置 JsonHelper.AddBr() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimJsonHelper.AddFootStringString">
            <summary>设置 JsonHelper.AddFoot(String name, String value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimJsonHelper.AddFootStringStringBoolean">
            <summary>设置 JsonHelper.AddFoot(String name, String value, Boolean noQuotes) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimJsonHelper.AddStringObject">
            <summary>设置 JsonHelper.Add(String name, Object value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimJsonHelper.AddStringString">
            <summary>设置 JsonHelper.Add(String name, String value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimJsonHelper.AddStringStringBoolean">
            <summary>设置 JsonHelper.Add(String name, String value, Boolean noQuotes) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimJsonHelper.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimJsonHelper.Constructor">
            <summary>设置 JsonHelper.JsonHelper() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimJsonHelper.ConstructorBoolean">
            <summary>设置 JsonHelper.JsonHelper(Boolean addHead) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimJsonHelper.ConstructorBooleanBoolean">
            <summary>设置 JsonHelper.JsonHelper(Boolean addHead, Boolean addSchema) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimJsonHelper.DefaultEscapeGet">
            <summary>设置 JsonHelper.get_DefaultEscape() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimJsonHelper.ErrorMsgGet">
            <summary>设置 JsonHelper.get_ErrorMsg() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimJsonHelper.ErrorMsgSetString">
            <summary>设置 JsonHelper.set_ErrorMsg(String value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimJsonHelper.FillEntityObject">
            <summary>设置 JsonHelper.FillEntity(Object entity) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimJsonHelper.FillMDataColumnBoolean">
            <summary>设置 JsonHelper.Fill(MDataColumn column, Boolean isFullSchema) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimJsonHelper.FillMDataRow">
            <summary>设置 JsonHelper.Fill(MDataRow row) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimJsonHelper.FillMDataTable">
            <summary>设置 JsonHelper.Fill(MDataTable table) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimJsonHelper.FillObject">
            <summary>设置 JsonHelper.Fill(Object obj) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimJsonHelper.FillString">
            <summary>设置 JsonHelper.Fill(String query) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimJsonHelper.FormatCDATAString">
            <summary>设置 JsonHelper.FormatCDATA(String text) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimJsonHelper.FormatStringStringBoolean">
            <summary>设置 JsonHelper.Format(String name, String value, Boolean children) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimJsonHelper.GetSourceValueStringString">
            <summary>设置 JsonHelper.GetSourceValue(String json, String key) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimJsonHelper.GetValueStringString">
            <summary>设置 JsonHelper.GetValue(String json, String key) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimJsonHelper.GetValueStringStringEscapeOp">
            <summary>设置 JsonHelper.GetValue(String json, String key, EscapeOp op) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimJsonHelper.GetXmlDictionaryOfStringStringBooleanEscapeOp">
            <summary>设置 JsonHelper.GetXml(Dictionary`2&lt;String,String&gt; dic, Boolean isWithAttr, EscapeOp op) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimJsonHelper.GetXmlElementStringDictionaryOfStringStringEscapeOp">
            <summary>设置 JsonHelper.GetXmlElement(String parentName, Dictionary`2&lt;String,String&gt; dic, EscapeOp op) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimJsonHelper.GetXmlListListOfDictionaryOfStringStringBooleanEscapeOp">
            <summary>设置 JsonHelper.GetXmlList(List`1&lt;Dictionary`2&lt;String,String&gt;&gt; dicList, Boolean isWithAttr, EscapeOp op) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimJsonHelper.IsJsonString">
            <summary>设置 JsonHelper.IsJson(String json) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimJsonHelper.IsJsonStringInt32Out">
            <summary>设置 JsonHelper.IsJson(String json, Int32&amp; errIndex) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimJsonHelper.IsSuccessString">
            <summary>设置 JsonHelper.IsSuccess(String json) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimJsonHelper.OutResultBooleanObject">
            <summary>设置 JsonHelper.OutResult(Boolean result, Object msgObj) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimJsonHelper.OutResultBooleanObjectStringObjectObjectArray">
            <summary>设置 JsonHelper.OutResult(Boolean result, Object msgObj, String name, Object value, Object[] nameValues) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimJsonHelper.OutResultBooleanString">
            <summary>设置 JsonHelper.OutResult(Boolean result, String msg) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimJsonHelper.OutResultBooleanStringBoolean">
            <summary>设置 JsonHelper.OutResult(Boolean result, String msg, Boolean noQuates) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimJsonHelper.OutResultStringObjectObjectArray">
            <summary>设置 JsonHelper.OutResult(String name, Object value, Object[] nameValues) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimJsonHelper.ReadJsonString">
            <summary>设置 JsonHelper.ReadJson(String filePath) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimJsonHelper.RowCountGet">
            <summary>设置 JsonHelper.get_RowCount() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimJsonHelper.RowCountSetInt32">
            <summary>设置 JsonHelper.set_RowCount(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimJsonHelper.RowOpGet">
            <summary>设置 JsonHelper.get_RowOp() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimJsonHelper.RowOpSetRowOp">
            <summary>设置 JsonHelper.set_RowOp(RowOp value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimJsonHelper.SetEscapeStringRef">
            <summary>设置 JsonHelper.SetEscape(String&amp; value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimJsonHelper.SplitArrayString">
            <summary>设置 JsonHelper.SplitArray(String jsonArray) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimJsonHelper.SplitString">
            <summary>设置 JsonHelper.Split(String json) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimJsonHelper.StaticConstructor">
            <summary>设置 JsonHelper.JsonHelper() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimJsonHelper.SuccessGet">
            <summary>设置 JsonHelper.get_Success() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimJsonHelper.ToJsonObject">
            <summary>设置 JsonHelper.ToJson(Object obj) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimJsonHelper.ToJsonObjectBoolean">
            <summary>设置 JsonHelper.ToJson(Object obj, Boolean isConvertNameToLower) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimJsonHelper.ToJsonObjectBooleanRowOp">
            <summary>设置 JsonHelper.ToJson(Object obj, Boolean isConvertNameToLower, RowOp rowOp) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimJsonHelper.ToJsonObjectBooleanRowOpEscapeOp">
            <summary>设置 JsonHelper.ToJson(Object obj, Boolean isConvertNameToLower, RowOp rowOp, EscapeOp escapeOp) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimJsonHelper.ToMDataTableStringMDataColumnEscapeOp">
            <summary>设置 JsonHelper.ToMDataTable(String jsonOrFileName, MDataColumn mdc, EscapeOp op) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimJsonHelper.ToString">
            <summary>设置 JsonHelper.ToString() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimJsonHelper.ToStringBoolean">
            <summary>设置 JsonHelper.ToString(Boolean arrayEnd) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimJsonHelper.ToXmlString">
            <summary>设置 JsonHelper.ToXml(String json) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimJsonHelper.ToXmlStringBoolean">
            <summary>设置 JsonHelper.ToXml(String json, Boolean isWithAttr) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimJsonHelper.ToXmlStringBooleanEscapeOp">
            <summary>设置 JsonHelper.ToXml(String json, Boolean isWithAttr, EscapeOp op) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimJsonHelper.ToXmlStringBooleanEscapeOpString">
            <summary>设置 JsonHelper.ToXml(String json, Boolean isWithAttr, EscapeOp op, String rootName) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimJsonHelper.TotalGet">
            <summary>设置 JsonHelper.get_Total() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimJsonHelper.TotalSetInt32">
            <summary>设置 JsonHelper.set_Total(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimJsonHelper.UnEscapeStringEscapeOp">
            <summary>设置 JsonHelper.UnEscape(String result, EscapeOp op) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimJsonHelper.XmlToJsonStringBoolean">
            <summary>设置 JsonHelper.XmlToJson(String xml, Boolean isWithAttr) 的 填充码</summary>
        </member>
        <member name="T:CYQ.Data.Tool.Fakes.ShimJsonHelper.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimJsonHelper.AllInstances.AddBr">
            <summary>设置 JsonHelper.AddBr() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimJsonHelper.AllInstances.AddFootStringString">
            <summary>设置 JsonHelper.AddFoot(String name, String value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimJsonHelper.AllInstances.AddFootStringStringBoolean">
            <summary>设置 JsonHelper.AddFoot(String name, String value, Boolean noQuotes) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimJsonHelper.AllInstances.AddStringObject">
            <summary>设置 JsonHelper.Add(String name, Object value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimJsonHelper.AllInstances.AddStringString">
            <summary>设置 JsonHelper.Add(String name, String value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimJsonHelper.AllInstances.AddStringStringBoolean">
            <summary>设置 JsonHelper.Add(String name, String value, Boolean noQuotes) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimJsonHelper.AllInstances.ErrorMsgGet">
            <summary>设置 JsonHelper.get_ErrorMsg() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimJsonHelper.AllInstances.ErrorMsgSetString">
            <summary>设置 JsonHelper.set_ErrorMsg(String value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimJsonHelper.AllInstances.FillEntityObject">
            <summary>设置 JsonHelper.FillEntity(Object entity) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimJsonHelper.AllInstances.FillMDataColumnBoolean">
            <summary>设置 JsonHelper.Fill(MDataColumn column, Boolean isFullSchema) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimJsonHelper.AllInstances.FillMDataRow">
            <summary>设置 JsonHelper.Fill(MDataRow row) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimJsonHelper.AllInstances.FillMDataTable">
            <summary>设置 JsonHelper.Fill(MDataTable table) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimJsonHelper.AllInstances.FillObject">
            <summary>设置 JsonHelper.Fill(Object obj) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimJsonHelper.AllInstances.FillString">
            <summary>设置 JsonHelper.Fill(String query) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimJsonHelper.AllInstances.FormatStringStringBoolean">
            <summary>设置 JsonHelper.Format(String name, String value, Boolean children) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimJsonHelper.AllInstances.RowCountGet">
            <summary>设置 JsonHelper.get_RowCount() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimJsonHelper.AllInstances.RowCountSetInt32">
            <summary>设置 JsonHelper.set_RowCount(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimJsonHelper.AllInstances.RowOpGet">
            <summary>设置 JsonHelper.get_RowOp() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimJsonHelper.AllInstances.RowOpSetRowOp">
            <summary>设置 JsonHelper.set_RowOp(RowOp value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimJsonHelper.AllInstances.SetEscapeStringRef">
            <summary>设置 JsonHelper.SetEscape(String&amp; value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimJsonHelper.AllInstances.SuccessGet">
            <summary>设置 JsonHelper.get_Success() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimJsonHelper.AllInstances.ToString01">
            <summary>设置 JsonHelper.ToString() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimJsonHelper.AllInstances.ToStringBoolean">
            <summary>设置 JsonHelper.ToString(Boolean arrayEnd) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimJsonHelper.AllInstances.TotalGet">
            <summary>设置 JsonHelper.get_Total() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimJsonHelper.AllInstances.TotalSetInt32">
            <summary>设置 JsonHelper.set_Total(Int32 value) 的 填充码</summary>
        </member>
        <member name="T:CYQ.Data.Tool.Fakes.ShimMDictionary`2">
            <summary>CYQ.Data.Tool.MDictionary`2 的填充码类型</summary>
        </member>
        <member name="M:CYQ.Data.Tool.Fakes.ShimMDictionary`2.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:CYQ.Data.Tool.Fakes.ShimMDictionary`2.#ctor(CYQ.Data.Tool.MDictionary{`0,`1})">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:CYQ.Data.Tool.Fakes.ShimMDictionary`2.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:CYQ.Data.Tool.Fakes.ShimMDictionary`2.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:CYQ.Data.Tool.Fakes.ShimMDictionary`2.Bind(System.Collections.ICollection)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:CYQ.Data.Tool.Fakes.ShimMDictionary`2.Bind(System.Collections.IDictionary)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:CYQ.Data.Tool.Fakes.ShimMDictionary`2.Bind(System.Collections.IEnumerable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:CYQ.Data.Tool.Fakes.ShimMDictionary`2.Bind(System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{`0,`1}})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:CYQ.Data.Tool.Fakes.ShimMDictionary`2.Bind(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:CYQ.Data.Tool.Fakes.ShimMDictionary`2.Bind(System.Collections.Generic.IDictionary{`0,`1})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:CYQ.Data.Tool.Fakes.ShimMDictionary`2.Bind(System.Runtime.Serialization.IDeserializationCallback)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:CYQ.Data.Tool.Fakes.ShimMDictionary`2.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimMDictionary`2.AddT0T1">
            <summary>设置 MDictionary`2.Add(!0 key, !1 value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimMDictionary`2.AddT0T1Int32">
            <summary>设置 MDictionary`2.Add(!0 key, !1 value, Int32 times) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimMDictionary`2.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimMDictionary`2.Clear">
            <summary>设置 MDictionary`2.Clear() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimMDictionary`2.Constructor">
            <summary>设置 MDictionary`2.MDictionary`2() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimMDictionary`2.ConstructorIEqualityComparerOfT0">
            <summary>设置 MDictionary`2.MDictionary`2(IEqualityComparer`1&lt;!0&gt; comparer) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimMDictionary`2.ConstructorInt32">
            <summary>设置 MDictionary`2.MDictionary`2(Int32 capacity) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimMDictionary`2.ConstructorInt32IEqualityComparerOfT0">
            <summary>设置 MDictionary`2.MDictionary`2(Int32 capacity, IEqualityComparer`1&lt;!0&gt; comparer) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimMDictionary`2.ConstructorSerializationInfoStreamingContext">
            <summary>设置 MDictionary`2.MDictionary`2(SerializationInfo info, StreamingContext context) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimMDictionary`2.ContainsKeyT0">
            <summary>设置 MDictionary`2.ContainsKey(!0 key) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimMDictionary`2.GetT0">
            <summary>设置 MDictionary`2.Get(!0 key) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimMDictionary`2.ItemGetInt32">
            <summary>设置 MDictionary`2.get_Item(Int32 index) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimMDictionary`2.ItemGetT0">
            <summary>设置 MDictionary`2.get_Item(!0 key) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimMDictionary`2.ItemSetInt32T1">
            <summary>设置 MDictionary`2.set_Item(Int32 index, !1 value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimMDictionary`2.ItemSetT0T1">
            <summary>设置 MDictionary`2.set_Item(!0 key, !1 value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimMDictionary`2.RemoveT0">
            <summary>设置 MDictionary`2.Remove(!0 key) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimMDictionary`2.RemoveT0Int32">
            <summary>设置 MDictionary`2.Remove(!0 key, Int32 times) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimMDictionary`2.SetT0T1">
            <summary>设置 MDictionary`2.Set(!0 key, !1 value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimMDictionary`2.StaticConstructor">
            <summary>设置 MDictionary`2.MDictionary`2() 的 填充码</summary>
        </member>
        <member name="T:CYQ.Data.Tool.Fakes.ShimMDictionary`2.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimMDictionary`2.AllInstances.AddT0T1">
            <summary>设置 MDictionary`2.Add(!0 key, !1 value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimMDictionary`2.AllInstances.AddT0T1Int32">
            <summary>设置 MDictionary`2.Add(!0 key, !1 value, Int32 times) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimMDictionary`2.AllInstances.Clear">
            <summary>设置 MDictionary`2.Clear() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimMDictionary`2.AllInstances.ContainsKeyT0">
            <summary>设置 MDictionary`2.ContainsKey(!0 key) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimMDictionary`2.AllInstances.GetT0">
            <summary>设置 MDictionary`2.Get(!0 key) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimMDictionary`2.AllInstances.ItemGetInt32">
            <summary>设置 MDictionary`2.get_Item(Int32 index) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimMDictionary`2.AllInstances.ItemGetT0">
            <summary>设置 MDictionary`2.get_Item(!0 key) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimMDictionary`2.AllInstances.ItemSetInt32T1">
            <summary>设置 MDictionary`2.set_Item(Int32 index, !1 value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimMDictionary`2.AllInstances.ItemSetT0T1">
            <summary>设置 MDictionary`2.set_Item(!0 key, !1 value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimMDictionary`2.AllInstances.RemoveT0">
            <summary>设置 MDictionary`2.Remove(!0 key) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimMDictionary`2.AllInstances.RemoveT0Int32">
            <summary>设置 MDictionary`2.Remove(!0 key, Int32 times) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimMDictionary`2.AllInstances.SetT0T1">
            <summary>设置 MDictionary`2.Set(!0 key, !1 value) 的 填充码</summary>
        </member>
        <member name="T:CYQ.Data.Tool.Fakes.ShimReflectTool">
            <summary>CYQ.Data.Tool.ReflectTool 的填充码类型</summary>
        </member>
        <member name="M:CYQ.Data.Tool.Fakes.ShimReflectTool.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:CYQ.Data.Tool.Fakes.ShimReflectTool.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:CYQ.Data.Tool.Fakes.ShimReflectTool.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimReflectTool.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimReflectTool.StaticConstructor">
            <summary>设置 ReflectTool.ReflectTool() 的 填充码</summary>
        </member>
        <member name="T:CYQ.Data.Tool.Fakes.ShimTableInfo">
            <summary>CYQ.Data.Tool.TableInfo 的填充码类型</summary>
        </member>
        <member name="M:CYQ.Data.Tool.Fakes.ShimTableInfo.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:CYQ.Data.Tool.Fakes.ShimTableInfo.#ctor(CYQ.Data.Tool.TableInfo)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:CYQ.Data.Tool.Fakes.ShimTableInfo.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:CYQ.Data.Tool.Fakes.ShimTableInfo.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimTableInfo.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimTableInfo.ColumnsGet">
            <summary>设置 TableInfo.get_Columns() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimTableInfo.Constructor">
            <summary>设置 TableInfo.TableInfo() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimTableInfo.ConstructorStringStringStringDBInfo">
            <summary>设置 TableInfo.TableInfo(String name, String type, String description, DBInfo dbInfo) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimTableInfo.DBInfoGet">
            <summary>设置 TableInfo.get_DBInfo() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimTableInfo.DescriptionGet">
            <summary>设置 TableInfo.get_Description() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimTableInfo.DescriptionSetString">
            <summary>设置 TableInfo.set_Description(String value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimTableInfo.GetHashKeyString">
            <summary>设置 TableInfo.GetHashKey(String name) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimTableInfo.NameGet">
            <summary>设置 TableInfo.get_Name() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimTableInfo.TypeGet">
            <summary>设置 TableInfo.get_Type() 的 填充码</summary>
        </member>
        <member name="T:CYQ.Data.Tool.Fakes.ShimTableInfo.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimTableInfo.AllInstances.ColumnsGet">
            <summary>设置 TableInfo.get_Columns() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimTableInfo.AllInstances.DBInfoGet">
            <summary>设置 TableInfo.get_DBInfo() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimTableInfo.AllInstances.DescriptionGet">
            <summary>设置 TableInfo.get_Description() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimTableInfo.AllInstances.DescriptionSetString">
            <summary>设置 TableInfo.set_Description(String value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimTableInfo.AllInstances.NameGet">
            <summary>设置 TableInfo.get_Name() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimTableInfo.AllInstances.TypeGet">
            <summary>设置 TableInfo.get_Type() 的 填充码</summary>
        </member>
        <member name="T:CYQ.Data.Tool.Fakes.ShimThreadBreak">
            <summary>CYQ.Data.Tool.ThreadBreak 的填充码类型</summary>
        </member>
        <member name="M:CYQ.Data.Tool.Fakes.ShimThreadBreak.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:CYQ.Data.Tool.Fakes.ShimThreadBreak.#ctor(CYQ.Data.Tool.ThreadBreak)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:CYQ.Data.Tool.Fakes.ShimThreadBreak.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:CYQ.Data.Tool.Fakes.ShimThreadBreak.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimThreadBreak.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimThreadBreak.ClearGlobalThread">
            <summary>设置 ThreadBreak.ClearGlobalThread() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimThreadBreak.ClearThreadBreakString">
            <summary>设置 ThreadBreak.ClearThreadBreak(String threadName) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimThreadBreak.ConstructorStringObject">
            <summary>设置 ThreadBreak.ThreadBreak(String threadName, Object threadID) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimThreadBreak.NeedToBreak">
            <summary>设置 ThreadBreak.NeedToBreak() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimThreadBreak.StaticConstructor">
            <summary>设置 ThreadBreak.ThreadBreak() 的 填充码</summary>
        </member>
        <member name="T:CYQ.Data.Tool.Fakes.ShimThreadBreak.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.ShimThreadBreak.AllInstances.NeedToBreak">
            <summary>设置 ThreadBreak.NeedToBreak() 的 填充码</summary>
        </member>
        <member name="T:CYQ.Data.Tool.Fakes.StubJsonHelper">
            <summary>CYQ.Data.Tool.JsonHelper 的存根类型</summary>
        </member>
        <member name="M:CYQ.Data.Tool.Fakes.StubJsonHelper.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:CYQ.Data.Tool.Fakes.StubJsonHelper.#ctor(System.Boolean)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:CYQ.Data.Tool.Fakes.StubJsonHelper.#ctor(System.Boolean,System.Boolean)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:CYQ.Data.Tool.Fakes.StubJsonHelper.InitializeStub">
            <summary>初始化 type StubJsonHelper 的新实例</summary>
        </member>
        <member name="M:CYQ.Data.Tool.Fakes.StubJsonHelper.ToString">
            <summary>设置 JsonHelper.ToString() 的 存根</summary>
        </member>
        <member name="F:CYQ.Data.Tool.Fakes.StubJsonHelper.ToString01">
            <summary>设置 JsonHelper.ToString() 的 stub</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.StubJsonHelper.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.StubJsonHelper.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.StubJsonHelper.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:CYQ.Data.Tool.Fakes.StubMDictionary`2">
            <summary>CYQ.Data.Tool.MDictionary`2 的存根类型</summary>
        </member>
        <member name="M:CYQ.Data.Tool.Fakes.StubMDictionary`2.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:CYQ.Data.Tool.Fakes.StubMDictionary`2.#ctor(System.Collections.Generic.IEqualityComparer{`0})">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:CYQ.Data.Tool.Fakes.StubMDictionary`2.#ctor(System.Int32)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:CYQ.Data.Tool.Fakes.StubMDictionary`2.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:CYQ.Data.Tool.Fakes.StubMDictionary`2.#ctor(System.Int32,System.Collections.Generic.IEqualityComparer{`0})">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:CYQ.Data.Tool.Fakes.StubMDictionary`2.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>设置 Dictionary`2.GetObjectData(SerializationInfo info, StreamingContext context) 的 存根</summary>
        </member>
        <member name="F:CYQ.Data.Tool.Fakes.StubMDictionary`2.GetObjectDataSerializationInfoStreamingContext">
            <summary>设置 Dictionary`2.GetObjectData(SerializationInfo info, StreamingContext context) 的 stub</summary>
        </member>
        <member name="M:CYQ.Data.Tool.Fakes.StubMDictionary`2.InitializeStub">
            <summary>初始化 type StubMDictionary 的新实例</summary>
        </member>
        <member name="M:CYQ.Data.Tool.Fakes.StubMDictionary`2.OnDeserialization(System.Object)">
            <summary>设置 Dictionary`2.OnDeserialization(Object sender) 的 存根</summary>
        </member>
        <member name="F:CYQ.Data.Tool.Fakes.StubMDictionary`2.OnDeserializationObject">
            <summary>设置 Dictionary`2.OnDeserialization(Object sender) 的 stub</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.StubMDictionary`2.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.StubMDictionary`2.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.StubMDictionary`2.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:CYQ.Data.Tool.Fakes.StubTableInfo">
            <summary>CYQ.Data.Tool.TableInfo 的存根类型</summary>
        </member>
        <member name="M:CYQ.Data.Tool.Fakes.StubTableInfo.#ctor(System.String,System.String,System.String,CYQ.Data.Tool.DBInfo)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:CYQ.Data.Tool.Fakes.StubTableInfo.InitializeStub">
            <summary>初始化 type StubTableInfo 的新实例</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.StubTableInfo.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.StubTableInfo.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.StubTableInfo.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:CYQ.Data.Tool.Fakes.StubThreadBreak">
            <summary>CYQ.Data.Tool.ThreadBreak 的存根类型</summary>
        </member>
        <member name="M:CYQ.Data.Tool.Fakes.StubThreadBreak.#ctor(System.String,System.Object)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:CYQ.Data.Tool.Fakes.StubThreadBreak.InitializeStub">
            <summary>初始化 type StubThreadBreak 的新实例</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.StubThreadBreak.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.StubThreadBreak.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:CYQ.Data.Tool.Fakes.StubThreadBreak.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:CYQ.Data.UI.Fakes.ShimMActionUI">
            <summary>CYQ.Data.UI.MActionUI 的填充码类型</summary>
        </member>
        <member name="M:CYQ.Data.UI.Fakes.ShimMActionUI.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:CYQ.Data.UI.Fakes.ShimMActionUI.#ctor(CYQ.Data.UI.MActionUI)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:CYQ.Data.UI.Fakes.ShimMActionUI.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:CYQ.Data.UI.Fakes.ShimMActionUI.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:CYQ.Data.UI.Fakes.ShimMActionUI.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:CYQ.Data.UI.Fakes.ShimMActionUI.AutoGetValueMDataCell">
            <summary>设置 MActionUI.AutoGetValue(MDataCell cell) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.UI.Fakes.ShimMActionUI.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:CYQ.Data.UI.Fakes.ShimMActionUI.BindObject">
            <summary>设置 MActionUI.Bind(Object control) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.UI.Fakes.ShimMActionUI.BindObjectObjectObjectObject">
            <summary>设置 MActionUI.Bind(Object control, Object where, Object text, Object value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.UI.Fakes.ShimMActionUI.BindObjectString">
            <summary>设置 MActionUI.Bind(Object control, String where) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.UI.Fakes.ShimMActionUI.Constructor">
            <summary>设置 MActionUI.MActionUI() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.UI.Fakes.ShimMActionUI.Dispose">
            <summary>设置 MActionUI.Dispose() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.UI.Fakes.ShimMActionUI.GetAllBoolean">
            <summary>设置 MActionUI.GetAll(Boolean isInsert) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.UI.Fakes.ShimMActionUI.GetAllOnWebBoolean">
            <summary>设置 MActionUI.GetAllOnWeb(Boolean isInsert) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.UI.Fakes.ShimMActionUI.GetAllOnWinBoolean">
            <summary>设置 MActionUI.GetAllOnWin(Boolean isInsert) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.UI.Fakes.ShimMActionUI.GetFrom2ObjectStringObject">
            <summary>设置 MActionUI.GetFrom2(Object control, String controlPropName, Object defaultValue) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.UI.Fakes.ShimMActionUI.GetFromObject">
            <summary>设置 MActionUI.GetFrom(Object control) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.UI.Fakes.ShimMActionUI.GetFromObjectString">
            <summary>设置 MActionUI.GetFrom(Object control, String controlPropName) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.UI.Fakes.ShimMActionUI.GetFromObjectStringObject">
            <summary>设置 MActionUI.GetFrom(Object control, String controlPropName, Object defaultValue) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.UI.Fakes.ShimMActionUI.GetObjectStringObject">
            <summary>设置 MActionUI.Get(Object ct, String ctPropName, Object defaultValue) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.UI.Fakes.ShimMActionUI.GetValueOnWebMDataCell">
            <summary>设置 MActionUI.GetValueOnWeb(MDataCell cell) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.UI.Fakes.ShimMActionUI.GetValueOnWebWinMDataCell">
            <summary>设置 MActionUI.GetValueOnWebWin(MDataCell cell) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.UI.Fakes.ShimMActionUI.IsOnAfterGetFromEventNullGet">
            <summary>设置 MActionUI.get_IsOnAfterGetFromEventNull() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.UI.Fakes.ShimMActionUI.PrimayAutoGetValue">
            <summary>设置 MActionUI.PrimayAutoGetValue() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.UI.Fakes.ShimMActionUI.SetAllObjectArray">
            <summary>设置 MActionUI.SetAll(Object[] parentControls) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.UI.Fakes.ShimMActionUI.SetAutoParentControlObjectObjectArray">
            <summary>设置 MActionUI.SetAutoParentControl(Object parent, Object[] otherParent) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.UI.Fakes.ShimMActionUI.SetAutoPrefixStringStringArray">
            <summary>设置 MActionUI.SetAutoPrefix(String autoPrefix, String[] otherPrefix) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.UI.Fakes.ShimMActionUI.SetDefaultPrefix">
            <summary>设置 MActionUI.SetDefaultPrefix() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.UI.Fakes.ShimMActionUI.SetObjectStringInt32Object">
            <summary>设置 MActionUI.Set(Object ct, String ctPropName, Int32 enabledState, Object forceValue) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.UI.Fakes.ShimMActionUI.SetToAllObjectObjectArray">
            <summary>设置 MActionUI.SetToAll(Object parentControl, Object[] otherParentControls) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.UI.Fakes.ShimMActionUI.SetToObject">
            <summary>设置 MActionUI.SetTo(Object control) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.UI.Fakes.ShimMActionUI.SetToObjectString">
            <summary>设置 MActionUI.SetTo(Object control, String controlPropName) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.UI.Fakes.ShimMActionUI.SetToObjectStringBoolean">
            <summary>设置 MActionUI.SetTo(Object control, String controlPropName, Boolean isControlEnabled) 的 填充码</summary>
        </member>
        <member name="T:CYQ.Data.UI.Fakes.ShimMActionUI.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:CYQ.Data.UI.Fakes.ShimMActionUI.AllInstances.AutoGetValueMDataCell">
            <summary>设置 MActionUI.AutoGetValue(MDataCell cell) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.UI.Fakes.ShimMActionUI.AllInstances.BindObject">
            <summary>设置 MActionUI.Bind(Object control) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.UI.Fakes.ShimMActionUI.AllInstances.BindObjectObjectObjectObject">
            <summary>设置 MActionUI.Bind(Object control, Object where, Object text, Object value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.UI.Fakes.ShimMActionUI.AllInstances.BindObjectString">
            <summary>设置 MActionUI.Bind(Object control, String where) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.UI.Fakes.ShimMActionUI.AllInstances.Dispose">
            <summary>设置 MActionUI.Dispose() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.UI.Fakes.ShimMActionUI.AllInstances.GetAllBoolean">
            <summary>设置 MActionUI.GetAll(Boolean isInsert) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.UI.Fakes.ShimMActionUI.AllInstances.GetAllOnWebBoolean">
            <summary>设置 MActionUI.GetAllOnWeb(Boolean isInsert) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.UI.Fakes.ShimMActionUI.AllInstances.GetAllOnWinBoolean">
            <summary>设置 MActionUI.GetAllOnWin(Boolean isInsert) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.UI.Fakes.ShimMActionUI.AllInstances.GetFrom2ObjectStringObject">
            <summary>设置 MActionUI.GetFrom2(Object control, String controlPropName, Object defaultValue) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.UI.Fakes.ShimMActionUI.AllInstances.GetFromObject">
            <summary>设置 MActionUI.GetFrom(Object control) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.UI.Fakes.ShimMActionUI.AllInstances.GetFromObjectString">
            <summary>设置 MActionUI.GetFrom(Object control, String controlPropName) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.UI.Fakes.ShimMActionUI.AllInstances.GetFromObjectStringObject">
            <summary>设置 MActionUI.GetFrom(Object control, String controlPropName, Object defaultValue) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.UI.Fakes.ShimMActionUI.AllInstances.GetObjectStringObject">
            <summary>设置 MActionUI.Get(Object ct, String ctPropName, Object defaultValue) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.UI.Fakes.ShimMActionUI.AllInstances.GetValueOnWebMDataCell">
            <summary>设置 MActionUI.GetValueOnWeb(MDataCell cell) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.UI.Fakes.ShimMActionUI.AllInstances.GetValueOnWebWinMDataCell">
            <summary>设置 MActionUI.GetValueOnWebWin(MDataCell cell) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.UI.Fakes.ShimMActionUI.AllInstances.IsOnAfterGetFromEventNullGet">
            <summary>设置 MActionUI.get_IsOnAfterGetFromEventNull() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.UI.Fakes.ShimMActionUI.AllInstances.PrimayAutoGetValue">
            <summary>设置 MActionUI.PrimayAutoGetValue() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.UI.Fakes.ShimMActionUI.AllInstances.SetAllObjectArray">
            <summary>设置 MActionUI.SetAll(Object[] parentControls) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.UI.Fakes.ShimMActionUI.AllInstances.SetAutoParentControlObjectObjectArray">
            <summary>设置 MActionUI.SetAutoParentControl(Object parent, Object[] otherParent) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.UI.Fakes.ShimMActionUI.AllInstances.SetAutoPrefixStringStringArray">
            <summary>设置 MActionUI.SetAutoPrefix(String autoPrefix, String[] otherPrefix) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.UI.Fakes.ShimMActionUI.AllInstances.SetDefaultPrefix">
            <summary>设置 MActionUI.SetDefaultPrefix() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.UI.Fakes.ShimMActionUI.AllInstances.SetObjectStringInt32Object">
            <summary>设置 MActionUI.Set(Object ct, String ctPropName, Int32 enabledState, Object forceValue) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.UI.Fakes.ShimMActionUI.AllInstances.SetToAllObjectObjectArray">
            <summary>设置 MActionUI.SetToAll(Object parentControl, Object[] otherParentControls) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.UI.Fakes.ShimMActionUI.AllInstances.SetToObject">
            <summary>设置 MActionUI.SetTo(Object control) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.UI.Fakes.ShimMActionUI.AllInstances.SetToObjectString">
            <summary>设置 MActionUI.SetTo(Object control, String controlPropName) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.UI.Fakes.ShimMActionUI.AllInstances.SetToObjectStringBoolean">
            <summary>设置 MActionUI.SetTo(Object control, String controlPropName, Boolean isControlEnabled) 的 填充码</summary>
        </member>
        <member name="T:CYQ.Data.UI.Fakes.ShimRegisterUI">
            <summary>CYQ.Data.UI.RegisterUI 的填充码类型</summary>
        </member>
        <member name="M:CYQ.Data.UI.Fakes.ShimRegisterUI.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:CYQ.Data.UI.Fakes.ShimRegisterUI.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:CYQ.Data.UI.Fakes.ShimRegisterUI.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:CYQ.Data.UI.Fakes.ShimRegisterUI.AddStringString">
            <summary>设置 RegisterUI.Add(String controlClassName, String propertyName) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.UI.Fakes.ShimRegisterUI.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:CYQ.Data.UI.Fakes.ShimRegisterUI.Clear">
            <summary>设置 RegisterUI.Clear() 的 填充码</summary>
        </member>
        <member name="T:CYQ.Data.UI.Fakes.StubIUIValue">
            <summary>CYQ.Data.UI.IUIValue 的存根类型</summary>
        </member>
        <member name="M:CYQ.Data.UI.Fakes.StubIUIValue.#ctor">
            <summary>初始化 type StubIUIValue 的新实例</summary>
        </member>
        <member name="M:CYQ.Data.UI.Fakes.StubIUIValue.AttachBackingFieldToMEnabled">
            <summary>附加委托以将 StubIUIValue.MEnabled 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:CYQ.Data.UI.Fakes.StubIUIValue.AttachBackingFieldToMValue">
            <summary>附加委托以将 StubIUIValue.MValue 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:CYQ.Data.UI.Fakes.StubIUIValue.MEnabledGet">
            <summary>设置 IUIValue.get_MEnabled() 的 stub</summary>
        </member>
        <member name="F:CYQ.Data.UI.Fakes.StubIUIValue.MEnabledSetBoolean">
            <summary>设置 IUIValue.set_MEnabled(Boolean value) 的 stub</summary>
        </member>
        <member name="F:CYQ.Data.UI.Fakes.StubIUIValue.MIDGet">
            <summary>设置 IUIValue.get_MID() 的 stub</summary>
        </member>
        <member name="F:CYQ.Data.UI.Fakes.StubIUIValue.MValueGet">
            <summary>设置 IUIValue.get_MValue() 的 stub</summary>
        </member>
        <member name="F:CYQ.Data.UI.Fakes.StubIUIValue.MValueSetObject">
            <summary>设置 IUIValue.set_MValue(Object value) 的 stub</summary>
        </member>
        <member name="P:CYQ.Data.UI.Fakes.StubIUIValue.cyqd::CYQ#Data#UI#IUIValue#MEnabled">
            <summary>设置 IUIValue.get_MEnabled() 的 stub</summary>
        </member>
        <member name="P:CYQ.Data.UI.Fakes.StubIUIValue.cyqd::CYQ#Data#UI#IUIValue#MID">
            <summary>设置 IUIValue.get_MID() 的 stub</summary>
        </member>
        <member name="P:CYQ.Data.UI.Fakes.StubIUIValue.cyqd::CYQ#Data#UI#IUIValue#MValue">
            <summary>设置 IUIValue.get_MValue() 的 stub</summary>
        </member>
        <member name="T:CYQ.Data.Xml.Fakes.ShimMutilLanguage">
            <summary>CYQ.Data.Xml.MutilLanguage 的填充码类型</summary>
        </member>
        <member name="M:CYQ.Data.Xml.Fakes.ShimMutilLanguage.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:CYQ.Data.Xml.Fakes.ShimMutilLanguage.#ctor(CYQ.Data.Xml.MutilLanguage)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:CYQ.Data.Xml.Fakes.ShimMutilLanguage.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:CYQ.Data.Xml.Fakes.ShimMutilLanguage.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:CYQ.Data.Xml.Fakes.ShimMutilLanguage.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimMutilLanguage.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimMutilLanguage.ConstructorString">
            <summary>设置 MutilLanguage.MutilLanguage(String filePath) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimMutilLanguage.ConstructorStringBoolean">
            <summary>设置 MutilLanguage.MutilLanguage(String filePath, Boolean isForHtml) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimMutilLanguage.ConstructorStringBooleanBoolean">
            <summary>设置 MutilLanguage.MutilLanguage(String filePath, Boolean isForHtml, Boolean isInitValueFromCookie) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimMutilLanguage.DefaultLanKeyGet">
            <summary>设置 MutilLanguage.get_DefaultLanKey() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimMutilLanguage.Dispose">
            <summary>设置 MutilLanguage.Dispose() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimMutilLanguage.FilePathGet">
            <summary>设置 MutilLanguage.get_FilePath() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimMutilLanguage.GetDefaultLangKey">
            <summary>设置 MutilLanguage.GetDefaultLangKey() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimMutilLanguage.GetKeyInt32">
            <summary>设置 MutilLanguage.GetKey(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimMutilLanguage.GetObject">
            <summary>设置 MutilLanguage.Get(Object lanID) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimMutilLanguage.GetObjectInt32">
            <summary>设置 MutilLanguage.Get(Object lanID, Int32 lanKeyID) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimMutilLanguage.GetObjectLanguageKey">
            <summary>设置 MutilLanguage.Get(Object lanID, LanguageKey lanEnum) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimMutilLanguage.GetValueString">
            <summary>设置 MutilLanguage.GetValue(String langKey) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimMutilLanguage.InitStringBooleanBoolean">
            <summary>设置 MutilLanguage.Init(String filePath, Boolean isForHtml, Boolean isInitValueFromCookie) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimMutilLanguage.LanKeyGet">
            <summary>设置 MutilLanguage.get_LanKey() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimMutilLanguage.LanKeySetLanguageKey">
            <summary>设置 MutilLanguage.set_LanKey(LanguageKey value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimMutilLanguage.SetLanKeyByCookie">
            <summary>设置 MutilLanguage.SetLanKeyByCookie() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimMutilLanguage.SetLanguageCookieString">
            <summary>设置 MutilLanguage.SetLanguageCookie(String lanKey) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimMutilLanguage.SetToCookieLanguageKey">
            <summary>设置 MutilLanguage.SetToCookie(LanguageKey lanKey) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimMutilLanguage.SetToCookieString">
            <summary>设置 MutilLanguage.SetToCookie(String lanKey) 的 填充码</summary>
        </member>
        <member name="T:CYQ.Data.Xml.Fakes.ShimMutilLanguage.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimMutilLanguage.AllInstances.DefaultLanKeyGet">
            <summary>设置 MutilLanguage.get_DefaultLanKey() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimMutilLanguage.AllInstances.Dispose">
            <summary>设置 MutilLanguage.Dispose() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimMutilLanguage.AllInstances.FilePathGet">
            <summary>设置 MutilLanguage.get_FilePath() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimMutilLanguage.AllInstances.GetDefaultLangKey">
            <summary>设置 MutilLanguage.GetDefaultLangKey() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimMutilLanguage.AllInstances.GetObject">
            <summary>设置 MutilLanguage.Get(Object lanID) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimMutilLanguage.AllInstances.GetObjectInt32">
            <summary>设置 MutilLanguage.Get(Object lanID, Int32 lanKeyID) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimMutilLanguage.AllInstances.GetObjectLanguageKey">
            <summary>设置 MutilLanguage.Get(Object lanID, LanguageKey lanEnum) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimMutilLanguage.AllInstances.InitStringBooleanBoolean">
            <summary>设置 MutilLanguage.Init(String filePath, Boolean isForHtml, Boolean isInitValueFromCookie) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimMutilLanguage.AllInstances.LanKeyGet">
            <summary>设置 MutilLanguage.get_LanKey() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimMutilLanguage.AllInstances.LanKeySetLanguageKey">
            <summary>设置 MutilLanguage.set_LanKey(LanguageKey value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimMutilLanguage.AllInstances.SetLanKeyByCookie">
            <summary>设置 MutilLanguage.SetLanKeyByCookie() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimMutilLanguage.AllInstances.SetToCookieLanguageKey">
            <summary>设置 MutilLanguage.SetToCookie(LanguageKey lanKey) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimMutilLanguage.AllInstances.SetToCookieString">
            <summary>设置 MutilLanguage.SetToCookie(String lanKey) 的 填充码</summary>
        </member>
        <member name="T:CYQ.Data.Xml.Fakes.ShimRss">
            <summary>CYQ.Data.Xml.Rss 的填充码类型</summary>
        </member>
        <member name="M:CYQ.Data.Xml.Fakes.ShimRss.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:CYQ.Data.Xml.Fakes.ShimRss.#ctor(CYQ.Data.Xml.Rss)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:CYQ.Data.Xml.Fakes.ShimRss.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:CYQ.Data.Xml.Fakes.ShimRss.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimRss.AddItemStringStringStringStringString">
            <summary>设置 Rss.AddItem(String title, String link, String author, String pubDate, String description) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimRss.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimRss.BuildRss">
            <summary>设置 Rss.BuildRss() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimRss.ChannelGet">
            <summary>设置 Rss.get_Channel() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimRss.Constructor">
            <summary>设置 Rss.Rss() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimRss.CreateNodeXmlNodeObject">
            <summary>设置 Rss.CreateNode(XmlNode parent, Object obj) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimRss.LoadDataMDataTable">
            <summary>设置 Rss.LoadData(MDataTable table) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimRss.OnForeachAddRssSetForeachEventHandler">
            <summary>设置 Rss.add_OnForeach(SetForeachEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimRss.OnForeachRemoveRssSetForeachEventHandler">
            <summary>设置 Rss.remove_OnForeach(SetForeachEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimRss.OutXmlGet">
            <summary>设置 Rss.get_OutXml() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimRss.SetImgStringStringString">
            <summary>设置 Rss.SetImg(String url, String title, String link) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimRss.SetMapRssItemNameStringObjectArray">
            <summary>设置 Rss.SetMap(RssItemName itemName, String formatText, Object[] tableColumnNames) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimRss.SetStringStringString">
            <summary>设置 Rss.Set(String title, String link, String description) 的 填充码</summary>
        </member>
        <member name="T:CYQ.Data.Xml.Fakes.ShimRss.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimRss.AllInstances.AddItemStringStringStringStringString">
            <summary>设置 Rss.AddItem(String title, String link, String author, String pubDate, String description) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimRss.AllInstances.BuildRss">
            <summary>设置 Rss.BuildRss() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimRss.AllInstances.ChannelGet">
            <summary>设置 Rss.get_Channel() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimRss.AllInstances.CreateNodeXmlNodeObject">
            <summary>设置 Rss.CreateNode(XmlNode parent, Object obj) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimRss.AllInstances.LoadDataMDataTable">
            <summary>设置 Rss.LoadData(MDataTable table) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimRss.AllInstances.OnForeachAddRssSetForeachEventHandler">
            <summary>设置 Rss.add_OnForeach(SetForeachEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimRss.AllInstances.OnForeachRemoveRssSetForeachEventHandler">
            <summary>设置 Rss.remove_OnForeach(SetForeachEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimRss.AllInstances.OutXmlGet">
            <summary>设置 Rss.get_OutXml() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimRss.AllInstances.SetImgStringStringString">
            <summary>设置 Rss.SetImg(String url, String title, String link) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimRss.AllInstances.SetMapRssItemNameStringObjectArray">
            <summary>设置 Rss.SetMap(RssItemName itemName, String formatText, Object[] tableColumnNames) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimRss.AllInstances.SetStringStringString">
            <summary>设置 Rss.Set(String title, String link, String description) 的 填充码</summary>
        </member>
        <member name="T:CYQ.Data.Xml.Fakes.ShimRssChannel">
            <summary>CYQ.Data.Xml.RssChannel 的填充码类型</summary>
        </member>
        <member name="M:CYQ.Data.Xml.Fakes.ShimRssChannel.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:CYQ.Data.Xml.Fakes.ShimRssChannel.#ctor(CYQ.Data.Xml.RssChannel)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:CYQ.Data.Xml.Fakes.ShimRssChannel.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:CYQ.Data.Xml.Fakes.ShimRssChannel.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimRssChannel.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimRssChannel.CategoryGet">
            <summary>设置 RssChannel.get_Category() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimRssChannel.CategorySetString">
            <summary>设置 RssChannel.set_Category(String value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimRssChannel.CloudGet">
            <summary>设置 RssChannel.get_Cloud() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimRssChannel.CloudSetString">
            <summary>设置 RssChannel.set_Cloud(String value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimRssChannel.Constructor">
            <summary>设置 RssChannel.RssChannel() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimRssChannel.CopyrightGet">
            <summary>设置 RssChannel.get_Copyright() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimRssChannel.CopyrightSetString">
            <summary>设置 RssChannel.set_Copyright(String value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimRssChannel.DescriptionGet">
            <summary>设置 RssChannel.get_Description() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimRssChannel.DescriptionSetString">
            <summary>设置 RssChannel.set_Description(String value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimRssChannel.DocsGet">
            <summary>设置 RssChannel.get_Docs() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimRssChannel.DocsSetString">
            <summary>设置 RssChannel.set_Docs(String value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimRssChannel.GeneratorGet">
            <summary>设置 RssChannel.get_Generator() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimRssChannel.GeneratorSetString">
            <summary>设置 RssChannel.set_Generator(String value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimRssChannel.ItemsGet">
            <summary>设置 RssChannel.get_Items() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimRssChannel.ItemsSetListOfRssItem">
            <summary>设置 RssChannel.set_Items(List`1&lt;RssItem&gt; value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimRssChannel.LanguageGet">
            <summary>设置 RssChannel.get_Language() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimRssChannel.LanguageSetString">
            <summary>设置 RssChannel.set_Language(String value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimRssChannel.LastBuildDateGet">
            <summary>设置 RssChannel.get_LastBuildDate() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimRssChannel.LastBuildDateSetString">
            <summary>设置 RssChannel.set_LastBuildDate(String value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimRssChannel.LinkGet">
            <summary>设置 RssChannel.get_Link() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimRssChannel.LinkSetString">
            <summary>设置 RssChannel.set_Link(String value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimRssChannel.ManagingEditorGet">
            <summary>设置 RssChannel.get_ManagingEditor() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimRssChannel.ManagingEditorSetString">
            <summary>设置 RssChannel.set_ManagingEditor(String value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimRssChannel.PubDateGet">
            <summary>设置 RssChannel.get_PubDate() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimRssChannel.PubDateSetString">
            <summary>设置 RssChannel.set_PubDate(String value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimRssChannel.RatingGet">
            <summary>设置 RssChannel.get_Rating() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimRssChannel.RatingSetString">
            <summary>设置 RssChannel.set_Rating(String value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimRssChannel.RssImageGet">
            <summary>设置 RssChannel.get_RssImage() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimRssChannel.RssImageSetString">
            <summary>设置 RssChannel.set_RssImage(String value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimRssChannel.SkipDaysGet">
            <summary>设置 RssChannel.get_SkipDays() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimRssChannel.SkipDaysSetString">
            <summary>设置 RssChannel.set_SkipDays(String value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimRssChannel.SkipHoursGet">
            <summary>设置 RssChannel.get_SkipHours() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimRssChannel.SkipHoursSetString">
            <summary>设置 RssChannel.set_SkipHours(String value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimRssChannel.TextInputGet">
            <summary>设置 RssChannel.get_TextInput() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimRssChannel.TextInputSetString">
            <summary>设置 RssChannel.set_TextInput(String value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimRssChannel.TitleGet">
            <summary>设置 RssChannel.get_Title() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimRssChannel.TitleSetString">
            <summary>设置 RssChannel.set_Title(String value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimRssChannel.TtlGet">
            <summary>设置 RssChannel.get_Ttl() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimRssChannel.TtlSetString">
            <summary>设置 RssChannel.set_Ttl(String value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimRssChannel.WebMasterGet">
            <summary>设置 RssChannel.get_WebMaster() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimRssChannel.WebMasterSetString">
            <summary>设置 RssChannel.set_WebMaster(String value) 的 填充码</summary>
        </member>
        <member name="T:CYQ.Data.Xml.Fakes.ShimRssChannel.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimRssChannel.AllInstances.CategoryGet">
            <summary>设置 RssChannel.get_Category() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimRssChannel.AllInstances.CategorySetString">
            <summary>设置 RssChannel.set_Category(String value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimRssChannel.AllInstances.CloudGet">
            <summary>设置 RssChannel.get_Cloud() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimRssChannel.AllInstances.CloudSetString">
            <summary>设置 RssChannel.set_Cloud(String value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimRssChannel.AllInstances.CopyrightGet">
            <summary>设置 RssChannel.get_Copyright() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimRssChannel.AllInstances.CopyrightSetString">
            <summary>设置 RssChannel.set_Copyright(String value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimRssChannel.AllInstances.DescriptionGet">
            <summary>设置 RssChannel.get_Description() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimRssChannel.AllInstances.DescriptionSetString">
            <summary>设置 RssChannel.set_Description(String value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimRssChannel.AllInstances.DocsGet">
            <summary>设置 RssChannel.get_Docs() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimRssChannel.AllInstances.DocsSetString">
            <summary>设置 RssChannel.set_Docs(String value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimRssChannel.AllInstances.GeneratorGet">
            <summary>设置 RssChannel.get_Generator() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimRssChannel.AllInstances.GeneratorSetString">
            <summary>设置 RssChannel.set_Generator(String value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimRssChannel.AllInstances.ItemsGet">
            <summary>设置 RssChannel.get_Items() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimRssChannel.AllInstances.ItemsSetListOfRssItem">
            <summary>设置 RssChannel.set_Items(List`1&lt;RssItem&gt; value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimRssChannel.AllInstances.LanguageGet">
            <summary>设置 RssChannel.get_Language() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimRssChannel.AllInstances.LanguageSetString">
            <summary>设置 RssChannel.set_Language(String value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimRssChannel.AllInstances.LastBuildDateGet">
            <summary>设置 RssChannel.get_LastBuildDate() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimRssChannel.AllInstances.LastBuildDateSetString">
            <summary>设置 RssChannel.set_LastBuildDate(String value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimRssChannel.AllInstances.LinkGet">
            <summary>设置 RssChannel.get_Link() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimRssChannel.AllInstances.LinkSetString">
            <summary>设置 RssChannel.set_Link(String value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimRssChannel.AllInstances.ManagingEditorGet">
            <summary>设置 RssChannel.get_ManagingEditor() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimRssChannel.AllInstances.ManagingEditorSetString">
            <summary>设置 RssChannel.set_ManagingEditor(String value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimRssChannel.AllInstances.PubDateGet">
            <summary>设置 RssChannel.get_PubDate() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimRssChannel.AllInstances.PubDateSetString">
            <summary>设置 RssChannel.set_PubDate(String value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimRssChannel.AllInstances.RatingGet">
            <summary>设置 RssChannel.get_Rating() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimRssChannel.AllInstances.RatingSetString">
            <summary>设置 RssChannel.set_Rating(String value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimRssChannel.AllInstances.RssImageGet">
            <summary>设置 RssChannel.get_RssImage() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimRssChannel.AllInstances.RssImageSetString">
            <summary>设置 RssChannel.set_RssImage(String value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimRssChannel.AllInstances.SkipDaysGet">
            <summary>设置 RssChannel.get_SkipDays() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimRssChannel.AllInstances.SkipDaysSetString">
            <summary>设置 RssChannel.set_SkipDays(String value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimRssChannel.AllInstances.SkipHoursGet">
            <summary>设置 RssChannel.get_SkipHours() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimRssChannel.AllInstances.SkipHoursSetString">
            <summary>设置 RssChannel.set_SkipHours(String value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimRssChannel.AllInstances.TextInputGet">
            <summary>设置 RssChannel.get_TextInput() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimRssChannel.AllInstances.TextInputSetString">
            <summary>设置 RssChannel.set_TextInput(String value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimRssChannel.AllInstances.TitleGet">
            <summary>设置 RssChannel.get_Title() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimRssChannel.AllInstances.TitleSetString">
            <summary>设置 RssChannel.set_Title(String value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimRssChannel.AllInstances.TtlGet">
            <summary>设置 RssChannel.get_Ttl() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimRssChannel.AllInstances.TtlSetString">
            <summary>设置 RssChannel.set_Ttl(String value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimRssChannel.AllInstances.WebMasterGet">
            <summary>设置 RssChannel.get_WebMaster() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimRssChannel.AllInstances.WebMasterSetString">
            <summary>设置 RssChannel.set_WebMaster(String value) 的 填充码</summary>
        </member>
        <member name="T:CYQ.Data.Xml.Fakes.ShimRssImage">
            <summary>CYQ.Data.Xml.RssImage 的填充码类型</summary>
        </member>
        <member name="M:CYQ.Data.Xml.Fakes.ShimRssImage.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:CYQ.Data.Xml.Fakes.ShimRssImage.#ctor(CYQ.Data.Xml.RssImage)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:CYQ.Data.Xml.Fakes.ShimRssImage.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:CYQ.Data.Xml.Fakes.ShimRssImage.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimRssImage.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimRssImage.Constructor">
            <summary>设置 RssImage.RssImage() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimRssImage.DescriptionGet">
            <summary>设置 RssImage.get_Description() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimRssImage.DescriptionSetString">
            <summary>设置 RssImage.set_Description(String value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimRssImage.LinkGet">
            <summary>设置 RssImage.get_Link() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimRssImage.LinkSetString">
            <summary>设置 RssImage.set_Link(String value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimRssImage.TitleGet">
            <summary>设置 RssImage.get_Title() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimRssImage.TitleSetString">
            <summary>设置 RssImage.set_Title(String value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimRssImage.UrlGet">
            <summary>设置 RssImage.get_Url() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimRssImage.UrlSetString">
            <summary>设置 RssImage.set_Url(String value) 的 填充码</summary>
        </member>
        <member name="T:CYQ.Data.Xml.Fakes.ShimRssImage.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimRssImage.AllInstances.DescriptionGet">
            <summary>设置 RssImage.get_Description() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimRssImage.AllInstances.DescriptionSetString">
            <summary>设置 RssImage.set_Description(String value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimRssImage.AllInstances.LinkGet">
            <summary>设置 RssImage.get_Link() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimRssImage.AllInstances.LinkSetString">
            <summary>设置 RssImage.set_Link(String value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimRssImage.AllInstances.TitleGet">
            <summary>设置 RssImage.get_Title() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimRssImage.AllInstances.TitleSetString">
            <summary>设置 RssImage.set_Title(String value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimRssImage.AllInstances.UrlGet">
            <summary>设置 RssImage.get_Url() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimRssImage.AllInstances.UrlSetString">
            <summary>设置 RssImage.set_Url(String value) 的 填充码</summary>
        </member>
        <member name="T:CYQ.Data.Xml.Fakes.ShimRssItem">
            <summary>CYQ.Data.Xml.RssItem 的填充码类型</summary>
        </member>
        <member name="M:CYQ.Data.Xml.Fakes.ShimRssItem.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:CYQ.Data.Xml.Fakes.ShimRssItem.#ctor(CYQ.Data.Xml.RssItem)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:CYQ.Data.Xml.Fakes.ShimRssItem.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:CYQ.Data.Xml.Fakes.ShimRssItem.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimRssItem.AuthorGet">
            <summary>设置 RssItem.get_Author() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimRssItem.AuthorSetString">
            <summary>设置 RssItem.set_Author(String value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimRssItem.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimRssItem.CategoryGet">
            <summary>设置 RssItem.get_Category() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimRssItem.CategorySetString">
            <summary>设置 RssItem.set_Category(String value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimRssItem.CommentsGet">
            <summary>设置 RssItem.get_Comments() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimRssItem.CommentsSetString">
            <summary>设置 RssItem.set_Comments(String value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimRssItem.Constructor">
            <summary>设置 RssItem.RssItem() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimRssItem.DescriptionGet">
            <summary>设置 RssItem.get_Description() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimRssItem.DescriptionSetString">
            <summary>设置 RssItem.set_Description(String value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimRssItem.EnclosureGet">
            <summary>设置 RssItem.get_Enclosure() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimRssItem.EnclosureSetString">
            <summary>设置 RssItem.set_Enclosure(String value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimRssItem.GuidGet">
            <summary>设置 RssItem.get_Guid() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimRssItem.GuidSetString">
            <summary>设置 RssItem.set_Guid(String value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimRssItem.LinkGet">
            <summary>设置 RssItem.get_Link() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimRssItem.LinkSetString">
            <summary>设置 RssItem.set_Link(String value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimRssItem.PubDateGet">
            <summary>设置 RssItem.get_PubDate() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimRssItem.PubDateSetString">
            <summary>设置 RssItem.set_PubDate(String value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimRssItem.SourceGet">
            <summary>设置 RssItem.get_Source() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimRssItem.SourceSetString">
            <summary>设置 RssItem.set_Source(String value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimRssItem.TitleGet">
            <summary>设置 RssItem.get_Title() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimRssItem.TitleSetString">
            <summary>设置 RssItem.set_Title(String value) 的 填充码</summary>
        </member>
        <member name="T:CYQ.Data.Xml.Fakes.ShimRssItem.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimRssItem.AllInstances.AuthorGet">
            <summary>设置 RssItem.get_Author() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimRssItem.AllInstances.AuthorSetString">
            <summary>设置 RssItem.set_Author(String value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimRssItem.AllInstances.CategoryGet">
            <summary>设置 RssItem.get_Category() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimRssItem.AllInstances.CategorySetString">
            <summary>设置 RssItem.set_Category(String value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimRssItem.AllInstances.CommentsGet">
            <summary>设置 RssItem.get_Comments() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimRssItem.AllInstances.CommentsSetString">
            <summary>设置 RssItem.set_Comments(String value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimRssItem.AllInstances.DescriptionGet">
            <summary>设置 RssItem.get_Description() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimRssItem.AllInstances.DescriptionSetString">
            <summary>设置 RssItem.set_Description(String value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimRssItem.AllInstances.EnclosureGet">
            <summary>设置 RssItem.get_Enclosure() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimRssItem.AllInstances.EnclosureSetString">
            <summary>设置 RssItem.set_Enclosure(String value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimRssItem.AllInstances.GuidGet">
            <summary>设置 RssItem.get_Guid() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimRssItem.AllInstances.GuidSetString">
            <summary>设置 RssItem.set_Guid(String value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimRssItem.AllInstances.LinkGet">
            <summary>设置 RssItem.get_Link() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimRssItem.AllInstances.LinkSetString">
            <summary>设置 RssItem.set_Link(String value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimRssItem.AllInstances.PubDateGet">
            <summary>设置 RssItem.get_PubDate() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimRssItem.AllInstances.PubDateSetString">
            <summary>设置 RssItem.set_PubDate(String value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimRssItem.AllInstances.SourceGet">
            <summary>设置 RssItem.get_Source() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimRssItem.AllInstances.SourceSetString">
            <summary>设置 RssItem.set_Source(String value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimRssItem.AllInstances.TitleGet">
            <summary>设置 RssItem.get_Title() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimRssItem.AllInstances.TitleSetString">
            <summary>设置 RssItem.set_Title(String value) 的 填充码</summary>
        </member>
        <member name="T:CYQ.Data.Xml.Fakes.ShimValueReplace">
            <summary>CYQ.Data.Xml.ValueReplace 的填充码类型</summary>
        </member>
        <member name="M:CYQ.Data.Xml.Fakes.ShimValueReplace.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:CYQ.Data.Xml.Fakes.ShimValueReplace.#ctor(CYQ.Data.Xml.ValueReplace)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:CYQ.Data.Xml.Fakes.ShimValueReplace.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:CYQ.Data.Xml.Fakes.ShimValueReplace.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimValueReplace.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimValueReplace.Constructor">
            <summary>设置 ValueReplace.ValueReplace() 的 填充码</summary>
        </member>
        <member name="T:CYQ.Data.Xml.Fakes.ShimValueReplace.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:CYQ.Data.Xml.Fakes.ShimXHtmlAction">
            <summary>CYQ.Data.Xml.XHtmlAction 的填充码类型</summary>
        </member>
        <member name="M:CYQ.Data.Xml.Fakes.ShimXHtmlAction.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:CYQ.Data.Xml.Fakes.ShimXHtmlAction.#ctor(CYQ.Data.Xml.XHtmlAction)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:CYQ.Data.Xml.Fakes.ShimXHtmlAction.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:CYQ.Data.Xml.Fakes.ShimXHtmlAction.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:CYQ.Data.Xml.Fakes.ShimXHtmlAction.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimXHtmlAction.AppendNodeXmlNodeXmlNode">
            <summary>设置 XHtmlAction.AppendNode(XmlNode parentNode, XmlNode childNode) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimXHtmlAction.AppendNodeXmlNodeXmlNodeInt32">
            <summary>设置 XHtmlAction.AppendNode(XmlNode parentNode, XmlNode childNode, Int32 position) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimXHtmlAction.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimXHtmlAction.ClearXmlNode">
            <summary>设置 XHtmlAction.Clear(XmlNode node) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimXHtmlAction.Constructor">
            <summary>设置 XHtmlAction.XHtmlAction() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimXHtmlAction.ConstructorBoolean">
            <summary>设置 XHtmlAction.XHtmlAction(Boolean isForHtml) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimXHtmlAction.ConstructorBooleanBoolean">
            <summary>设置 XHtmlAction.XHtmlAction(Boolean isForHtml, Boolean isNoClone) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimXHtmlAction.ConstructorString">
            <summary>设置 XHtmlAction.XHtmlAction(String nameSpaceUrl) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimXHtmlAction.ContainsString">
            <summary>设置 XHtmlAction.Contains(String idOrName) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimXHtmlAction.ContainsStringXmlNode">
            <summary>设置 XHtmlAction.Contains(String idOrName, XmlNode parentNode) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimXHtmlAction.CreateNodeStringStringStringArray">
            <summary>设置 XHtmlAction.CreateNode(String tag, String text, String[] attrAndValue) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimXHtmlAction.CreateNodeToXmlNodeStringStringStringArray">
            <summary>设置 XHtmlAction.CreateNodeTo(XmlNode parentNode, String tag, String text, String[] attrAndValue) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimXHtmlAction.Dispose">
            <summary>设置 XHtmlAction.Dispose() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimXHtmlAction.GetAttrValueStringStringStringArray">
            <summary>设置 XHtmlAction.GetAttrValue(String idOrName, String attrName, String[] defaultValue) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimXHtmlAction.GetAttrValueXmlNodeStringStringArray">
            <summary>设置 XHtmlAction.GetAttrValue(XmlNode node, String attrName, String[] defaultValue) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimXHtmlAction.GetByIDString">
            <summary>设置 XHtmlAction.GetByID(String id) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimXHtmlAction.GetByIDStringXmlNode">
            <summary>设置 XHtmlAction.GetByID(String id, XmlNode parentNode) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimXHtmlAction.GetByNameString">
            <summary>设置 XHtmlAction.GetByName(String name) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimXHtmlAction.GetByNameStringXmlNode">
            <summary>设置 XHtmlAction.GetByName(String name, XmlNode parentNode) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimXHtmlAction.GetChildJsonXmlNodeBoolean">
            <summary>设置 XHtmlAction.GetChildJson(XmlNode parent, Boolean isWithAttr) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimXHtmlAction.GetListString">
            <summary>设置 XHtmlAction.GetList(String tag) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimXHtmlAction.GetListStringString">
            <summary>设置 XHtmlAction.GetList(String tag, String attr) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimXHtmlAction.GetListStringStringString">
            <summary>设置 XHtmlAction.GetList(String tag, String attr, String value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimXHtmlAction.GetListStringStringStringXmlNode">
            <summary>设置 XHtmlAction.GetList(String tag, String attr, String value, XmlNode parentNode) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimXHtmlAction.GetListStringStringXmlNode">
            <summary>设置 XHtmlAction.GetList(String tag, String attr, XmlNode parentNode) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimXHtmlAction.GetListStringXmlNode">
            <summary>设置 XHtmlAction.GetList(String tag, XmlNode parentNode) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimXHtmlAction.GetRootJsonXmlNodeBoolean">
            <summary>设置 XHtmlAction.GetRootJson(XmlNode root, Boolean isWithAttr) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimXHtmlAction.GetRowValueString">
            <summary>设置 XHtmlAction.GetRowValue(String idOrName) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimXHtmlAction.GetString">
            <summary>设置 XHtmlAction.Get(String idOrName) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimXHtmlAction.GetStringStringStringXmlNode">
            <summary>设置 XHtmlAction.Get(String tag, String attr, String value, XmlNode parentNode) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimXHtmlAction.GetStringXmlNode">
            <summary>设置 XHtmlAction.Get(String idOrName, XmlNode parentNode) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimXHtmlAction.GetValueByKeyValueString">
            <summary>设置 XHtmlAction.GetValueByKeyValue(String columnName) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimXHtmlAction.GetValueByRequestStringString">
            <summary>设置 XHtmlAction.GetValueByRequest(String columnName, String key) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimXHtmlAction.GetValueByTableStringStringMDictionaryOfStringStringMDataRow">
            <summary>设置 XHtmlAction.GetValueByTable(String columnName, String key, MDictionary`2&lt;String,String&gt; values, MDataRow row) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimXHtmlAction.HasAttrStringString">
            <summary>设置 XHtmlAction.HasAttr(String idOrName, String attrName) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimXHtmlAction.HasAttrXmlNodeString">
            <summary>设置 XHtmlAction.HasAttr(XmlNode node, String attrName) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimXHtmlAction.InsertAfterXmlNodeXmlNode">
            <summary>设置 XHtmlAction.InsertAfter(XmlNode newNode, XmlNode refNode) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimXHtmlAction.InsertBeforeXmlNodeXmlNode">
            <summary>设置 XHtmlAction.InsertBefore(XmlNode newNode, XmlNode refNode) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimXHtmlAction.InterChangeXmlNodeXmlNode">
            <summary>设置 XHtmlAction.InterChange(XmlNode xNodeFirst, XmlNode xNodeLast) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimXHtmlAction.IsCurrentLangGet">
            <summary>设置 XHtmlAction.get_IsCurrentLang() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimXHtmlAction.IsCurrentLangSetBoolean">
            <summary>设置 XHtmlAction.set_IsCurrentLang(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimXHtmlAction.LoadDataMDataRow">
            <summary>设置 XHtmlAction.LoadData(MDataRow row) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimXHtmlAction.LoadDataMDataRowString">
            <summary>设置 XHtmlAction.LoadData(MDataRow row, String pre) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimXHtmlAction.LoadDataMDataTable">
            <summary>设置 XHtmlAction.LoadData(MDataTable table) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimXHtmlAction.LoadDataObject">
            <summary>设置 XHtmlAction.LoadData(Object anyObjToTable) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimXHtmlAction.LoadDataObjectString">
            <summary>设置 XHtmlAction.LoadData(Object anyObjToRow, String pre) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimXHtmlAction.OnForeachAddXHtmlActionSetForeachEventHandler">
            <summary>设置 XHtmlAction.add_OnForeach(SetForeachEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimXHtmlAction.OnForeachRemoveXHtmlActionSetForeachEventHandler">
            <summary>设置 XHtmlAction.remove_OnForeach(SetForeachEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimXHtmlAction.OutXmlGet">
            <summary>设置 XHtmlAction.get_OutXml() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimXHtmlAction.RemoveAllChildString">
            <summary>设置 XHtmlAction.RemoveAllChild(String idOrName) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimXHtmlAction.RemoveAllChildXmlNode">
            <summary>设置 XHtmlAction.RemoveAllChild(XmlNode node) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimXHtmlAction.RemoveAttrListStringArray">
            <summary>设置 XHtmlAction.RemoveAttrList(String[] attrNames) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimXHtmlAction.RemoveAttrListStringSetType">
            <summary>设置 XHtmlAction.RemoveAttrList(String attrName, SetType excludeSetType) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimXHtmlAction.RemoveAttrStringStringArray">
            <summary>设置 XHtmlAction.RemoveAttr(String idOrName, String[] attrNames) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimXHtmlAction.RemoveAttrXmlNodeStringArray">
            <summary>设置 XHtmlAction.RemoveAttr(XmlNode node, String[] attrNames) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimXHtmlAction.RemoveChildStringInt32">
            <summary>设置 XHtmlAction.RemoveChild(String idOrName, Int32 start) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimXHtmlAction.RemoveChildXmlNodeInt32">
            <summary>设置 XHtmlAction.RemoveChild(XmlNode node, Int32 start) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimXHtmlAction.RemoveCommentNode">
            <summary>设置 XHtmlAction.RemoveCommentNode() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimXHtmlAction.RemoveCommentNodeXmlNode">
            <summary>设置 XHtmlAction.RemoveCommentNode(XmlNode node) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimXHtmlAction.RemoveString">
            <summary>设置 XHtmlAction.Remove(String idOrName) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimXHtmlAction.RemoveXmlNode">
            <summary>设置 XHtmlAction.Remove(XmlNode node) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimXHtmlAction.ReplaceCustomFlagStringMDictionaryOfStringStringMDataRow">
            <summary>设置 XHtmlAction.ReplaceCustomFlag(String html, MDictionary`2&lt;String,String&gt; values, MDataRow row) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimXHtmlAction.ReplaceNodeXmlNodeString">
            <summary>设置 XHtmlAction.ReplaceNode(XmlNode newNode, String oldNodeIDorName) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimXHtmlAction.ReplaceNodeXmlNodeXmlNode">
            <summary>设置 XHtmlAction.ReplaceNode(XmlNode newNode, XmlNode oldNode) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimXHtmlAction.SetAttrValueXmlNodeStringString">
            <summary>设置 XHtmlAction.SetAttrValue(XmlNode node, String key, String value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimXHtmlAction.SetForString">
            <summary>设置 XHtmlAction.SetFor(String idOrName) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimXHtmlAction.SetForStringSetType">
            <summary>设置 XHtmlAction.SetFor(String idOrName, SetType setType) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimXHtmlAction.SetForStringSetTypeStringArray">
            <summary>设置 XHtmlAction.SetFor(String idOrName, SetType setType, String[] values) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimXHtmlAction.SetForeach">
            <summary>设置 XHtmlAction.SetForeach() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimXHtmlAction.SetForeachStringSetTypeObjectArray">
            <summary>设置 XHtmlAction.SetForeach(String idOrName, SetType setType, Object[] formatValues) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimXHtmlAction.SetForeachStringStringObjectArray">
            <summary>设置 XHtmlAction.SetForeach(String idOrName, String text, Object[] formatValues) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimXHtmlAction.SetForeachXmlNodeStringObjectArray">
            <summary>设置 XHtmlAction.SetForeach(XmlNode node, String text, Object[] formatValues) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimXHtmlAction.SetStringSetTypeStringArray">
            <summary>设置 XHtmlAction.Set(String idOrName, SetType setType, String[] values) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimXHtmlAction.SetStringString">
            <summary>设置 XHtmlAction.Set(String idOrName, String value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimXHtmlAction.SetValueStringStringBoolean">
            <summary>设置 XHtmlAction.SetValue(String sourceValue, String newValue, Boolean addCData) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimXHtmlAction.SetXmlNodeSetTypeStringArray">
            <summary>设置 XHtmlAction.Set(XmlNode node, SetType setType, String[] values) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimXHtmlAction.SetXmlNodeStringSetTypeStringArray">
            <summary>设置 XHtmlAction.Set(XmlNode parentNode, String idOrName, SetType setType, String[] values) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimXHtmlAction.SetXmlNodeStringString">
            <summary>设置 XHtmlAction.Set(XmlNode parentNode, String idOrName, String value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimXHtmlAction.ToJson">
            <summary>设置 XHtmlAction.ToJson() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimXHtmlAction.ToJsonXmlNodeBoolean">
            <summary>设置 XHtmlAction.ToJson(XmlNode parent, Boolean isWithAttr) 的 填充码</summary>
        </member>
        <member name="T:CYQ.Data.Xml.Fakes.ShimXHtmlAction.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimXHtmlAction.AllInstances.AppendNodeXmlNodeXmlNode">
            <summary>设置 XHtmlAction.AppendNode(XmlNode parentNode, XmlNode childNode) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimXHtmlAction.AllInstances.AppendNodeXmlNodeXmlNodeInt32">
            <summary>设置 XHtmlAction.AppendNode(XmlNode parentNode, XmlNode childNode, Int32 position) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimXHtmlAction.AllInstances.ClearXmlNode">
            <summary>设置 XHtmlAction.Clear(XmlNode node) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimXHtmlAction.AllInstances.ContainsString">
            <summary>设置 XHtmlAction.Contains(String idOrName) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimXHtmlAction.AllInstances.ContainsStringXmlNode">
            <summary>设置 XHtmlAction.Contains(String idOrName, XmlNode parentNode) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimXHtmlAction.AllInstances.CreateNodeStringStringStringArray">
            <summary>设置 XHtmlAction.CreateNode(String tag, String text, String[] attrAndValue) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimXHtmlAction.AllInstances.CreateNodeToXmlNodeStringStringStringArray">
            <summary>设置 XHtmlAction.CreateNodeTo(XmlNode parentNode, String tag, String text, String[] attrAndValue) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimXHtmlAction.AllInstances.Dispose">
            <summary>设置 XHtmlAction.Dispose() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimXHtmlAction.AllInstances.GetAttrValueStringStringStringArray">
            <summary>设置 XHtmlAction.GetAttrValue(String idOrName, String attrName, String[] defaultValue) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimXHtmlAction.AllInstances.GetAttrValueXmlNodeStringStringArray">
            <summary>设置 XHtmlAction.GetAttrValue(XmlNode node, String attrName, String[] defaultValue) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimXHtmlAction.AllInstances.GetByIDString">
            <summary>设置 XHtmlAction.GetByID(String id) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimXHtmlAction.AllInstances.GetByIDStringXmlNode">
            <summary>设置 XHtmlAction.GetByID(String id, XmlNode parentNode) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimXHtmlAction.AllInstances.GetByNameString">
            <summary>设置 XHtmlAction.GetByName(String name) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimXHtmlAction.AllInstances.GetByNameStringXmlNode">
            <summary>设置 XHtmlAction.GetByName(String name, XmlNode parentNode) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimXHtmlAction.AllInstances.GetChildJsonXmlNodeBoolean">
            <summary>设置 XHtmlAction.GetChildJson(XmlNode parent, Boolean isWithAttr) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimXHtmlAction.AllInstances.GetListString">
            <summary>设置 XHtmlAction.GetList(String tag) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimXHtmlAction.AllInstances.GetListStringString">
            <summary>设置 XHtmlAction.GetList(String tag, String attr) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimXHtmlAction.AllInstances.GetListStringStringString">
            <summary>设置 XHtmlAction.GetList(String tag, String attr, String value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimXHtmlAction.AllInstances.GetListStringStringStringXmlNode">
            <summary>设置 XHtmlAction.GetList(String tag, String attr, String value, XmlNode parentNode) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimXHtmlAction.AllInstances.GetListStringStringXmlNode">
            <summary>设置 XHtmlAction.GetList(String tag, String attr, XmlNode parentNode) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimXHtmlAction.AllInstances.GetListStringXmlNode">
            <summary>设置 XHtmlAction.GetList(String tag, XmlNode parentNode) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimXHtmlAction.AllInstances.GetRootJsonXmlNodeBoolean">
            <summary>设置 XHtmlAction.GetRootJson(XmlNode root, Boolean isWithAttr) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimXHtmlAction.AllInstances.GetRowValueString">
            <summary>设置 XHtmlAction.GetRowValue(String idOrName) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimXHtmlAction.AllInstances.GetString">
            <summary>设置 XHtmlAction.Get(String idOrName) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimXHtmlAction.AllInstances.GetStringStringStringXmlNode">
            <summary>设置 XHtmlAction.Get(String tag, String attr, String value, XmlNode parentNode) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimXHtmlAction.AllInstances.GetStringXmlNode">
            <summary>设置 XHtmlAction.Get(String idOrName, XmlNode parentNode) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimXHtmlAction.AllInstances.GetValueByKeyValueString">
            <summary>设置 XHtmlAction.GetValueByKeyValue(String columnName) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimXHtmlAction.AllInstances.GetValueByRequestStringString">
            <summary>设置 XHtmlAction.GetValueByRequest(String columnName, String key) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimXHtmlAction.AllInstances.GetValueByTableStringStringMDictionaryOfStringStringMDataRow">
            <summary>设置 XHtmlAction.GetValueByTable(String columnName, String key, MDictionary`2&lt;String,String&gt; values, MDataRow row) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimXHtmlAction.AllInstances.HasAttrStringString">
            <summary>设置 XHtmlAction.HasAttr(String idOrName, String attrName) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimXHtmlAction.AllInstances.HasAttrXmlNodeString">
            <summary>设置 XHtmlAction.HasAttr(XmlNode node, String attrName) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimXHtmlAction.AllInstances.InsertAfterXmlNodeXmlNode">
            <summary>设置 XHtmlAction.InsertAfter(XmlNode newNode, XmlNode refNode) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimXHtmlAction.AllInstances.InsertBeforeXmlNodeXmlNode">
            <summary>设置 XHtmlAction.InsertBefore(XmlNode newNode, XmlNode refNode) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimXHtmlAction.AllInstances.InterChangeXmlNodeXmlNode">
            <summary>设置 XHtmlAction.InterChange(XmlNode xNodeFirst, XmlNode xNodeLast) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimXHtmlAction.AllInstances.IsCurrentLangGet">
            <summary>设置 XHtmlAction.get_IsCurrentLang() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimXHtmlAction.AllInstances.IsCurrentLangSetBoolean">
            <summary>设置 XHtmlAction.set_IsCurrentLang(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimXHtmlAction.AllInstances.LoadDataMDataRow">
            <summary>设置 XHtmlAction.LoadData(MDataRow row) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimXHtmlAction.AllInstances.LoadDataMDataRowString">
            <summary>设置 XHtmlAction.LoadData(MDataRow row, String pre) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimXHtmlAction.AllInstances.LoadDataMDataTable">
            <summary>设置 XHtmlAction.LoadData(MDataTable table) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimXHtmlAction.AllInstances.LoadDataObject">
            <summary>设置 XHtmlAction.LoadData(Object anyObjToTable) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimXHtmlAction.AllInstances.LoadDataObjectString">
            <summary>设置 XHtmlAction.LoadData(Object anyObjToRow, String pre) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimXHtmlAction.AllInstances.OnForeachAddXHtmlActionSetForeachEventHandler">
            <summary>设置 XHtmlAction.add_OnForeach(SetForeachEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimXHtmlAction.AllInstances.OnForeachRemoveXHtmlActionSetForeachEventHandler">
            <summary>设置 XHtmlAction.remove_OnForeach(SetForeachEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimXHtmlAction.AllInstances.OutXmlGet">
            <summary>设置 XHtmlAction.get_OutXml() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimXHtmlAction.AllInstances.RemoveAllChildString">
            <summary>设置 XHtmlAction.RemoveAllChild(String idOrName) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimXHtmlAction.AllInstances.RemoveAllChildXmlNode">
            <summary>设置 XHtmlAction.RemoveAllChild(XmlNode node) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimXHtmlAction.AllInstances.RemoveAttrListStringArray">
            <summary>设置 XHtmlAction.RemoveAttrList(String[] attrNames) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimXHtmlAction.AllInstances.RemoveAttrListStringSetType">
            <summary>设置 XHtmlAction.RemoveAttrList(String attrName, SetType excludeSetType) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimXHtmlAction.AllInstances.RemoveAttrStringStringArray">
            <summary>设置 XHtmlAction.RemoveAttr(String idOrName, String[] attrNames) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimXHtmlAction.AllInstances.RemoveAttrXmlNodeStringArray">
            <summary>设置 XHtmlAction.RemoveAttr(XmlNode node, String[] attrNames) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimXHtmlAction.AllInstances.RemoveChildStringInt32">
            <summary>设置 XHtmlAction.RemoveChild(String idOrName, Int32 start) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimXHtmlAction.AllInstances.RemoveChildXmlNodeInt32">
            <summary>设置 XHtmlAction.RemoveChild(XmlNode node, Int32 start) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimXHtmlAction.AllInstances.RemoveCommentNode">
            <summary>设置 XHtmlAction.RemoveCommentNode() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimXHtmlAction.AllInstances.RemoveCommentNodeXmlNode">
            <summary>设置 XHtmlAction.RemoveCommentNode(XmlNode node) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimXHtmlAction.AllInstances.RemoveString">
            <summary>设置 XHtmlAction.Remove(String idOrName) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimXHtmlAction.AllInstances.RemoveXmlNode">
            <summary>设置 XHtmlAction.Remove(XmlNode node) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimXHtmlAction.AllInstances.ReplaceCustomFlagStringMDictionaryOfStringStringMDataRow">
            <summary>设置 XHtmlAction.ReplaceCustomFlag(String html, MDictionary`2&lt;String,String&gt; values, MDataRow row) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimXHtmlAction.AllInstances.ReplaceNodeXmlNodeString">
            <summary>设置 XHtmlAction.ReplaceNode(XmlNode newNode, String oldNodeIDorName) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimXHtmlAction.AllInstances.ReplaceNodeXmlNodeXmlNode">
            <summary>设置 XHtmlAction.ReplaceNode(XmlNode newNode, XmlNode oldNode) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimXHtmlAction.AllInstances.SetAttrValueXmlNodeStringString">
            <summary>设置 XHtmlAction.SetAttrValue(XmlNode node, String key, String value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimXHtmlAction.AllInstances.SetForString">
            <summary>设置 XHtmlAction.SetFor(String idOrName) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimXHtmlAction.AllInstances.SetForStringSetType">
            <summary>设置 XHtmlAction.SetFor(String idOrName, SetType setType) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimXHtmlAction.AllInstances.SetForStringSetTypeStringArray">
            <summary>设置 XHtmlAction.SetFor(String idOrName, SetType setType, String[] values) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimXHtmlAction.AllInstances.SetForeach">
            <summary>设置 XHtmlAction.SetForeach() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimXHtmlAction.AllInstances.SetForeachStringSetTypeObjectArray">
            <summary>设置 XHtmlAction.SetForeach(String idOrName, SetType setType, Object[] formatValues) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimXHtmlAction.AllInstances.SetForeachStringStringObjectArray">
            <summary>设置 XHtmlAction.SetForeach(String idOrName, String text, Object[] formatValues) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimXHtmlAction.AllInstances.SetForeachXmlNodeStringObjectArray">
            <summary>设置 XHtmlAction.SetForeach(XmlNode node, String text, Object[] formatValues) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimXHtmlAction.AllInstances.SetStringSetTypeStringArray">
            <summary>设置 XHtmlAction.Set(String idOrName, SetType setType, String[] values) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimXHtmlAction.AllInstances.SetStringString">
            <summary>设置 XHtmlAction.Set(String idOrName, String value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimXHtmlAction.AllInstances.SetValueStringStringBoolean">
            <summary>设置 XHtmlAction.SetValue(String sourceValue, String newValue, Boolean addCData) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimXHtmlAction.AllInstances.SetXmlNodeSetTypeStringArray">
            <summary>设置 XHtmlAction.Set(XmlNode node, SetType setType, String[] values) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimXHtmlAction.AllInstances.SetXmlNodeStringSetTypeStringArray">
            <summary>设置 XHtmlAction.Set(XmlNode parentNode, String idOrName, SetType setType, String[] values) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimXHtmlAction.AllInstances.SetXmlNodeStringString">
            <summary>设置 XHtmlAction.Set(XmlNode parentNode, String idOrName, String value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimXHtmlAction.AllInstances.ToJson">
            <summary>设置 XHtmlAction.ToJson() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimXHtmlAction.AllInstances.ToJsonXmlNodeBoolean">
            <summary>设置 XHtmlAction.ToJson(XmlNode parent, Boolean isWithAttr) 的 填充码</summary>
        </member>
        <member name="T:CYQ.Data.Xml.Fakes.ShimXHtmlBase">
            <summary>CYQ.Data.Xml.XHtmlBase 的填充码类型</summary>
        </member>
        <member name="M:CYQ.Data.Xml.Fakes.ShimXHtmlBase.#ctor(CYQ.Data.Xml.XHtmlBase)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:CYQ.Data.Xml.Fakes.ShimXHtmlBase.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:CYQ.Data.Xml.Fakes.ShimXHtmlBase.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:CYQ.Data.Xml.Fakes.ShimXHtmlBase.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimXHtmlBase.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimXHtmlBase.CacheMinutesGet">
            <summary>设置 XHtmlBase.get_CacheMinutes() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimXHtmlBase.ClearCDATAString">
            <summary>设置 XHtmlBase.ClearCDATA(String text) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimXHtmlBase.Constructor">
            <summary>设置 XHtmlBase.XHtmlBase() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimXHtmlBase.CreateString">
            <summary>设置 XHtmlBase.Create(String tag) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimXHtmlBase.Dispose">
            <summary>设置 XHtmlBase.Dispose() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimXHtmlBase.EncodingGet">
            <summary>设置 XHtmlBase.get_Encoding() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimXHtmlBase.EncodingSetEncoding">
            <summary>设置 XHtmlBase.set_Encoding(Encoding value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimXHtmlBase.FileNameGet">
            <summary>设置 XHtmlBase.get_FileName() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimXHtmlBase.FillStringXmlNode">
            <summary>设置 XHtmlBase.Fill(String xPath, XmlNode parent) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimXHtmlBase.FilterString">
            <summary>设置 XHtmlBase.Filter(String text) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimXHtmlBase.GenerateKeyString">
            <summary>设置 XHtmlBase.GenerateKey(String fileName) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimXHtmlBase.GetCloneFromXmlDocument">
            <summary>设置 XHtmlBase.GetCloneFrom(XmlDocument xDoc) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimXHtmlBase.GetXPathStringStringString">
            <summary>设置 XHtmlBase.GetXPath(String tag, String attr, String value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimXHtmlBase.IsEnCharChar">
            <summary>设置 XHtmlBase.IsEnChar(Char c) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimXHtmlBase.IsLoadFromCacheGet">
            <summary>设置 XHtmlBase.get_IsLoadFromCache() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimXHtmlBase.IsLoadFromCacheSetBoolean">
            <summary>设置 XHtmlBase.set_IsLoadFromCache(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimXHtmlBase.IsNoCloneGet">
            <summary>设置 XHtmlBase.get_IsNoClone() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimXHtmlBase.IsNoCloneSetBoolean">
            <summary>设置 XHtmlBase.set_IsNoClone(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimXHtmlBase.IsXHtmlChangedGet">
            <summary>设置 XHtmlBase.get_IsXHtmlChanged() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimXHtmlBase.LoadFromCacheString">
            <summary>设置 XHtmlBase.LoadFromCache(String key) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimXHtmlBase.LoadFromFileStringBoolean">
            <summary>设置 XHtmlBase.LoadFromFile(String fileName, Boolean clearCommentNode) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimXHtmlBase.LoadNameSpaceString">
            <summary>设置 XHtmlBase.LoadNameSpace(String nameSpace) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimXHtmlBase.LoadString">
            <summary>设置 XHtmlBase.Load(String fileName) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimXHtmlBase.LoadStringXmlCacheLevel">
            <summary>设置 XHtmlBase.Load(String fileName, XmlCacheLevel level) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimXHtmlBase.LoadStringXmlCacheLevelBoolean">
            <summary>设置 XHtmlBase.Load(String fileName, XmlCacheLevel level, Boolean clearCommentNode) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimXHtmlBase.LoadXmlString">
            <summary>设置 XHtmlBase.LoadXml(String xml) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimXHtmlBase.OutXmlGet">
            <summary>设置 XHtmlBase.get_OutXml() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimXHtmlBase.RemoveCommentNode">
            <summary>设置 XHtmlBase.RemoveCommentNode() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimXHtmlBase.Save">
            <summary>设置 XHtmlBase.Save() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimXHtmlBase.SaveString">
            <summary>设置 XHtmlBase.Save(String fileName) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimXHtmlBase.SaveToCacheStringBoolean">
            <summary>设置 XHtmlBase.SaveToCache(String key, Boolean isClone) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimXHtmlBase.SaveToCacheStringBooleanDouble">
            <summary>设置 XHtmlBase.SaveToCache(String key, Boolean isClone, Double cacheTimeMinutes) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimXHtmlBase.SelectStringXmlNode">
            <summary>设置 XHtmlBase.Select(String xPath, XmlNode parent) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimXHtmlBase.SetCDATAString">
            <summary>设置 XHtmlBase.SetCDATA(String text) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimXHtmlBase.StaticConstructor">
            <summary>设置 XHtmlBase.XHtmlBase() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimXHtmlBase.XmlDocGet">
            <summary>设置 XHtmlBase.get_XmlDoc() 的 填充码</summary>
        </member>
        <member name="T:CYQ.Data.Xml.Fakes.ShimXHtmlBase.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimXHtmlBase.AllInstances.CacheMinutesGet">
            <summary>设置 XHtmlBase.get_CacheMinutes() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimXHtmlBase.AllInstances.ClearCDATAString">
            <summary>设置 XHtmlBase.ClearCDATA(String text) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimXHtmlBase.AllInstances.CreateString">
            <summary>设置 XHtmlBase.Create(String tag) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimXHtmlBase.AllInstances.Dispose">
            <summary>设置 XHtmlBase.Dispose() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimXHtmlBase.AllInstances.EncodingGet">
            <summary>设置 XHtmlBase.get_Encoding() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimXHtmlBase.AllInstances.EncodingSetEncoding">
            <summary>设置 XHtmlBase.set_Encoding(Encoding value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimXHtmlBase.AllInstances.FileNameGet">
            <summary>设置 XHtmlBase.get_FileName() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimXHtmlBase.AllInstances.FillStringXmlNode">
            <summary>设置 XHtmlBase.Fill(String xPath, XmlNode parent) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimXHtmlBase.AllInstances.FilterString">
            <summary>设置 XHtmlBase.Filter(String text) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimXHtmlBase.AllInstances.GenerateKeyString">
            <summary>设置 XHtmlBase.GenerateKey(String fileName) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimXHtmlBase.AllInstances.GetCloneFromXmlDocument">
            <summary>设置 XHtmlBase.GetCloneFrom(XmlDocument xDoc) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimXHtmlBase.AllInstances.GetXPathStringStringString">
            <summary>设置 XHtmlBase.GetXPath(String tag, String attr, String value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimXHtmlBase.AllInstances.IsEnCharChar">
            <summary>设置 XHtmlBase.IsEnChar(Char c) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimXHtmlBase.AllInstances.IsLoadFromCacheGet">
            <summary>设置 XHtmlBase.get_IsLoadFromCache() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimXHtmlBase.AllInstances.IsLoadFromCacheSetBoolean">
            <summary>设置 XHtmlBase.set_IsLoadFromCache(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimXHtmlBase.AllInstances.IsNoCloneGet">
            <summary>设置 XHtmlBase.get_IsNoClone() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimXHtmlBase.AllInstances.IsNoCloneSetBoolean">
            <summary>设置 XHtmlBase.set_IsNoClone(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimXHtmlBase.AllInstances.IsXHtmlChangedGet">
            <summary>设置 XHtmlBase.get_IsXHtmlChanged() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimXHtmlBase.AllInstances.LoadFromCacheString">
            <summary>设置 XHtmlBase.LoadFromCache(String key) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimXHtmlBase.AllInstances.LoadFromFileStringBoolean">
            <summary>设置 XHtmlBase.LoadFromFile(String fileName, Boolean clearCommentNode) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimXHtmlBase.AllInstances.LoadNameSpaceString">
            <summary>设置 XHtmlBase.LoadNameSpace(String nameSpace) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimXHtmlBase.AllInstances.LoadString">
            <summary>设置 XHtmlBase.Load(String fileName) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimXHtmlBase.AllInstances.LoadStringXmlCacheLevel">
            <summary>设置 XHtmlBase.Load(String fileName, XmlCacheLevel level) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimXHtmlBase.AllInstances.LoadStringXmlCacheLevelBoolean">
            <summary>设置 XHtmlBase.Load(String fileName, XmlCacheLevel level, Boolean clearCommentNode) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimXHtmlBase.AllInstances.LoadXmlString">
            <summary>设置 XHtmlBase.LoadXml(String xml) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimXHtmlBase.AllInstances.OutXmlGet">
            <summary>设置 XHtmlBase.get_OutXml() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimXHtmlBase.AllInstances.RemoveCommentNode">
            <summary>设置 XHtmlBase.RemoveCommentNode() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimXHtmlBase.AllInstances.Save">
            <summary>设置 XHtmlBase.Save() 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimXHtmlBase.AllInstances.SaveString">
            <summary>设置 XHtmlBase.Save(String fileName) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimXHtmlBase.AllInstances.SaveToCacheStringBoolean">
            <summary>设置 XHtmlBase.SaveToCache(String key, Boolean isClone) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimXHtmlBase.AllInstances.SaveToCacheStringBooleanDouble">
            <summary>设置 XHtmlBase.SaveToCache(String key, Boolean isClone, Double cacheTimeMinutes) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimXHtmlBase.AllInstances.SelectStringXmlNode">
            <summary>设置 XHtmlBase.Select(String xPath, XmlNode parent) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimXHtmlBase.AllInstances.SetCDATAString">
            <summary>设置 XHtmlBase.SetCDATA(String text) 的 填充码</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.ShimXHtmlBase.AllInstances.XmlDocGet">
            <summary>设置 XHtmlBase.get_XmlDoc() 的 填充码</summary>
        </member>
        <member name="T:CYQ.Data.Xml.Fakes.StubMutilLanguage">
            <summary>CYQ.Data.Xml.MutilLanguage 的存根类型</summary>
        </member>
        <member name="M:CYQ.Data.Xml.Fakes.StubMutilLanguage.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:CYQ.Data.Xml.Fakes.StubMutilLanguage.#ctor(System.String,System.Boolean)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:CYQ.Data.Xml.Fakes.StubMutilLanguage.#ctor(System.String,System.Boolean,System.Boolean)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:CYQ.Data.Xml.Fakes.StubMutilLanguage.InitializeStub">
            <summary>初始化 type StubMutilLanguage 的新实例</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.StubMutilLanguage.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.StubMutilLanguage.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.StubMutilLanguage.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:CYQ.Data.Xml.Fakes.StubRss">
            <summary>CYQ.Data.Xml.Rss 的存根类型</summary>
        </member>
        <member name="M:CYQ.Data.Xml.Fakes.StubRss.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:CYQ.Data.Xml.Fakes.StubRss.InitializeStub">
            <summary>初始化 type StubRss 的新实例</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.StubRss.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.StubRss.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.StubRss.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:CYQ.Data.Xml.Fakes.StubRssChannel">
            <summary>CYQ.Data.Xml.RssChannel 的存根类型</summary>
        </member>
        <member name="M:CYQ.Data.Xml.Fakes.StubRssChannel.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:CYQ.Data.Xml.Fakes.StubRssChannel.InitializeStub">
            <summary>初始化 type StubRssChannel 的新实例</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.StubRssChannel.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.StubRssChannel.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.StubRssChannel.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:CYQ.Data.Xml.Fakes.StubRssImage">
            <summary>CYQ.Data.Xml.RssImage 的存根类型</summary>
        </member>
        <member name="M:CYQ.Data.Xml.Fakes.StubRssImage.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:CYQ.Data.Xml.Fakes.StubRssImage.InitializeStub">
            <summary>初始化 type StubRssImage 的新实例</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.StubRssImage.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.StubRssImage.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.StubRssImage.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:CYQ.Data.Xml.Fakes.StubRssItem">
            <summary>CYQ.Data.Xml.RssItem 的存根类型</summary>
        </member>
        <member name="M:CYQ.Data.Xml.Fakes.StubRssItem.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:CYQ.Data.Xml.Fakes.StubRssItem.InitializeStub">
            <summary>初始化 type StubRssItem 的新实例</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.StubRssItem.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.StubRssItem.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.StubRssItem.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:CYQ.Data.Xml.Fakes.StubValueReplace">
            <summary>CYQ.Data.Xml.ValueReplace 的存根类型</summary>
        </member>
        <member name="M:CYQ.Data.Xml.Fakes.StubValueReplace.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:CYQ.Data.Xml.Fakes.StubValueReplace.InitializeStub">
            <summary>初始化 type StubValueReplace 的新实例</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.StubValueReplace.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.StubValueReplace.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.StubValueReplace.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:CYQ.Data.Xml.Fakes.StubXHtmlAction">
            <summary>CYQ.Data.Xml.XHtmlAction 的存根类型</summary>
        </member>
        <member name="M:CYQ.Data.Xml.Fakes.StubXHtmlAction.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:CYQ.Data.Xml.Fakes.StubXHtmlAction.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:CYQ.Data.Xml.Fakes.StubXHtmlAction.#ctor(System.Boolean)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:CYQ.Data.Xml.Fakes.StubXHtmlAction.#ctor(System.Boolean,System.Boolean)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:CYQ.Data.Xml.Fakes.StubXHtmlAction.Dispose">
            <summary>设置 XHtmlAction.Dispose() 的 存根</summary>
        </member>
        <member name="F:CYQ.Data.Xml.Fakes.StubXHtmlAction.Dispose01">
            <summary>设置 XHtmlAction.Dispose() 的 stub</summary>
        </member>
        <member name="M:CYQ.Data.Xml.Fakes.StubXHtmlAction.InitializeStub">
            <summary>初始化 type StubXHtmlAction 的新实例</summary>
        </member>
        <member name="F:CYQ.Data.Xml.Fakes.StubXHtmlAction.OutXmlGet">
            <summary>设置 XHtmlAction.get_OutXml() 的 stub</summary>
        </member>
        <member name="M:CYQ.Data.Xml.Fakes.StubXHtmlAction.RemoveCommentNode">
            <summary>设置 XHtmlAction.RemoveCommentNode() 的 存根</summary>
        </member>
        <member name="F:CYQ.Data.Xml.Fakes.StubXHtmlAction.RemoveCommentNode01">
            <summary>设置 XHtmlAction.RemoveCommentNode() 的 stub</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.StubXHtmlAction.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.StubXHtmlAction.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.StubXHtmlAction.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.StubXHtmlAction.OutXml">
            <summary>设置 XHtmlAction.get_OutXml() 的 stub</summary>
        </member>
        <member name="T:CYQ.Data.Xml.Fakes.StubXHtmlBase">
            <summary>CYQ.Data.Xml.XHtmlBase 的存根类型</summary>
        </member>
        <member name="M:CYQ.Data.Xml.Fakes.StubXHtmlBase.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:CYQ.Data.Xml.Fakes.StubXHtmlBase.Dispose">
            <summary>设置 XHtmlBase.Dispose() 的 存根</summary>
        </member>
        <member name="F:CYQ.Data.Xml.Fakes.StubXHtmlBase.Dispose01">
            <summary>设置 XHtmlBase.Dispose() 的 stub</summary>
        </member>
        <member name="M:CYQ.Data.Xml.Fakes.StubXHtmlBase.InitializeStub">
            <summary>初始化 type StubXHtmlBase 的新实例</summary>
        </member>
        <member name="F:CYQ.Data.Xml.Fakes.StubXHtmlBase.OutXmlGet">
            <summary>设置 XHtmlBase.get_OutXml() 的 stub</summary>
        </member>
        <member name="M:CYQ.Data.Xml.Fakes.StubXHtmlBase.RemoveCommentNode">
            <summary>设置 XHtmlBase.RemoveCommentNode() 的 存根</summary>
        </member>
        <member name="F:CYQ.Data.Xml.Fakes.StubXHtmlBase.RemoveCommentNode01">
            <summary>设置 XHtmlBase.RemoveCommentNode() 的 stub</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.StubXHtmlBase.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.StubXHtmlBase.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.StubXHtmlBase.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:CYQ.Data.Xml.Fakes.StubXHtmlBase.OutXml">
            <summary>设置 XHtmlBase.get_OutXml() 的 stub</summary>
        </member>
        <member name="T:Microsoft.QualityTools.Testing.Fakes.Delegates.CYQDataDelegates">
            <summary>包含用于 CYQ.Data 的存根和填充码的自定义委托</summary>
        </member>
    </members>
</doc>
